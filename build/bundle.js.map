{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./css/ol.css","webpack:///./css/common.css","webpack:///./src/ol/compenents/controls/overviewMap/OverviewMapControl.css","webpack:///./src/ol/plugins/zoomSlider/BZoomSlider.css","webpack:///./css/ol.css?74f7","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./css/common.css?c9a3","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./src/ol/compenents/controls/overviewMap/OverviewMapControl.css?4d94","webpack:///./src/ol/plugins/zoomSlider/BZoomSlider.css?abc7","webpack:///./node_modules/css-loader/dist/runtime/url-escape.js","webpack:///./src/ol/plugins/zoomSlider/images/slider.png","webpack:///./src/ol/config/config.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./src/ol/compenents/Map.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol/control/OverviewMap.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./src/ol/plugins/zoomSlider/BZoomSlider.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./src/ol/compenents/controls/Draw/DrawControl.js","webpack:///./main.js","webpack:///./src/ol/compenents/Layers/ArcGISTileLayer.js","webpack:///./src/ol/compenents/controls/overviewMap/OverviewMapControl.js","webpack:///./src/ol/compenents/controls/scalebar/ScaleBar.js","webpack:///./src/ol/compenents/controls/zoomSlider/ZoomSlider.js","webpack:///./src/ol/compenents/task/DrawTask.js"],"names":["parentHotUpdateCallback","window","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","moduleId","Object","prototype","hasOwnProperty","call","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","t","mode","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","accept","dep","callback","undefined","i","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","status","l","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","newStatus","hotDeferred","hotUpdateNewHash","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","p","open","timeout","send","onreadystatechange","readyState","update","JSON","parse","responseText","c","h","promise","script","document","createElement","charset","src","head","appendChild","hotDownloadUpdateChunk","deferred","result","outdatedModules","options","cb","j","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","type","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","child","modules","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","exports","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","items","equalsFn","calcBBox","node","toBBox","distBBox","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","extend","leaf","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","all","_all","search","bbox","len","childBBox","nodesToSearch","collides","load","insert","_build","_splitRoot","tmpNode","_insert","remove","index","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","log","pow","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","useSourceMap","list","toString","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","stringify","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","memo","stylesInDom","isOldIE","atob","arguments","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","el","setAttribute","obj","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","cssNode","childNodes","___CSS_LOADER_URL___0___","urlEscape","hmr","locals","newContent","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","url","needQuotes","config","mapConfig","center","projection","zoom","LayersURL","TiledMapServiceLayerURL","TDTCVALayerURL","ImageWMSSource","params","LAYERS","serverType","crossOrigin","WMTSSource","FORMAT","VERSION","tiled","STYLES","blobStoreLayerSource","util_abstract","uidCounter_","getUid","ol_uid","String","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","arguments$1","TypeError","output","ii","obj_clear","getValues","values","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","events_listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","Disposable_Disposable","disposed_","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","Array","isArray","once","un","ObjectEvent","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","f","array","getArray","elem","removeAt","prev","setAt","opt_except","ol_MapEvent","MapEvent","opt_frameState","frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","getContext","setLineDash","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","end","extension","equals","arr1","arr2","len1","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","none","disable","rotation","delta","rotationconstraint_none","ViewHint","ViewProperty","add","coordinate_rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getCorner","corner","getForViewAndSize","resolution","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","proj_getTransform","proj_transform","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","tmpTransform","getStrideForLayout","layout","geom_SimpleGeometry","Geometry","SimpleGeometry","computeExtent","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","applyTransform","rotate","anchor","anchorX","anchorY","transform_rotate","opt_sy","opt_anchor","transform_scale","translate","transform_translate","extentRevision_","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","makeRegular","polygon","opt_angle","sides","startAngle","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinate1","coordinate2","coordinate_equals","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getCenter","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","replaceChild","removeNode","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_Property","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","hasArea","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","zoomByDelta","zoomWithoutConstraints","interaction_Interaction","Interaction","setActive","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ERROR_THRESHOLD","ImageState","ol_ImageCanvas","ImageBase","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","getImage","getPixelRatio","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","body","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","cacheSize","normalize","g","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","MapRenderer","CanvasMapRenderer","getTransform","composeEvent","clearRect","calculateMatrices2D","compareFnc","stableSort","save","viewResolution","layerRenderer","getLayerRenderer","prepareFrame","composeFrame","restore","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","thisArg","thisArg2","numLayers","forEachLayerAtCoordinate","registerLayerRenderers","constructors","ctor","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","mat","det","invert","removeLayerRendererByKey_","translatedCoordinate","projectionExtent","worldWidth","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textStates","cc","chars","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","compenents_Map","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","Triangulation_Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","TileGrid_TileGrid","opt_strict","every","currentVal","res","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","ratio","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","TileEventType","defaultTileLoadFunction","imageTile","source_XYZ","TileImage","xyzOptions","gridOptions","createXYZ","reprojectionErrorThreshold","tileUrlFunction","urls","UrlTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","html","BASE_CLASS_NAME","Direction_","VERTICAL","HORIZONTAL","BZoomSlider_BZoomSlider","[object Object]","currentResolution_","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","viewHint","ANIMATING","INTERACTING","translateContent","silderContent","translateN","listen","handletranslateClick_","translateS","translateW","translateE","zoomIn","handleZoomClick_","zoomOut","slider","sliderBackgroundTop","sliderBackgroundBottom","sliderBar","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","optDuration","initSlider_","setThumbPosition_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","getPositionForResolution_","amount","optPower","addClass","root","_root","RegExp","getElementsByClassName","getElementsByTagName","querySelectorAll","Element","isString","cls","curClass","classes","clsName","hasClass","getuuid","str","substr","random","unListenByKey","optThis","optSetDeleteIndex","vlm","optOnce","stamp","eventKey","getDomEventKey","attachEvent","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","createStyleFunction","setId","Circle_Circle","setCenterAndRadius","getRadius","getRadiusSquared_","setRadius","geom_Circle","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","geom_MultiPoint","appendPoint","getPoint","getPoints","points","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","style_Circle","RegularShape","CircleStyle","atlasManager","atlasManager_","radius_","ImageStyle","checksums_","hitDetectionCanvas_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","toFunction","Vector","FormatType","ARRAY_BUFFER","XML","featureloader_xhr","success","failure","xhr","responseType","onload","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","source_Vector","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw_Mode","DrawEventType","DrawEvent","createRegularPolygon","opt_sides","opt_geometry","circle","arrayLength","fromCircle","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","DrawControl_DrawControl","param","drawControl","boxCoordinates","newCoordinates","arcGISTileLayers","ArcGISTileLayers","overviewMapControl","scaleBarControl","zoomSildweControl","drawToolbar","getTileLayers","super","getInteraction","getControl","getDrawToolBar"],"mappings":"aAGA,IAAAA,EAAAC,OAAA,iBACAA,OAAA,iBACA,SAAAC,EAAAC,IAgRA,SAAAD,EAAAC,GACA,IAAAC,EAAAF,KAAAG,EAAAH,GACA,OAEA,QAAAI,KADAD,EAAAH,IAAA,EACAC,EACAI,OAAAC,UAAAC,eAAAC,KAAAP,EAAAG,KACAK,EAAAL,GAAAH,EAAAG,IAGA,KAAAM,GAAA,IAAAC,GACAC,IAzRAC,CAAAb,EAAAC,GACAH,KAAAE,EAAAC,IAuDA,IAKAa,EALAC,GAAA,EAEAC,EAAA,uBACAC,EAAA,IACAC,EAAA,GAGAC,EAAA,GAEAC,EAAA,GAGA,SAAAC,EAAAjB,GACA,IAAAkB,EAAAC,EAAAnB,GACA,IAAAkB,EAAA,OAAAE,EACA,IAAAC,EAAA,SAAAC,GAsBA,OArBAJ,EAAAK,IAAAC,QACAL,EAAAG,IACA,IAAAH,EAAAG,GAAAG,QAAAC,QAAA1B,IACAmB,EAAAG,GAAAG,QAAAE,KAAA3B,IAGAe,EAAA,CAAAf,GACAU,EAAAY,IAEA,IAAAJ,EAAAU,SAAAF,QAAAJ,IACAJ,EAAAU,SAAAD,KAAAL,KAGAO,QAAAC,KACA,4BACAR,EACA,0BACAtB,GAEAe,EAAA,IAEAK,EAAAE,IAEAS,EAAA,SAAAC,GACA,OACAC,cAAA,EACAC,YAAA,EACAC,IAAA,WACA,OAAAf,EAAAY,IAEAI,IAAA,SAAAC,GACAjB,EAAAY,GAAAK,KAIA,QAAAL,KAAAZ,EAEAnB,OAAAC,UAAAC,eAAAC,KAAAgB,EAAAY,IACA,MAAAA,GACA,MAAAA,GAEA/B,OAAAqC,eAAAjB,EAAAW,EAAAD,EAAAC,IA2BA,OAxBAX,EAAAkB,EAAA,SAAA3C,GAGA,MAFA,UAAA4C,GAAAC,EAAA,WACAlC,IACAa,EAAAmB,EAAA3C,GAAA8C,KAAAC,EAAA,SAAAC,GAEA,MADAD,IACAC,IAGA,SAAAD,IACApC,IACA,YAAAiC,IACAK,EAAAjD,IACAkD,EAAAlD,GAEA,IAAAW,GAAA,IAAAD,GACAE,OAKAa,EAAA0B,EAAA,SAAAV,EAAAW,GAEA,OADA,EAAAA,IAAAX,EAAAhB,EAAAgB,IACAjB,EAAA2B,EAAAV,GAAA,EAAAW,IAEA3B,EAIA,SAAA4B,EAAAjD,GACA,IAAAuB,EAAA,CAEA2B,sBAAA,GACAC,sBAAA,GACAC,eAAA,EACAC,eAAA,EACAC,iBAAA,GACAC,MAAA7C,IAAAV,EAGAwB,QAAA,EACAgC,OAAA,SAAAC,EAAAC,GACA,QAAAC,IAAAF,EAAAlC,EAAA6B,eAAA,OACA,sBAAAK,EAAAlC,EAAA6B,cAAAK,OACA,oBAAAA,EACA,QAAAG,EAAA,EAAqBA,EAAAH,EAAAI,OAAgBD,IACrCrC,EAAA2B,sBAAAO,EAAAG,IAAAF,GAAA,kBACAnC,EAAA2B,sBAAAO,GAAAC,GAAA,cAEAI,QAAA,SAAAL,GACA,QAAAE,IAAAF,EAAAlC,EAAA8B,eAAA,OACA,oBAAAI,EACA,QAAAG,EAAA,EAAqBA,EAAAH,EAAAI,OAAgBD,IACrCrC,EAAA4B,sBAAAM,EAAAG,KAAA,OACArC,EAAA4B,sBAAAM,IAAA,GAEAM,QAAA,SAAAL,GACAnC,EAAA+B,iBAAA3B,KAAA+B,IAEAM,kBAAA,SAAAN,GACAnC,EAAA+B,iBAAA3B,KAAA+B,IAEAO,qBAAA,SAAAP,GACA,IAAAQ,EAAA3C,EAAA+B,iBAAA5B,QAAAgC,GACAQ,GAAA,GAAA3C,EAAA+B,iBAAAa,OAAAD,EAAA,IAIAE,MAAAC,EACAC,MAAAC,EACAC,OAAA,SAAAC,GACA,IAAAA,EAAA,OAAAjC,EACAkC,EAAA/C,KAAA8C,IAEAE,iBAAA,SAAAF,GACAC,EAAA/C,KAAA8C,IAEAG,oBAAA,SAAAH,GACA,IAAAP,EAAAQ,EAAAhD,QAAA+C,GACAP,GAAA,GAAAQ,EAAAP,OAAAD,EAAA,IAIAW,KAAA/D,EAAAd,IAGA,OADAU,OAAAiD,EACApC,EAGA,IAAAmD,EAAA,GACAlC,EAAA,OAEA,SAAAC,EAAAqC,GACAtC,EAAAsC,EACA,QAAAlB,EAAA,EAAkBA,EAAAc,EAAAb,OAA8BD,IAChDc,EAAAd,GAAAxD,KAAA,KAAA0E,GAIA,IAKAC,EAGA1E,EAAA2E,EARA1E,EAAA,EACAC,EAAA,EACAsC,EAAA,GACA9C,EAAA,GACAD,EAAA,GAMA,SAAAmF,EAAAC,GAEA,OADAA,EAAA,KAAAA,GACAA,IAGA,SAAAb,EAAAC,GACA,YAAA9B,EACA,UAAA2C,MAAA,0CAIA,OAFAxE,EAAA2D,EACA7B,EAAA,UA5NA2C,EA6NAvE,EA5NAuE,KAAA,IACA,IAAAC,QAAA,SAAAC,EAAAC,GACA,uBAAAC,eACA,OAAAD,EAAA,IAAAJ,MAAA,uBAEA,IACA,IAAA7D,EAAA,IAAAkE,eACAC,EAAArE,EAAAsE,EAAA,GAAA9E,EAAA,mBACAU,EAAAqE,KAAA,MAAAF,GAAA,GACAnE,EAAAsE,QAAAR,EACA9D,EAAAuE,KAAA,MACK,MAAAjD,GACL,OAAA2C,EAAA3C,GAEAtB,EAAAwE,mBAAA,WACA,OAAAxE,EAAAyE,WACA,OAAAzE,EAAAkD,OAEAe,EACA,IAAAJ,MAAA,uBAAAM,EAAA,qBAEM,SAAAnE,EAAAkD,OAENc,SACM,SAAAhE,EAAAkD,QAAA,MAAAlD,EAAAkD,OAENe,EAAA,IAAAJ,MAAA,uBAAAM,EAAA,iBACM,CAEN,IACA,IAAAO,EAAAC,KAAAC,MAAA5E,EAAA6E,cACO,MAAA5D,GAEP,YADAgD,EAAAhD,GAGA+C,EAAAU,QAyLAtD,KAAA,SAAAsD,GACA,IAAAA,EAEA,OADAvD,EAAA,QACA,KAEA1C,EAAA,GACA8C,EAAA,GACA/C,EAAAkG,EAAAI,EACApB,EAAAgB,EAAAK,EAEA5D,EAAA,WACA,IAAA6D,EAAA,IAAAjB,QAAA,SAAAC,EAAAC,GACAR,EAAA,CACAO,UACAC,YAGAlF,EAAA,GAcA,OATAyC,EAJA,GAOA,YAAAN,GACA,IAAAjC,GACA,IAAAD,GAEAE,IAEA8F,IA5PA,IAAAlB,EA+QA,SAAAtC,EAAAlD,GACAE,EAAAF,IAGAG,EAAAH,IAAA,EACAU,IA7RA,SAAAV,GACA,IAAA2G,EAAAC,SAAAC,cAAA,UACAF,EAAAG,QAAA,QACAH,EAAAI,IAAAvF,EAAAsE,EAAA,GAAA9F,EAAA,IAAAgB,EAAA,iBAEA4F,SAAAI,KAAAC,YAAAN,GAyRAO,CAAAlH,IAJAiD,EAAAjD,IAAA,EAQA,SAAAY,IACAiC,EAAA,SACA,IAAAsE,EAAAhC,EAEA,GADAA,EAAA,KACAgC,EACA,GAAApG,EAIA0E,QAAAC,UACA5C,KAAA,WACA,OAAA6B,EAAA5D,KAEA+B,KACA,SAAAsE,GACAD,EAAAzB,QAAA0B,IAEA,SAAApE,GACAmE,EAAAxB,OAAA3C,SAGI,CACJ,IAAAqE,EAAA,GACA,QAAA/B,KAAA7E,EACAJ,OAAAC,UAAAC,eAAAC,KAAAC,EAAA6E,IACA+B,EAAAtF,KAAAsD,EAAAC,IAGA6B,EAAAzB,QAAA2B,IAIA,SAAA1C,EAAA2C,GACA,aAAA1E,EACA,UAAA2C,MAAA,2CAGA,IAAAgC,EACAvD,EACAwD,EACAC,EACArH,EAEA,SAAAsH,EAAAC,GAUA,IATA,IAAAN,EAAA,CAAAM,GACAC,EAAA,GAEAC,EAAAR,EAAAS,QAAAC,IAAA,SAAAzC,GACA,OACA0C,MAAA,CAAA1C,GACAA,QAGAuC,EAAA5D,OAAA,IACA,IAAAgE,EAAAJ,EAAAK,MACA9H,EAAA6H,EAAA3C,GACA0C,EAAAC,EAAAD,MAEA,IADAP,EAAAlG,EAAAnB,MACAqH,EAAA9F,IAAA6B,cAAA,CACA,GAAAiE,EAAA9F,IAAA8B,cACA,OACA0E,KAAA,gBACAH,QACA5H,YAGA,GAAAqH,EAAA9F,IAAAgC,MACA,OACAwE,KAAA,aACAH,QACA5H,YAGA,QAAA4D,EAAA,EAAoBA,EAAAyD,EAAA5F,QAAAoC,OAA2BD,IAAA,CAC/C,IAAAoE,EAAAX,EAAA5F,QAAAmC,GACAqE,EAAA9G,EAAA6G,GACA,GAAAC,EAAA,CACA,GAAAA,EAAA1G,IAAA4B,sBAAAnD,GACA,OACA+H,KAAA,WACAH,QAAAM,OAAA,CAAAF,IACAhI,WACAgI,aAGA,IAAAf,EAAAvF,QAAAsG,KACAC,EAAA1G,IAAA2B,sBAAAlD,IACAwH,EAAAQ,KACAR,EAAAQ,GAAA,IACAG,EAAAX,EAAAQ,GAAA,CAAAhI,aAGAwH,EAAAQ,GACAf,EAAAtF,KAAAqG,GACAP,EAAA9F,KAAA,CACAiG,QAAAM,OAAA,CAAAF,IACA9C,GAAA8C,SAKA,OACAD,KAAA,WACA/H,SAAAuH,EACAN,kBACAO,wBAIA,SAAAW,EAAAC,EAAAC,GACA,QAAAzE,EAAA,EAAmBA,EAAAyE,EAAAxE,OAAcD,IAAA,CACjC,IAAA0E,EAAAD,EAAAzE,IACA,IAAAwE,EAAA1G,QAAA4G,IAAAF,EAAAzG,KAAA2G,IA7EApB,KAAA,GAmFA,IAAAM,EAAA,GACAP,EAAA,GACAsB,EAAA,GAEAC,EAAA,WACA3G,QAAAC,KACA,4BAAAkF,EAAAhH,SAAA,yBAIA,QAAAkF,KAAA7E,EACA,GAAAJ,OAAAC,UAAAC,eAAAC,KAAAC,EAAA6E,GAAA,CAGA,IAAA8B,EAFAhH,EAAAiF,EAAAC,GAYA,IAAAuD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,GAIA,QAfA5B,EADA3G,EAAA6E,GACAoC,EAAAtH,GAEA,CACA+H,KAAA,WACA/H,SAAAkF,IAQA0C,QACAgB,EAAA,yBAAA5B,EAAAY,MAAAiB,KAAA,SAEA7B,EAAAe,MACA,oBACAb,EAAA4B,YAAA5B,EAAA4B,WAAA9B,GACAE,EAAA6B,iBACAN,EAAA,IAAAtD,MACA,oCACA6B,EAAAhH,SACA4I,IAEA,MACA,eACA1B,EAAA4B,YAAA5B,EAAA4B,WAAA9B,GACAE,EAAA6B,iBACAN,EAAA,IAAAtD,MACA,2CACA6B,EAAAhH,SACA,OACAgH,EAAAgB,SACAY,IAEA,MACA,iBACA1B,EAAA8B,cAAA9B,EAAA8B,aAAAhC,GACAE,EAAA+B,mBACAR,EAAA,IAAAtD,MACA,mBAAAnF,EAAA,mBAAA4I,IAEA,MACA,eACA1B,EAAAgC,YAAAhC,EAAAgC,WAAAlC,GACA0B,GAAA,EACA,MACA,eACAxB,EAAAiC,YAAAjC,EAAAiC,WAAAnC,GACA2B,GAAA,EACA,MACA,QACA,UAAAxD,MAAA,oBAAA6B,EAAAe,MAEA,GAAAU,EAEA,OADAhG,EAAA,SACA4C,QAAAE,OAAAkD,GAEA,GAAAC,EAGA,IAAA1I,KAFAuI,EAAAvI,GAAAK,EAAAL,GACAmI,EAAAlB,EAAAD,EAAAC,iBACAD,EAAAQ,qBAEAvH,OAAAC,UAAAC,eAAAC,KACA4G,EAAAQ,qBACAxH,KAGAwH,EAAAxH,KACAwH,EAAAxH,GAAA,IACAmI,EACAX,EAAAxH,GACAgH,EAAAQ,qBAAAxH,KAKA2I,IACAR,EAAAlB,EAAA,CAAAD,EAAAhH,WACAuI,EAAAvI,GAAAwI,GAMA,IAqBAtE,EArBAkF,EAAA,GACA,IAAAxF,EAAA,EAAcA,EAAAqD,EAAApD,OAA4BD,IAC1C5D,EAAAiH,EAAArD,GAEAzC,EAAAnB,IACAmB,EAAAnB,GAAAuB,IAAA6B,eAEAgG,EAAAzH,KAAA,CACA0F,OAAArH,EACAqJ,aAAAlI,EAAAnB,GAAAuB,IAAA6B,gBAKAX,EAAA,WACAxC,OAAAqJ,KAAAxJ,GAAAyJ,QAAA,SAAA3J,IACA,IAAAE,EAAAF,IAxhBA,SAAAA,UACA4J,gBAAA5J,GAwhBA6J,CAAA7J,KAMA,IADA,IAqCA8J,EACAC,EAtCAlC,EAAAR,EAAAS,QACAD,EAAA5D,OAAA,GAGA,GAFA7D,EAAAyH,EAAAK,MACAT,EAAAlG,EAAAnB,GACA,CAEA,IAAA6E,EAAA,GAGA+E,EAAAvC,EAAA9F,IAAA+B,iBACA,IAAA8D,EAAA,EAAeA,EAAAwC,EAAA/F,OAA4BuD,KAC3CD,EAAAyC,EAAAxC,IACAvC,GAcA,IAZA/D,EAAAd,GAAA6E,EAGAwC,EAAA9F,IAAAC,QAAA,SAGAL,EAAAnB,UAGAwH,EAAAxH,GAGAoH,EAAA,EAAeA,EAAAC,EAAAzF,SAAAiC,OAA4BuD,IAAA,CAC3C,IAAAyC,EAAA1I,EAAAkG,EAAAzF,SAAAwF,IACAyC,KACA3F,EAAA2F,EAAApI,QAAAC,QAAA1B,KACA,GACA6J,EAAApI,QAAA0C,OAAAD,EAAA,KAQA,IAAAlE,KAAAwH,EACA,GACAvH,OAAAC,UAAAC,eAAAC,KAAAoH,EAAAxH,KAEAqH,EAAAlG,EAAAnB,IAGA,IADA2J,EAAAnC,EAAAxH,GACAoH,EAAA,EAAiBA,EAAAuC,EAAA9F,OAAuCuD,IACxDsC,EAAAC,EAAAvC,IACAlD,EAAAmD,EAAAzF,SAAAF,QAAAgI,KACA,GAAArC,EAAAzF,SAAAuC,OAAAD,EAAA,GAYA,IAAAlE,KALAyC,EAAA,SAEA7B,EAAAoE,EAGAuD,EACAtI,OAAAC,UAAAC,eAAAC,KAAAmI,EAAAvI,KACA8J,EAAA9J,GAAAuI,EAAAvI,IAKA,IAAA+J,EAAA,KACA,IAAA/J,KAAAwH,EACA,GACAvH,OAAAC,UAAAC,eAAAC,KAAAoH,EAAAxH,KAEAqH,EAAAlG,EAAAnB,IACA,CACA2J,EAAAnC,EAAAxH,GACA,IAAAgK,EAAA,GACA,IAAApG,EAAA,EAAiBA,EAAA+F,EAAA9F,OAAuCD,IAGxD,GAFA8F,EAAAC,EAAA/F,GACAuD,EAAAE,EAAA9F,IAAA2B,sBAAAwG,GACA,CACA,QAAAM,EAAAtI,QAAAyF,GAAA,SACA6C,EAAArI,KAAAwF,GAGA,IAAAvD,EAAA,EAAiBA,EAAAoG,EAAAnG,OAAsBD,IAAA,CACvCuD,EAAA6C,EAAApG,GACA,IACAuD,EAAAwC,GACQ,MAAA/G,GACRsE,EAAA+C,WACA/C,EAAA+C,UAAA,CACAlC,KAAA,iBACA/H,WACAkK,aAAAP,EAAA/F,GACAmG,MAAAnH,IAGAsE,EAAAiD,eACAJ,MAAAnH,KASA,IAAAgB,EAAA,EAAcA,EAAAwF,EAAAvF,OAAwCD,IAAA,CACtD,IAAA0E,EAAAc,EAAAxF,GACA5D,EAAAsI,EAAAjB,OACAtG,EAAA,CAAAf,GACA,IACAoB,EAAApB,GACK,MAAA4C,GACL,sBAAA0F,EAAAe,aACA,IACAf,EAAAe,aAAAzG,GACO,MAAAwH,GACPlD,EAAA+C,WACA/C,EAAA+C,UAAA,CACAlC,KAAA,oCACA/H,WACA+J,MAAAK,EACAC,cAAAzH,IAGAsE,EAAAiD,eACAJ,MAAAK,GAEAL,MAAAnH,QAGAsE,EAAA+C,WACA/C,EAAA+C,UAAA,CACAlC,KAAA,sBACA/H,WACA+J,MAAAnH,IAGAsE,EAAAiD,eACAJ,MAAAnH,IAOA,OAAAmH,GACAtH,EAAA,QACA4C,QAAAE,OAAAwE,KAGAtH,EAAA,QACA,IAAA4C,QAAA,SAAAC,GACAA,EAAA2B,MAKA,IAAA9F,EAAA,GAGA,SAAAC,EAAApB,GAGA,GAAAmB,EAAAnB,GACA,OAAAmB,EAAAnB,GAAAsK,QAGA,IAAAjD,EAAAlG,EAAAnB,GAAA,CACA4D,EAAA5D,EACAyE,GAAA,EACA6F,QAAA,GACA/I,IAAA0B,EAAAjD,GACAyB,SAAAT,EAAAD,IAAA,GAAAC,GACAY,SAAA,IAUA,OANAkI,EAAA9J,GAAAI,KAAAiH,EAAAiD,QAAAjD,IAAAiD,QAAArJ,EAAAjB,IAGAqH,EAAA5C,GAAA,EAGA4C,EAAAiD,QAKAlJ,EAAAmJ,EAAAT,EAGA1I,EAAAgF,EAAAjF,EAGAC,EAAAoJ,EAAA,SAAAF,EAAAtI,EAAAyI,GACArJ,EAAAsJ,EAAAJ,EAAAtI,IACA/B,OAAAqC,eAAAgI,EAAAtI,EAAA,CAA0CE,YAAA,EAAAC,IAAAsI,KAK1CrJ,EAAAuJ,EAAA,SAAAL,GACA,oBAAAM,eAAAC,aACA5K,OAAAqC,eAAAgI,EAAAM,OAAAC,YAAA,CAAwDxI,MAAA,WAExDpC,OAAAqC,eAAAgI,EAAA,cAAiDjI,OAAA,KAQjDjB,EAAA2B,EAAA,SAAAV,EAAAW,GAEA,GADA,EAAAA,IAAAX,EAAAjB,EAAAiB,IACA,EAAAW,EAAA,OAAAX,EACA,KAAAW,GAAA,iBAAAX,QAAAyI,WAAA,OAAAzI,EACA,IAAA0I,EAAA9K,OAAA+K,OAAA,MAGA,GAFA5J,EAAAuJ,EAAAI,GACA9K,OAAAqC,eAAAyI,EAAA,WAAyC7I,YAAA,EAAAG,UACzC,EAAAW,GAAA,iBAAAX,EAAA,QAAA4I,KAAA5I,EAAAjB,EAAAoJ,EAAAO,EAAAE,EAAA,SAAAA,GAAgH,OAAA5I,EAAA4I,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIA3J,EAAA+J,EAAA,SAAA9D,GACA,IAAAoD,EAAApD,KAAAyD,WACA,WAA2B,OAAAzD,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAjG,EAAAoJ,EAAAC,EAAA,IAAAA,GACAA,GAIArJ,EAAAsJ,EAAA,SAAAU,EAAAC,GAAsD,OAAApL,OAAAC,UAAAC,eAAAC,KAAAgL,EAAAC,IAGtDjK,EAAAsE,EAAA,GAGAtE,EAAAiF,EAAA,WAAsC,OAAAzF,GAItCK,EAAA,GAAAA,CAAAG,EAAAkK,EAAA,mCCnxBAjE,EAAAiD,QAAAiB,EACAlE,EAAAiD,QAAAkB,QAAAD,EAEA,IAAAE,EAAkBrK,EAAQ,IAE1B,SAAAmK,EAAAG,EAAAC,GACA,KAAAC,gBAAAL,GAAA,WAAAA,EAAAG,EAAAC,GAGAC,KAAAC,YAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAE,KAAAI,YAAAF,KAAAC,IAAA,EAAAD,KAAAG,KAAA,GAAAL,KAAAC,cAEAF,GACAC,KAAAM,YAAAP,GAGAC,KAAAO,QAwbA,SAAAC,EAAA9D,EAAA+D,EAAAC,GACA,IAAAA,EAAA,OAAAD,EAAA3K,QAAA4G,GAEA,QAAA1E,EAAA,EAAmBA,EAAAyI,EAAAxI,OAAkBD,IACrC,GAAA0I,EAAAhE,EAAA+D,EAAAzI,IAAA,OAAAA,EAEA,SAIA,SAAA2I,EAAAC,EAAAC,GACAC,EAAAF,EAAA,EAAAA,EAAA5K,SAAAiC,OAAA4I,EAAAD,GAIA,SAAAE,EAAAF,EAAAG,EAAAjH,EAAA+G,EAAAG,GACAA,MAAAC,EAAA,OACAD,EAAAE,KAAAC,IACAH,EAAAI,KAAAD,IACAH,EAAAK,MAAAF,IACAH,EAAAM,MAAAH,IAEA,QAAAlD,EAAAjG,EAAA+I,EAA0B/I,EAAA8B,EAAO9B,IACjCiG,EAAA2C,EAAA5K,SAAAgC,GACAuJ,EAAAP,EAAAJ,EAAAY,KAAAX,EAAA5C,MAGA,OAAA+C,EAGA,SAAAO,EAAA/E,EAAAC,GAKA,OAJAD,EAAA0E,KAAAhB,KAAAuB,IAAAjF,EAAA0E,KAAAzE,EAAAyE,MACA1E,EAAA4E,KAAAlB,KAAAuB,IAAAjF,EAAA4E,KAAA3E,EAAA2E,MACA5E,EAAA6E,KAAAnB,KAAAC,IAAA3D,EAAA6E,KAAA5E,EAAA4E,MACA7E,EAAA8E,KAAApB,KAAAC,IAAA3D,EAAA8E,KAAA7E,EAAA6E,MACA9E,EAGA,SAAAkF,EAAAlF,EAAAC,GAAgC,OAAAD,EAAA0E,KAAAzE,EAAAyE,KAChC,SAAAS,EAAAnF,EAAAC,GAAgC,OAAAD,EAAA4E,KAAA3E,EAAA2E,KAEhC,SAAAQ,EAAApF,GAAwB,OAAAA,EAAA6E,KAAA7E,EAAA0E,OAAA1E,EAAA8E,KAAA9E,EAAA4E,MACxB,SAAAS,EAAArF,GAAwB,OAAAA,EAAA6E,KAAA7E,EAAA0E,MAAA1E,EAAA8E,KAAA9E,EAAA4E,MAiBxB,SAAAU,EAAAtF,EAAAC,GACA,OAAAD,EAAA0E,MAAAzE,EAAAyE,MACA1E,EAAA4E,MAAA3E,EAAA2E,MACA3E,EAAA4E,MAAA7E,EAAA6E,MACA5E,EAAA6E,MAAA9E,EAAA8E,KAGA,SAAAS,EAAAvF,EAAAC,GACA,OAAAA,EAAAyE,MAAA1E,EAAA6E,MACA5E,EAAA2E,MAAA5E,EAAA8E,MACA7E,EAAA4E,MAAA7E,EAAA0E,MACAzE,EAAA6E,MAAA9E,EAAA4E,KAGA,SAAAH,EAAAjL,GACA,OACAA,WACAgM,OAAA,EACAR,MAAA,EACAN,KAAAC,IACAC,KAAAD,IACAE,MAAAF,IACAG,MAAAH,KAOA,SAAAc,EAAAC,EAAAC,EAAAC,EAAA7C,EAAA8C,GAIA,IAHA,IACAC,EADAC,EAAA,CAAAJ,EAAAC,GAGAG,EAAAtK,SACAmK,EAAAG,EAAArG,QACAiG,EAAAI,EAAArG,QAEAqD,IAEA+C,EAAAH,EAAAjC,KAAAG,MAAA+B,EAAAD,GAAA5C,EAAA,GAAAA,EACAM,EAAAqC,EAAAI,EAAAH,EAAAC,EAAAC,GAEAE,EAAAxM,KAAAoM,EAAAG,IAAAF,IA1hBAzC,EAAArL,UAAA,CAEAkO,IAAA,WACA,OAAAxC,KAAAyC,KAAAzC,KAAA/G,KAAA,KAGAyJ,OAAA,SAAAC,GAEA,IAAA/B,EAAAZ,KAAA/G,KACAmC,EAAA,GACAyF,EAAAb,KAAAa,OAEA,IAAAkB,EAAAY,EAAA/B,GAAA,OAAAxF,EAKA,IAHA,IACApD,EAAA4K,EAAA3E,EAAA4E,EADAC,EAAA,GAGAlC,GAAA,CACA,IAAA5I,EAAA,EAAA4K,EAAAhC,EAAA5K,SAAAiC,OAAmDD,EAAA4K,EAAS5K,IAE5DiG,EAAA2C,EAAA5K,SAAAgC,GAGA+J,EAAAY,EAFAE,EAAAjC,EAAAY,KAAAX,EAAA5C,QAGA2C,EAAAY,KAAApG,EAAArF,KAAAkI,GACA6D,EAAAa,EAAAE,GAAA7C,KAAAyC,KAAAxE,EAAA7C,GACA0H,EAAA/M,KAAAkI,IAGA2C,EAAAkC,EAAA5G,MAGA,OAAAd,GAGA2H,SAAA,SAAAJ,GAEA,IAAA/B,EAAAZ,KAAA/G,KACA4H,EAAAb,KAAAa,OAEA,IAAAkB,EAAAY,EAAA/B,GAAA,SAKA,IAHA,IACA5I,EAAA4K,EAAA3E,EAAA4E,EADAC,EAAA,GAGAlC,GAAA,CACA,IAAA5I,EAAA,EAAA4K,EAAAhC,EAAA5K,SAAAiC,OAAmDD,EAAA4K,EAAS5K,IAK5D,GAHAiG,EAAA2C,EAAA5K,SAAAgC,GAGA+J,EAAAY,EAFAE,EAAAjC,EAAAY,KAAAX,EAAA5C,MAEA,CACA,GAAA2C,EAAAY,MAAAM,EAAAa,EAAAE,GAAA,SACAC,EAAA/M,KAAAkI,GAGA2C,EAAAkC,EAAA5G,MAGA,UAGA8G,KAAA,SAAA/J,GACA,IAAAA,MAAAhB,OAAA,OAAA+H,KAEA,GAAA/G,EAAAhB,OAAA+H,KAAAI,YAAA,CACA,QAAApI,EAAA,EAAA4K,EAAA3J,EAAAhB,OAA8CD,EAAA4K,EAAS5K,IACvDgI,KAAAiD,OAAAhK,EAAAjB,IAEA,OAAAgI,KAIA,IAAAY,EAAAZ,KAAAkD,OAAAjK,EAAA6C,QAAA,EAAA7C,EAAAhB,OAAA,KAEA,GAAA+H,KAAA/G,KAAAjD,SAAAiC,OAIS,GAAA+H,KAAA/G,KAAA+I,SAAApB,EAAAoB,OAEThC,KAAAmD,WAAAnD,KAAA/G,KAAA2H,OAES,CACT,GAAAZ,KAAA/G,KAAA+I,OAAApB,EAAAoB,OAAA,CAEA,IAAAoB,EAAApD,KAAA/G,KACA+G,KAAA/G,KAAA2H,EACAA,EAAAwC,EAIApD,KAAAqD,QAAAzC,EAAAZ,KAAA/G,KAAA+I,OAAApB,EAAAoB,OAAA,WAfAhC,KAAA/G,KAAA2H,EAkBA,OAAAZ,MAGAiD,OAAA,SAAAvG,GAEA,OADAA,GAAAsD,KAAAqD,QAAA3G,EAAAsD,KAAA/G,KAAA+I,OAAA,GACAhC,MAGAO,MAAA,WAEA,OADAP,KAAA/G,KAAAgI,EAAA,IACAjB,MAGAsD,OAAA,SAAA5G,EAAAgE,GACA,IAAAhE,EAAA,OAAAsD,KASA,IAPA,IAIAhI,EAAAqE,EAAAkH,EAAAC,EAJA5C,EAAAZ,KAAA/G,KACA0J,EAAA3C,KAAAa,OAAAnE,GACA+G,EAAA,GACAC,EAAA,GAIA9C,GAAA6C,EAAAxL,QAAA,CASA,GAPA2I,IACAA,EAAA6C,EAAAvH,MACAG,EAAAoH,IAAAxL,OAAA,GACAD,EAAA0L,EAAAxH,MACAsH,GAAA,GAGA5C,EAAAY,OAGA,KAFA+B,EAAA/C,EAAA9D,EAAAkE,EAAA5K,SAAA0K,IAOA,OAHAE,EAAA5K,SAAAuC,OAAAgL,EAAA,GACAE,EAAA1N,KAAA6K,GACAZ,KAAA2D,UAAAF,GACAzD,KAIAwD,GAAA5C,EAAAY,OAAAM,EAAAlB,EAAA+B,GAOatG,GACbrE,IACA4I,EAAAvE,EAAArG,SAAAgC,GACAwL,GAAA,GAEa5C,EAAA,MAXb6C,EAAA1N,KAAA6K,GACA8C,EAAA3N,KAAAiC,GACAA,EAAA,EACAqE,EAAAuE,EACAA,IAAA5K,SAAA,IAUA,OAAAgK,MAGAa,OAAA,SAAAnE,GAA6B,OAAAA,GAE7BkH,YAAAlC,EACAmC,YAAAlC,EAEAmC,OAAA,WAAyB,OAAA9D,KAAA/G,MAEzB8K,SAAA,SAAA9K,GAEA,OADA+G,KAAA/G,OACA+G,MAGAyC,KAAA,SAAA7B,EAAAxF,GAEA,IADA,IAAA0H,EAAA,GACAlC,GACAA,EAAAY,KAAApG,EAAArF,KAAA2C,MAAA0C,EAAAwF,EAAA5K,UACA8M,EAAA/M,KAAA2C,MAAAoK,EAAAlC,EAAA5K,UAEA4K,EAAAkC,EAAA5G,MAEA,OAAAd,GAGA8H,OAAA,SAAAzC,EAAA0B,EAAAC,EAAAJ,GAEA,IAEApB,EAFAoD,EAAA5B,EAAAD,EAAA,EACA8B,EAAAjE,KAAAC,YAGA,GAAA+D,GAAAC,EAIA,OADAtD,EADAC,EAAAK,EAAAR,EAAA3E,MAAAqG,EAAAC,EAAA,IACApC,KAAAa,QACAD,EAGAoB,IAEAA,EAAA9B,KAAAG,KAAAH,KAAAgE,IAAAF,GAAA9D,KAAAgE,IAAAD,IAGAA,EAAA/D,KAAAG,KAAA2D,EAAA9D,KAAAiE,IAAAF,EAAAjC,EAAA,MAGApB,EAAAK,EAAA,KACAO,MAAA,EACAZ,EAAAoB,SAIA,IAEAhK,EAAAwD,EAAA4I,EAAAC,EAFAC,EAAApE,KAAAG,KAAA2D,EAAAC,GACAM,EAAAD,EAAApE,KAAAG,KAAAH,KAAAsE,KAAAP,IAKA,IAFAhC,EAAAxB,EAAA0B,EAAAC,EAAAmC,EAAAvE,KAAA4D,aAEA5L,EAAAmK,EAAsBnK,GAAAoK,EAAYpK,GAAAuM,EAMlC,IAFAtC,EAAAxB,EAAAzI,EAFAoM,EAAAlE,KAAAuB,IAAAzJ,EAAAuM,EAAA,EAAAnC,GAEAkC,EAAAtE,KAAA6D,aAEArI,EAAAxD,EAAuBwD,GAAA4I,EAAa5I,GAAA8I,EAEpCD,EAAAnE,KAAAuB,IAAAjG,EAAA8I,EAAA,EAAAF,GAGAxD,EAAA5K,SAAAD,KAAAiK,KAAAkD,OAAAzC,EAAAjF,EAAA6I,EAAArC,EAAA,IAMA,OAFArB,EAAAC,EAAAZ,KAAAa,QAEAD,GAGA6D,eAAA,SAAA9B,EAAA/B,EAAA8D,EAAAjB,GAIA,IAFA,IAAAzL,EAAA4K,EAAA3E,EAAA0G,EAAAC,EAAAC,EAAAC,EAAAC,EAsPAvI,EAAAC,EAnPAgH,EAAA1N,KAAA6K,IAEAA,EAAAY,MAAAiC,EAAAxL,OAAA,IAAAyM,GAHA,CAOA,IAFAI,EAAAC,EAAA5D,IAEAnJ,EAAA,EAAA4K,EAAAhC,EAAA5K,SAAAiC,OAAmDD,EAAA4K,EAAS5K,IAE5D4M,EAAAhD,EADA3D,EAAA2C,EAAA5K,SAAAgC,IA4OAwE,EA1OAmG,EA0OAlG,EA1OAwB,GAAA4G,GA2OA3E,KAAAC,IAAA1D,EAAA4E,KAAA7E,EAAA6E,MAAAnB,KAAAuB,IAAAhF,EAAAyE,KAAA1E,EAAA0E,QACAhB,KAAAC,IAAA1D,EAAA6E,KAAA9E,EAAA8E,MAAApB,KAAAuB,IAAAhF,EAAA2E,KAAA5E,EAAA4E,OA5OAwD,GAGAG,GACAA,EAAAF,EACAC,EAAAF,EAAAE,EAAAF,EAAAE,EACAH,EAAA1G,GAEiB4G,IAAAE,GAEjBH,EAAAE,IACAA,EAAAF,EACAD,EAAA1G,GAKA2C,EAAA+D,GAAA/D,EAAA5K,SAAA,GAGA,OAAA4K,GAGAyC,QAAA,SAAA3G,EAAAgI,EAAAM,GAEA,IAAAnE,EAAAb,KAAAa,OACA8B,EAAAqC,EAAAtI,EAAAmE,EAAAnE,GACAuI,EAAA,GAGArE,EAAAZ,KAAAyE,eAAA9B,EAAA3C,KAAA/G,KAAAyL,EAAAO,GAOA,IAJArE,EAAA5K,SAAAD,KAAA2G,GACA6E,EAAAX,EAAA+B,GAGA+B,GAAA,GACAO,EAAAP,GAAA1O,SAAAiC,OAAA+H,KAAAC,aACAD,KAAAkF,OAAAD,EAAAP,GACAA,IAKA1E,KAAAmF,oBAAAxC,EAAAsC,EAAAP,IAIAQ,OAAA,SAAAD,EAAAP,GAEA,IAAA9D,EAAAqE,EAAAP,GACAT,EAAArD,EAAA5K,SAAAiC,OACA0G,EAAAqB,KAAAI,YAEAJ,KAAAoF,iBAAAxE,EAAAjC,EAAAsF,GAEA,IAAAoB,EAAArF,KAAAsF,kBAAA1E,EAAAjC,EAAAsF,GAEAsB,EAAAtE,EAAAL,EAAA5K,SAAAuC,OAAA8M,EAAAzE,EAAA5K,SAAAiC,OAAAoN,IACAE,EAAAvD,OAAApB,EAAAoB,OACAuD,EAAA/D,KAAAZ,EAAAY,KAEAb,EAAAC,EAAAZ,KAAAa,QACAF,EAAA4E,EAAAvF,KAAAa,QAEA6D,EAAAO,EAAAP,EAAA,GAAA1O,SAAAD,KAAAwP,GACAvF,KAAAmD,WAAAvC,EAAA2E,IAGApC,WAAA,SAAAvC,EAAA2E,GAEAvF,KAAA/G,KAAAgI,EAAA,CAAAL,EAAA2E,IACAvF,KAAA/G,KAAA+I,OAAApB,EAAAoB,OAAA,EACAhC,KAAA/G,KAAAuI,MAAA,EACAb,EAAAX,KAAA/G,KAAA+G,KAAAa,SAGAyE,kBAAA,SAAA1E,EAAAjC,EAAAsF,GAEA,IAAAjM,EAAAwN,EAAAC,EAAAC,EAAAd,EAAAe,EAAAb,EAAAvB,EA+JA/G,EAAAC,EACAyE,EACAE,EACAC,EACAC,EA/JA,IAFAqE,EAAAb,EAAA3D,IAEAnJ,EAAA2G,EAAmB3G,GAAAiM,EAAAtF,EAAY3G,IAC/BwN,EAAA1E,EAAAF,EAAA,EAAA5I,EAAAgI,KAAAa,QACA4E,EAAA3E,EAAAF,EAAA5I,EAAAiM,EAAAjE,KAAAa,QAyJArE,EAvJAgJ,EAuJA/I,EAvJAgJ,EAwJAvE,SACAE,SACAC,SACAC,SAHAJ,EAAAhB,KAAAC,IAAA3D,EAAA0E,KAAAzE,EAAAyE,MACAE,EAAAlB,KAAAC,IAAA3D,EAAA4E,KAAA3E,EAAA2E,MACAC,EAAAnB,KAAAuB,IAAAjF,EAAA6E,KAAA5E,EAAA4E,MACAC,EAAApB,KAAAuB,IAAAjF,EAAA8E,KAAA7E,EAAA6E,MA3JAoE,EA6JAxF,KAAAC,IAAA,EAAAkB,EAAAH,GACAhB,KAAAC,IAAA,EAAAmB,EAAAF,GA7JAwD,EAAAhD,EAAA4D,GAAA5D,EAAA6D,GAGAC,EAAAC,GACAA,EAAAD,EACAnC,EAAAvL,EAEA8M,EAAAF,EAAAE,EAAAF,EAAAE,GAEaY,IAAAC,GAEbf,EAAAE,IACAA,EAAAF,EACArB,EAAAvL,GAKA,OAAAuL,GAIA6B,iBAAA,SAAAxE,EAAAjC,EAAAsF,GAEA,IAAAL,EAAAhD,EAAAY,KAAAxB,KAAA4D,YAAAlC,EACAmC,EAAAjD,EAAAY,KAAAxB,KAAA6D,YAAAlC,EACA3B,KAAA4F,eAAAhF,EAAAjC,EAAAsF,EAAAL,GACA5D,KAAA4F,eAAAhF,EAAAjC,EAAAsF,EAAAJ,IAIAjD,EAAA5K,SAAA6P,KAAAjC,IAIAgC,eAAA,SAAAhF,EAAAjC,EAAAsF,EAAA5B,GAEAzB,EAAA5K,SAAA6P,KAAAxD,GAEA,IAIArK,EAAAiG,EAJA4C,EAAAb,KAAAa,OACAiF,EAAAhF,EAAAF,EAAA,EAAAjC,EAAAkC,GACAkF,EAAAjF,EAAAF,EAAAqD,EAAAtF,EAAAsF,EAAApD,GACAmF,EAAAnE,EAAAiE,GAAAjE,EAAAkE,GAGA,IAAA/N,EAAA2G,EAAmB3G,EAAAiM,EAAAtF,EAAW3G,IAC9BiG,EAAA2C,EAAA5K,SAAAgC,GACAuJ,EAAAuE,EAAAlF,EAAAY,KAAAX,EAAA5C,MACA+H,GAAAnE,EAAAiE,GAGA,IAAA9N,EAAAiM,EAAAtF,EAAA,EAA2B3G,GAAA2G,EAAQ3G,IACnCiG,EAAA2C,EAAA5K,SAAAgC,GACAuJ,EAAAwE,EAAAnF,EAAAY,KAAAX,EAAA5C,MACA+H,GAAAnE,EAAAkE,GAGA,OAAAC,GAGAb,oBAAA,SAAAxC,EAAAc,EAAAiB,GAEA,QAAA1M,EAAA0M,EAA2B1M,GAAA,EAAQA,IACnCuJ,EAAAkC,EAAAzL,GAAA2K,IAIAgB,UAAA,SAAAF,GAEA,QAAAwC,EAAAjO,EAAAyL,EAAAxL,OAAA,EAA+CD,GAAA,EAAQA,IACvD,IAAAyL,EAAAzL,GAAAhC,SAAAiC,OACAD,EAAA,GACAiO,EAAAxC,EAAAzL,EAAA,GAAAhC,UACAuC,OAAA0N,EAAAnQ,QAAA2N,EAAAzL,IAAA,GAEiBgI,KAAAO,QAEJI,EAAA8C,EAAAzL,GAAAgI,KAAAa,SAIbP,YAAA,SAAAP,GAOA,IAAAmG,EAAA,wBAEAlG,KAAA4D,YAAA,IAAAuC,SAAA,QAAAD,EAAAjJ,KAAA8C,EAAA,KACAC,KAAA6D,YAAA,IAAAsC,SAAA,QAAAD,EAAAjJ,KAAA8C,EAAA,KAEAC,KAAAa,OAAA,IAAAsF,SAAA,IACA,kBAAqBpG,EAAA,GACrB,YAAAA,EAAA,GACA,YAAAA,EAAA,GACA,YAAAA,EAAA,yCC/bAtE,EAAAiD,QAAA,SAAA0H,GACA,IAAAC,EAAA,GAgDA,OA9CAA,EAAAC,SAAA,WACA,OAAAtG,KAAAjE,IAAA,SAAAW,GACA,IAAA6J,EA+CA,SAAA7J,EAAA0J,GACA,IAAAG,EAAA7J,EAAA,OACA8J,EAAA9J,EAAA,GAEA,IAAA8J,EACA,OAAAD,EAGA,GAAAH,GAAA,mBAAAK,KAAA,CACA,IAAAC,GAWAC,EAXAH,EAeA,mEAFAC,KAAAG,SAAAC,mBAAAxM,KAAAyM,UAAAH,MAEA,OAdAI,EAAAP,EAAAQ,QAAAjL,IAAA,SAAAkL,GACA,uBAAAT,EAAAU,WAAAD,EAAA,QAEA,OAAAV,GAAAjK,OAAAyK,GAAAzK,OAAA,CAAAoK,IAAAzJ,KAAA,MAOA,IAAA0J,EAJA,OAAAJ,GAAAtJ,KAAA,MA/DAkK,CAAAzK,EAAA0J,GAEA,OAAA1J,EAAA,GACA,UAAAA,EAAA,OAAuC6J,EAAA,IAEvCA,IAEKtJ,KAAA,KAILoJ,EAAArO,EAAA,SAAAkG,EAAAkJ,GACA,iBAAAlJ,IACAA,EAAA,OAAAA,EAAA,MAKA,IAFA,IAAAmJ,EAAA,GAEArP,EAAA,EAAmBA,EAAAgI,KAAA/H,OAAiBD,IAAA,CACpC,IAAAsB,EAAA0G,KAAAhI,GAAA,GAEA,MAAAsB,IACA+N,EAAA/N,IAAA,GAIA,IAAAtB,EAAA,EAAeA,EAAAkG,EAAAjG,OAAoBD,IAAA,CACnC,IAAA0E,EAAAwB,EAAAlG,GAKA,MAAA0E,EAAA,IAAA2K,EAAA3K,EAAA,MACA0K,IAAA1K,EAAA,GACAA,EAAA,GAAA0K,EACSA,IACT1K,EAAA,OAAAA,EAAA,aAAA0K,EAAA,KAGAf,EAAAtQ,KAAA2G,MAKA2J,oBCnDA,IAEA5Q,EACA6R,EAHAC,EAAA,GAWAC,GATA/R,EASA,WAMA,OAAA1B,QAAA6G,mBAAA4H,MAAAzO,OAAA0T,MAZA,WAEA,YADA,IAAAH,MAAA7R,EAAAiD,MAAAsH,KAAA0H,YACAJ,IAoBAK,EAAA,SAAAlS,GACA,IAAA6R,EAAA,GAEA,gBAAAM,EAAAvL,GAMA,sBAAAuL,EACA,OAAAA,IAEA,YAAAN,EAAAM,GAAA,CACA,IAAAC,EApBA,SAAAD,EAAAvL,GACA,OAAAA,EACAA,EAAAyL,cAAAF,GAEAhN,SAAAkN,cAAAF,IAgBApT,KAAAwL,KAAA4H,EAAAvL,GAEA,GAAAtI,OAAAgU,mBAAAF,aAAA9T,OAAAgU,kBACA,IAGAF,IAAAG,gBAAAhN,KACK,MAAArE,GACLkR,EAAA,KAGAP,EAAAM,GAAAC,EAEA,OAAAP,EAAAM,IA1BA,GA8BAK,EAAA,KACAC,EAAA,EACAC,EAAA,GAEAC,EAAc5S,EAAQ,IAqDtB,SAAA6S,EAAAC,EAAAhN,GACA,QAAAtD,EAAA,EAAgBA,EAAAsQ,EAAArQ,OAAmBD,IAAA,CACnC,IAAA0E,EAAA4L,EAAAtQ,GACAuQ,EAAAhB,EAAA7K,EAAApD,IAEA,GAAAiP,EAAA,CACAA,EAAAC,OAEA,QAAAhN,EAAA,EAAiBA,EAAA+M,EAAAE,MAAAxQ,OAA2BuD,IAC5C+M,EAAAE,MAAAjN,GAAAkB,EAAA+L,MAAAjN,IAGA,KAAQA,EAAAkB,EAAA+L,MAAAxQ,OAAuBuD,IAC/B+M,EAAAE,MAAA1S,KAAA2S,EAAAhM,EAAA+L,MAAAjN,GAAAF,QAEG,CACH,IAAAmN,EAAA,GAEA,IAAAjN,EAAA,EAAiBA,EAAAkB,EAAA+L,MAAAxQ,OAAuBuD,IACxCiN,EAAA1S,KAAA2S,EAAAhM,EAAA+L,MAAAjN,GAAAF,IAGAiM,EAAA7K,EAAApD,IAAA,CAA2BA,GAAAoD,EAAApD,GAAAkP,KAAA,EAAAC,WAK3B,SAAAE,EAAAtC,EAAA/K,GAIA,IAHA,IAAAgN,EAAA,GACAM,EAAA,GAEA5Q,EAAA,EAAgBA,EAAAqO,EAAApO,OAAiBD,IAAA,CACjC,IAAA0E,EAAA2J,EAAArO,GACAsB,EAAAgC,EAAAuN,KAAAnM,EAAA,GAAApB,EAAAuN,KAAAnM,EAAA,GAIAoM,EAAA,CAAcC,IAHdrM,EAAA,GAGcsM,MAFdtM,EAAA,GAEciK,UADdjK,EAAA,IAGAkM,EAAAtP,GACAsP,EAAAtP,GAAAmP,MAAA1S,KAAA+S,GADAR,EAAAvS,KAAA6S,EAAAtP,GAAA,CAAkDA,KAAAmP,MAAA,CAAAK,KAIlD,OAAAR,EAGA,SAAAW,EAAA3N,EAAA4N,GACA,IAAAtB,EAAAD,EAAArM,EAAA6N,YAEA,IAAAvB,EACA,UAAArO,MAAA,+GAGA,IAAA6P,EAAAjB,IAAAlQ,OAAA,GAEA,WAAAqD,EAAA+N,SACAD,EAEGA,EAAAE,YACH1B,EAAA2B,aAAAL,EAAAE,EAAAE,aAEA1B,EAAA3M,YAAAiO,GAJAtB,EAAA2B,aAAAL,EAAAtB,EAAA4B,YAMArB,EAAApS,KAAAmT,QACE,cAAA5N,EAAA+N,SACFzB,EAAA3M,YAAAiO,OACE,qBAAA5N,EAAA+N,WAAA/N,EAAA+N,SAAAI,OAIF,UAAAlQ,MAAA,8LAHA,IAAA+P,EAAA3B,EAAArM,EAAA+N,SAAAI,OAAA7B,GACAA,EAAA2B,aAAAL,EAAAI,IAMA,SAAAI,EAAAR,GACA,UAAAA,EAAAS,WAAA,SACAT,EAAAS,WAAAC,YAAAV,GAEA,IAAA5Q,EAAA6P,EAAArS,QAAAoT,GACA5Q,GAAA,GACA6P,EAAA5P,OAAAD,EAAA,GAIA,SAAAuR,EAAAvO,GACA,IAAA4N,EAAAtO,SAAAC,cAAA,SAMA,QAJA9C,IAAAuD,EAAAwO,MAAA3N,OACAb,EAAAwO,MAAA3N,KAAA,iBAGApE,IAAAuD,EAAAwO,MAAAC,MAAA,CACA,IAAAA,EAgCA,WACK,EAIL,OAAQvU,EAAAwU,GArCRC,GACAF,IACAzO,EAAAwO,MAAAC,SAOA,OAHAG,EAAAhB,EAAA5N,EAAAwO,OACAb,EAAA3N,EAAA4N,GAEAA,EAiBA,SAAAgB,EAAAC,EAAAL,GACAzV,OAAAqJ,KAAAoM,GAAAnM,QAAA,SAAA0B,GACA8K,EAAAC,aAAA/K,EAAAyK,EAAAzK,MAYA,SAAAqJ,EAAA2B,EAAA/O,GACA,IAAA4N,EAAA9O,EAAAkJ,EAAAlI,EAGA,GAAAE,EAAAgP,WAAAD,EAAAtB,IAAA,CAKA,KAJA3N,EAAA,mBAAAE,EAAAgP,UACAhP,EAAAgP,UAAAD,EAAAtB,KACAzN,EAAAgP,UAAA1K,QAAAyK,EAAAtB,MASA,oBAJAsB,EAAAtB,IAAA3N,EAUA,GAAAE,EAAA2M,UAAA,CACA,IAAAsC,EAAArC,IAEAgB,EAAAjB,MAAA4B,EAAAvO,IAEAlB,EAAAoQ,EAAAlL,KAAA,KAAA4J,EAAAqB,GAAA,GACAjH,EAAAkH,EAAAlL,KAAA,KAAA4J,EAAAqB,GAAA,QAGAF,EAAA1D,WACA,mBAAA8D,KACA,mBAAAA,IAAAC,iBACA,mBAAAD,IAAAE,iBACA,mBAAAC,MACA,mBAAAnE,MAEAyC,EAlEA,SAAA5N,GACA,IAAAuP,EAAAjQ,SAAAC,cAAA,QAUA,YARA9C,IAAAuD,EAAAwO,MAAA3N,OACAb,EAAAwO,MAAA3N,KAAA,YAEAb,EAAAwO,MAAAgB,IAAA,aAEAZ,EAAAW,EAAAvP,EAAAwO,OACAb,EAAA3N,EAAAuP,GAEAA,EAuDAE,CAAAzP,GACAlB,EAiFA,SAAAyQ,EAAAvP,EAAA+O,GACA,IAAAtB,EAAAsB,EAAAtB,IACApC,EAAA0D,EAAA1D,UAQAqE,OAAAjT,IAAAuD,EAAA2P,uBAAAtE,GAEArL,EAAA2P,uBAAAD,KACAjC,EAAAX,EAAAW,IAGApC,IAEAoC,GAAA,uDAAuDtC,KAAAG,SAAAC,mBAAAxM,KAAAyM,UAAAH,MAAA,OAGvD,IAAAuE,EAAA,IAAAN,KAAA,CAAA7B,GAAA,CAA6B5M,KAAA,aAE7BgP,EAAAN,EAAAO,KAEAP,EAAAO,KAAAX,IAAAC,gBAAAQ,GAEAC,GAAAV,IAAAE,gBAAAQ,IA5GA7L,KAAA,KAAA4J,EAAA5N,GACAgI,EAAA,WACAoG,EAAAR,GAEAA,EAAAkC,MAAAX,IAAAE,gBAAAzB,EAAAkC,SAGAlC,EAAAW,EAAAvO,GACAlB,EAsDA,SAAA8O,EAAAmB,GACA,IAAAtB,EAAAsB,EAAAtB,IACAC,EAAAqB,EAAArB,MAEAA,GACAE,EAAAkB,aAAA,QAAApB,GAGA,GAAAE,EAAAmC,WACAnC,EAAAmC,WAAAC,QAAAvC,MACE,CACF,KAAAG,EAAAM,YACAN,EAAAU,YAAAV,EAAAM,YAGAN,EAAAjO,YAAAL,SAAA2Q,eAAAxC,MArEAzJ,KAAA,KAAA4J,GACA5F,EAAA,WACAoG,EAAAR,KAMA,OAFA9O,EAAAiQ,GAEA,SAAAmB,GACA,GAAAA,EAAA,CACA,GACAA,EAAAzC,MAAAsB,EAAAtB,KACAyC,EAAAxC,QAAAqB,EAAArB,OACAwC,EAAA7E,YAAA0D,EAAA1D,UAEA,OAGAvM,EAAAiQ,EAAAmB,QAEAlI,KA1PA7H,EAAAiD,QAAA,SAAA2H,EAAA/K,GACA,uBAAAmQ,cACA,iBAAA7Q,SAAA,UAAArB,MAAA,iEAGA+B,KAAA,IAEAwO,MAAA,iBAAAxO,EAAAwO,MAAAxO,EAAAwO,MAAA,GAIAxO,EAAA2M,WAAA,kBAAA3M,EAAA2M,YAAA3M,EAAA2M,UAAAT,KAGAlM,EAAA6N,aAAA7N,EAAA6N,WAAA,QAGA7N,EAAA+N,WAAA/N,EAAA+N,SAAA,UAEA,IAAAf,EAAAK,EAAAtC,EAAA/K,GAIA,OAFA+M,EAAAC,EAAAhN,GAEA,SAAAoQ,GAGA,IAFA,IAAAC,EAAA,GAEA3T,EAAA,EAAiBA,EAAAsQ,EAAArQ,OAAmBD,IAAA,CACpC,IAAA0E,EAAA4L,EAAAtQ,IACAuQ,EAAAhB,EAAA7K,EAAApD,KAEAkP,OACAmD,EAAA5V,KAAAwS,GAGAmD,GAEArD,EADAM,EAAA+C,EAAApQ,GACAA,GAGA,IAAAtD,EAAA,EAAiBA,EAAA2T,EAAA1T,OAAsBD,IAAA,CACvC,IAAAuQ,EAEA,QAFAA,EAAAoD,EAAA3T,IAEAwQ,KAAA,CACA,QAAAhN,EAAA,EAAmBA,EAAA+M,EAAAE,MAAAxQ,OAA2BuD,IAAA+M,EAAAE,MAAAjN,YAE9C+L,EAAAgB,EAAAjP,QAkNA,IACAsS,EADAC,GACAD,EAAA,GAEA,SAAArI,EAAAuI,GAGA,OAFAF,EAAArI,GAAAuI,EAEAF,EAAAG,OAAAC,SAAA/O,KAAA,QAIA,SAAAuN,EAAAtB,EAAA3F,EAAAD,EAAA+G,GACA,IAAAtB,EAAAzF,EAAA,GAAA+G,EAAAtB,IAEA,GAAAG,EAAAmC,WACAnC,EAAAmC,WAAAC,QAAAO,EAAAtI,EAAAwF,OACE,CACF,IAAAkD,EAAArR,SAAA2Q,eAAAxC,GACAmD,EAAAhD,EAAAgD,WAEAA,EAAA3I,IAAA2F,EAAAU,YAAAsC,EAAA3I,IAEA2I,EAAAjU,OACAiR,EAAAK,aAAA0C,EAAAC,EAAA3I,IAEA2F,EAAAjO,YAAAgR,uBC3VAxQ,EAAAiD,QAA2BlJ,EAAQ,EAARA,EAAwD,IAEnFO,KAAA,CAAc0F,EAAAzD,EAAS,s6MAAw6M,uBCF/7MyD,EAAAiD,QAA2BlJ,EAAQ,EAARA,EAAwD,IAEnFO,KAAA,CAAc0F,EAAAzD,EAAS,iRAAiR,uBCFxSyD,EAAAiD,QAA2BlJ,EAAQ,EAARA,EAAoE,IAE/FO,KAAA,CAAc0F,EAAAzD,EAAS,wpBAAwpB,sBCF/qB0G,EAAAjD,EAAAiD,QAA2BlJ,EAAQ,EAARA,EAAiE,GAE5F,IACA2W,EADgB3W,EAAQ,GACxB4W,CAAyC5W,EAAQ,KAGjDkJ,EAAA3I,KAAA,CAAc0F,EAAAzD,EAAS,ijGAAqhGmU,EAAA,wyEAAq0EA,EAAA,+dAA4fA,EAAA,wbAA2dA,EAAA,uSAAoUA,EAAA,uQAAoSA,EAAA,+xEAAo1E,+BCLpwS,IAAA5F,EAAc/Q,EAAQ,GAEtB,iBAAA+Q,MAAA,EAA4C9K,EAAAzD,EAASuO,EAAA,MAOrD,IAAAjL,EAAA,CAAe+Q,KAAA,EAEf/B,eAPAA,EAQAnB,gBAAApR,GAEAqC,EAAa5E,EAAQ,EAARA,CAAwD+Q,EAAAjL,GAErEiL,EAAA+F,SAAA7Q,EAAAiD,QAAA6H,EAAA+F,QAGA7Q,EAAA9F,IAAAiC,OAAmB,EAAmD,WACtE,IAAA2U,EAAmB/W,EAAQ,GAiB3B,GAfA,iBAAA+W,MAAA,EAAoD9Q,EAAAzD,EAASuU,EAAA,OAE7D,SAAA/P,EAAAC,GACA,IAAA4C,EAAA/G,EAAA,EAEA,IAAA+G,KAAA7C,EAAA,CACA,IAAAC,GAAAD,EAAA6C,KAAA5C,EAAA4C,GAAA,SACA/G,IAGA,IAAA+G,KAAA5C,EAAAnE,IAEA,WAAAA,EAVA,CAWGiO,EAAA+F,OAAAC,EAAAD,QAEH,UAAA/S,MAAA,uDAEAa,EAAAmS,KAGA9Q,EAAA9F,IAAAwC,QAAA,WAAgCiC,qBC7BhCqB,EAAAiD,QAAA,SAAAqK,GAEA,IAAAyD,EAAA,oBAAAzY,eAAAyY,SAEA,IAAAA,EACA,UAAAjT,MAAA,oCAIA,IAAAwP,GAAA,iBAAAA,EACA,OAAAA,EAGA,IAAA0D,EAAAD,EAAAE,SAAA,KAAAF,EAAAG,KACAC,EAAAH,EAAAD,EAAAK,SAAAC,QAAA,iBA2DA,OA/BA/D,EAAA+D,QAAA,+DAAAC,EAAAC,GAEA,IAWAC,EAXAC,EAAAF,EACAG,OACAL,QAAA,oBAAAhO,EAAAsO,GAAwC,OAAAA,IACxCN,QAAA,oBAAAhO,EAAAsO,GAAwC,OAAAA,IAGxC,0DAAAC,KAAAH,GACAH,GAQAE,EAFA,IAAAC,EAAApX,QAAA,MAEAoX,EACG,IAAAA,EAAApX,QAAA,KAEH2W,EAAAS,EAGAN,EAAAM,EAAAJ,QAAA,YAIA,OAAAzS,KAAAyM,UAAAmG,GAAA,yBClFA,IAAA1G,EAAc/Q,EAAQ,GAEtB,iBAAA+Q,MAAA,EAA4C9K,EAAAzD,EAASuO,EAAA,MAOrD,IAAAjL,EAAA,CAAe+Q,KAAA,EAEf/B,eAPAA,EAQAnB,gBAAApR,GAEAqC,EAAa5E,EAAQ,EAARA,CAAwD+Q,EAAAjL,GAErEiL,EAAA+F,SAAA7Q,EAAAiD,QAAA6H,EAAA+F,QAGA7Q,EAAA9F,IAAAiC,OAAmB,EAAuD,WAC1E,IAAA2U,EAAmB/W,EAAQ,GAiB3B,GAfA,iBAAA+W,MAAA,EAAoD9Q,EAAAzD,EAASuU,EAAA,OAE7D,SAAA/P,EAAAC,GACA,IAAA4C,EAAA/G,EAAA,EAEA,IAAA+G,KAAA7C,EAAA,CACA,IAAAC,GAAAD,EAAA6C,KAAA5C,EAAA4C,GAAA,SACA/G,IAGA,IAAA+G,KAAA5C,EAAAnE,IAEA,WAAAA,EAVA,CAWGiO,EAAA+F,OAAAC,EAAAD,QAEH,UAAA/S,MAAA,uDAEAa,EAAAmS,KAGA9Q,EAAA9F,IAAAwC,QAAA,WAAgCiC,uBC1C6BqB,EAAAiD,QAG5D,WAAqB,aA8CtB,SAAA4O,EAAApL,EAAAlK,EAAAwD,GACA,IAAA+R,EAAArL,EAAAlK,GACAkK,EAAAlK,GAAAkK,EAAA1G,GACA0G,EAAA1G,GAAA+R,EAGA,SAAAC,EAAAhR,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IAGA,OAtDA,SAAAyF,EAAAnB,EAAAoB,EAAAC,EAAAC,IAIA,SAAAoL,EAAAvL,EAAAnB,EAAAoB,EAAAC,EAAAC,GAEA,KAAAD,EAAAD,GAAA,CACA,GAAAC,EAAAD,EAAA,KACA,IAAA5C,EAAA6C,EAAAD,EAAA,EACAxD,EAAAoC,EAAAoB,EAAA,EACAuL,EAAAxN,KAAAgE,IAAA3E,GACAG,EAAA,GAAAQ,KAAAyN,IAAA,EAAAD,EAAA,GACAE,EAAA,GAAA1N,KAAAsE,KAAAkJ,EAAAhO,GAAAH,EAAAG,GAAAH,IAAAZ,EAAAY,EAAA,UACAsO,EAAA3N,KAAAC,IAAAgC,EAAAjC,KAAA4N,MAAA/M,EAAApC,EAAAe,EAAAH,EAAAqO,IACAG,EAAA7N,KAAAuB,IAAAW,EAAAlC,KAAA4N,MAAA/M,GAAAxB,EAAAZ,GAAAe,EAAAH,EAAAqO,IACAH,EAAAvL,EAAAnB,EAAA8M,EAAAE,EAAA1L,GAGA,IAAAlL,EAAA+K,EAAAnB,GACA/I,EAAAmK,EACA3G,EAAA4G,EAKA,IAHAkL,EAAApL,EAAAC,EAAApB,GACAsB,EAAAH,EAAAE,GAAAjL,GAAA,GAAAmW,EAAApL,EAAAC,EAAAC,GAEApK,EAAAwD,GAAA,CAIA,IAHA8R,EAAApL,EAAAlK,EAAAwD,GACAxD,IACAwD,IACA6G,EAAAH,EAAAlK,GAAAb,GAAA,GAAAa,IACA,KAAAqK,EAAAH,EAAA1G,GAAArE,GAAA,GAAAqE,IAGA,IAAA6G,EAAAH,EAAAC,GAAAhL,GAAAmW,EAAApL,EAAAC,EAAA3G,GAGA8R,EAAApL,IADA1G,EACA4G,GAGA5G,GAAAuF,IAAAoB,EAAA3G,EAAA,GACAuF,GAAAvF,IAAA4G,EAAA5G,EAAA,IAvCAiS,CAAAvL,EAAAnB,EAAAoB,GAAA,EAAAC,GAAAF,EAAAjK,OAAA,EAAAoK,GAAAmL,IAN6DQ,oBCA7D,IAAAzH,EAAc/Q,EAAQ,GAEtB,iBAAA+Q,MAAA,EAA4C9K,EAAAzD,EAASuO,EAAA,MAOrD,IAAAjL,EAAA,CAAe+Q,KAAA,EAEf/B,eAPAA,EAQAnB,gBAAApR,GAEAqC,EAAa5E,EAAQ,EAARA,CAAoE+Q,EAAAjL,GAEjFiL,EAAA+F,SAAA7Q,EAAAiD,QAAA6H,EAAA+F,QAGA7Q,EAAA9F,IAAAiC,OAAmB,EAA+E,WAClG,IAAA2U,EAAmB/W,EAAQ,GAiB3B,GAfA,iBAAA+W,MAAA,EAAoD9Q,EAAAzD,EAASuU,EAAA,OAE7D,SAAA/P,EAAAC,GACA,IAAA4C,EAAA/G,EAAA,EAEA,IAAA+G,KAAA7C,EAAA,CACA,IAAAC,GAAAD,EAAA6C,KAAA5C,EAAA4C,GAAA,SACA/G,IAGA,IAAA+G,KAAA5C,EAAAnE,IAEA,WAAAA,EAVA,CAWGiO,EAAA+F,OAAAC,EAAAD,QAEH,UAAA/S,MAAA,uDAEAa,EAAAmS,KAGA9Q,EAAA9F,IAAAwC,QAAA,WAAgCiC,uBC1ChC,IAAAmM,EAAc/Q,EAAQ,GAEtB,iBAAA+Q,MAAA,EAA4C9K,EAAAzD,EAASuO,EAAA,MAOrD,IAAAjL,EAAA,CAAe+Q,KAAA,EAEf/B,eAPAA,EAQAnB,gBAAApR,GAEAqC,EAAa5E,EAAQ,EAARA,CAAiE+Q,EAAAjL,GAE9EiL,EAAA+F,SAAA7Q,EAAAiD,QAAA6H,EAAA+F,QAGA7Q,EAAA9F,IAAAiC,OAAmB,EAAqE,WACxF,IAAA2U,EAAmB/W,EAAQ,GAiB3B,GAfA,iBAAA+W,MAAA,EAAoD9Q,EAAAzD,EAASuU,EAAA,OAE7D,SAAA/P,EAAAC,GACA,IAAA4C,EAAA/G,EAAA,EAEA,IAAA+G,KAAA7C,EAAA,CACA,IAAAC,GAAAD,EAAA6C,KAAA5C,EAAA4C,GAAA,SACA/G,IAGA,IAAA+G,KAAA5C,EAAAnE,IAEA,WAAAA,EAVA,CAWGiO,EAAA+F,OAAAC,EAAAD,QAEH,UAAA/S,MAAA,uDAEAa,EAAAmS,KAGA9Q,EAAA9F,IAAAwC,QAAA,WAAgCiC,oCCzChCqB,EAAAiD,QAAA,SAAAuP,EAAAC,GACA,uBAAAD,EACAA,GAIA,eAAAZ,KAAAY,KACAA,IAAAnS,MAAA,OAKA,cAAAuR,KAAAY,IAAAC,EACA,IAAAD,EAAAnB,QAAA,YAAAA,QAAA,iBAGAmB,qBClBAxS,EAAAiD,QAAiBlJ,EAAAsE,EAAuB,qECiDzB,IAAAqU,EA3Cf,CACAC,UAAA,CACAC,OAAA,uBAEAC,WAAA,YAEAC,KAAA,IAKAC,UAAA,CACAC,wBAAA,wEACAC,eAAA,yEAGAC,eAAA,CACAV,IAAA,kDACAW,OAAA,CAAiBC,OAAA,aACjBC,WAAA,YACAC,YAAA,aAGAC,WAAA,CAEAf,IAAA,uDACAW,OAAA,CACAK,OAAA,YACAC,QAAA,QACAC,OAAA,EACAC,OAAA,GACAP,OAAA,6BAKAQ,qBAAA,CACAf,WAAA,YAEAL,IAAA,+DCtCO,SAASqB,IAChB,OAAsB,WACtB,UAAA/V,MAAA,kCADsB,GAsCtB,IAAAgW,EAAA,EAYO,SAAAC,EAAAnF,GACP,OAAAA,EAAAoF,SAAApF,EAAAoF,OAAAC,SAAAH,IAOO,IAAAL,EAAA,QCtBQS,EAlCG,SAAApW,GAClB,SAAAqW,EAAAC,GACA,IACAC,EAAA,oDADsB,WAAPZ,EAAuBA,EAAO,IAASA,EAAOa,MAAA,SAE7D,gBAAAF,EAAA,gBAEAtW,EAAA/E,KAAAwL,KAAA8P,GAUA9P,KAAA6P,OAKA7P,KAAA5J,KAAA,iBAGA4J,KAAA8P,UAOA,OAJAvW,IAAAqW,EAAAI,UAAAzW,GACAqW,EAAAtb,UAAAD,OAAA+K,OAAA7F,KAAAjF,WACAsb,EAAAtb,UAAA2b,YAAAL,EAEAA,EA/BkB,CAgCjBrW,OCnCc2W,EAAA,CAMfC,IAAA,MAMAC,OAAA,UCZeC,EAMf,iBCCWC,EAAM,mBAAAjc,OAAAkc,OAAAlc,OAAAkc,OAAA,SAAA3I,EAAA4I,GACjB,IAAAC,EAAA/I,UAEA,GAAAE,QACA,UAAA8I,UAAA,8CAIA,IADA,IAAAC,EAAAtc,OAAAuT,GACA5P,EAAA,EAAA4Y,EAAAlJ,UAAAzP,OAAwCD,EAAA4Y,IAAQ5Y,EAAA,CAChD,IAAAiP,EAAAwJ,EAAAzY,GACA,GAAAiP,QACA,QAAA5H,KAAA4H,EACAA,EAAA1S,eAAA8K,KACAsR,EAAAtR,GAAA4H,EAAA5H,IAKA,OAAAsR,GAQO,SAASE,EAAKrR,GACrB,QAAAC,KAAAD,SACAA,EAAAC,GAWO,SAAAqR,EAAAtR,GACP,IAAAuR,EAAA,GACA,QAAAtR,KAAAD,EACAuR,EAAAhb,KAAAyJ,EAAAC,IAEA,OAAAsR,EASO,SAASC,EAAOxR,GACvB,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,ECdO,SAAAwR,EAAAC,EAAAC,EAAAC,EAAAC,GAEP,IADA,IAAAC,EACAtZ,EAAA,EAAA4Y,EAAAM,EAAAjZ,OAAwCD,EAAA4Y,IAAQ5Y,EAEhD,IADAsZ,EAAAJ,EAAAlZ,IACAmZ,cACAG,EAAAC,SAAAH,EAIA,OAHAC,IACAC,EAAAE,YAAAxZ,GAEAsZ,EAYO,SAAAG,EAAA7J,EAAAzL,GACP,IAAAuV,EAAAC,EAAA/J,GACA,OAAA8J,IAAAvV,QAAApE,EAWA,SAAA4Z,EAAA/J,EAAAgK,GACA,IAAAF,EAAA9J,EAAAiK,MAIA,OAHAH,GAAAE,IACAF,EAAA9J,EAAAiK,MAAA,IAEAH,EAoBA,SAAAI,EAAAlK,EAAAzL,GACA,IAAA+U,EAAAO,EAAA7J,EAAAzL,GACA,GAAA+U,EAAA,CACA,QAAAlZ,EAAA,EAAA4Y,EAAAM,EAAAjZ,OAA0CD,EAAA4Y,IAAQ5Y,EACI,EACtD+Z,oBAAA5V,EAAA+U,EAAAlZ,GAAAga,eACMnB,EAAKK,EAAAlZ,IAEXkZ,EAAAjZ,OAAA,EACA,IAAAyZ,EAAAC,EAAA/J,GACA8J,WACAA,EAAAvV,GACA,IAAA9H,OAAAqJ,KAAAgU,GAAAzZ,QAxBA,SAAA2P,UACAA,EAAAiK,MAwBAI,CAAArK,KAsBO,SAASsK,EAAMtK,EAAAzL,EAAAgV,EAAAC,EAAAe,GACtB,IAAAT,EAAAC,EAAA/J,GAAA,GACAsJ,EAAAQ,EAAAvV,GACA+U,IACAA,EAAAQ,EAAAvV,GAAA,IAEA,IAAAmV,EAAAL,EAAAC,EAAAC,EAAAC,GAAA,GAmBA,OAlBAE,EACAa,IAEAb,EAAAc,UAAA,IAGAd,EAAuC,CACvCC,OAAAH,EACAgB,WAAAD,EACAhB,WACAvJ,SACAzL,QAEoD,EACpDkW,iBAAAlW,EA5IO,SAAAmV,GACP,IAAAU,EAAA,SAAAM,GACA,IAAAnB,EAAAG,EAAAH,SACAI,EAAAD,EAAAC,QAAAD,EAAA1J,OAIA,OAHA0J,EAAAc,UACAG,EAAAjB,GAEAH,EAAA3c,KAAA+c,EAAAe,IAGA,OADAhB,EAAAU,gBACAA,EAkIAQ,CAAAlB,IACAJ,EAAAnb,KAAAub,IAGAA,EAwBO,SAAAmB,EAAA7K,EAAAzL,EAAAgV,EAAAC,GACP,OAASc,EAAMtK,EAAAzL,EAAAgV,EAAAC,GAAA,GAiBR,SAAAsB,EAAA9K,EAAAzL,EAAAgV,EAAAC,GACP,IAAAF,EAAAO,EAAA7J,EAAAzL,GACA,GAAA+U,EAAA,CACA,IAAAI,EAAAL,EAAAC,EAAAC,EAAAC,GAAA,GACAE,GACAiB,EAAAjB,IAeO,SAAAiB,EAAAlT,GACP,GAAAA,KAAAuI,OAAA,CACoDvI,EAAA,OACpD0S,oBAAA1S,EAAAlD,KAAAkD,EAAA2S,eACA,IAAAd,EAAAO,EAAApS,EAAAuI,OAAAvI,EAAAlD,MACA,GAAA+U,EAAA,CACA,IAAAlZ,EAAA,gBAAAqH,IAAAmS,YAAAN,EAAApb,QAAAuJ,IACA,IAAArH,GACAkZ,EAAA3Y,OAAAP,EAAA,GAEA,IAAAkZ,EAAAjZ,QACA6Z,EAAAzS,EAAAuI,OAAAvI,EAAAlD,MAGI0U,EAAKxR,ICrPT,IAAIsT,EAAU,WAMd3S,KAAA4S,WAAA,GAMAD,EAAUre,UAAA6D,QAAA,WACV6H,KAAA4S,YACA5S,KAAA4S,WAAA,EACA5S,KAAA6S,oBAQAF,EAAUre,UAAAue,gBAAA,aAEK,IAAAC,EAAA,ECzBR,SAAAC,IACP,SAOO,SAAAC,IACP,SAQO,SAAAC,KCXP,IAAAC,EAAA,SAAA/W,GAKA6D,KAAAmT,mBAOAnT,KAAA7D,OAOA6D,KAAA4H,OAAA,MAuBO,SAAAwL,EAAAd,GACPA,EAAAc,kBAjBAF,EAAA5e,UAAA+e,eAAA,WACArT,KAAAmT,oBAAA,GAOAD,EAAA5e,UAAA8e,gBAAA,WACApT,KAAAmT,oBAAA,GAmBe,IAAAG,EAAA,ECsGAC,EA7IL,SAAAC,GACV,SAAAC,IAEAD,EAAAhf,KAAAwL,MAMAA,KAAA0T,iBAAA,GAMA1T,KAAA2T,aAAA,GAMA3T,KAAA4T,WAAA,GAoHA,OAhHAJ,IAAAC,EAAAzD,UAAAwD,GACAC,EAAAnf,UAAAD,OAAA+K,OAAAoU,KAAAlf,WACAmf,EAAAnf,UAAA2b,YAAAwD,EAMAA,EAAAnf,UAAA+d,iBAAA,SAAAlW,EAAAgV,GACA,IAAAD,EAAAlR,KAAA4T,WAAAzX,GACA+U,IACAA,EAAAlR,KAAA4T,WAAAzX,GAAA,KAEA,IAAA+U,EAAApb,QAAAqb,IACAD,EAAAnb,KAAAob,IAiBAsC,EAAAnf,UAAAuf,cAAA,SAAAC,GACA,IAAAxB,EAAA,iBAAAwB,EAAA,IAA8CR,EAAKQ,KACnD3X,EAAAmW,EAAAnW,KACAmW,EAAA1K,OAAA5H,KACA,IACA+T,EADA7C,EAAAlR,KAAA4T,WAAAzX,GAEA,GAAA+U,EAAA,CACA/U,KAAA6D,KAAA2T,eACA3T,KAAA2T,aAAAxX,GAAA,EACA6D,KAAA0T,iBAAAvX,GAAA,KAEA6D,KAAA2T,aAAAxX,GACA,QAAAnE,EAAA,EAAA4Y,EAAAM,EAAAjZ,OAA4CD,EAAA4Y,IAAQ5Y,EACpD,QAAAkZ,EAAAlZ,GAAAxD,KAAAwL,KAAAsS,MAAAa,mBAAA,CACAY,GAAA,EACA,MAIA,KADA/T,KAAA2T,aAAAxX,GACA,IAAA6D,KAAA2T,aAAAxX,GAAA,CACA,IAAA6X,EAAAhU,KAAA0T,iBAAAvX,GAEA,WADA6D,KAAA0T,iBAAAvX,GACA6X,KACAhU,KAAA+R,oBAAA5V,EAAyC8W,UAEzCjT,KAAA2T,aAAAxX,GAEA,OAAA4X,IAOAN,EAAAnf,UAAAue,gBAAA,YJiJO,SAAAjL,GACP,IAAA8J,EAAAC,EAAA/J,GACA,GAAA8J,EACA,QAAAvV,KAAAuV,EACAI,EAAAlK,EAAAzL,GIpJI8X,CAAWjU,OAUfyT,EAAAnf,UAAAmd,aAAA,SAAAtV,GACA,OAAA6D,KAAA4T,WAAAzX,IAQAsX,EAAAnf,UAAA4f,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAAnU,KAAA4T,WACAvf,OAAAqJ,KAAAsC,KAAA4T,YAAA3b,OAAA,GAOAwb,EAAAnf,UAAAyd,oBAAA,SAAA5V,EAAAgV,GACA,IAAAD,EAAAlR,KAAA4T,WAAAzX,GACA,GAAA+U,EAAA,CACA,IAAA3N,EAAA2N,EAAApb,QAAAqb,GACAhV,KAAA6D,KAAA0T,kBAEAxC,EAAA3N,GAA2B0P,IAC3BjT,KAAA0T,iBAAAvX,KAEA+U,EAAA3Y,OAAAgL,EAAA,GACA,IAAA2N,EAAAjZ,eACA+H,KAAA4T,WAAAzX,MAMAsX,EAzIU,CA0IRX,GC/JasB,EAAA,CAMfC,OAAA,SAEAC,MAAA,QACAC,YAAA,cACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,SCmGe,IAAAC,EAtHD,SAAAC,GACd,SAAAC,IAEAD,EAAArhB,KAAAwL,MAMAA,KAAA+V,UAAA,EAwFA,OApFAF,IAAAC,EAAA9F,UAAA6F,GACAC,EAAAxhB,UAAAD,OAAA+K,OAAAyW,KAAAvhB,WACAwhB,EAAAxhB,UAAA2b,YAAA6F,EAMAA,EAAAxhB,UAAA0hB,QAAA,aACAhW,KAAA+V,UACA/V,KAAA6T,cAAuBO,EAASC,SAShCyB,EAAAxhB,UAAA2hB,YAAA,WACA,OAAAjW,KAAA+V,WAYAD,EAAAxhB,UAAA4hB,GAAA,SAAA/Z,EAAAgV,GACA,GAAAgF,MAAAC,QAAAja,GAAA,CAGA,IAFA,IAAAyG,EAAAzG,EAAAlE,OACAyF,EAAA,IAAAyY,MAAAvT,GACA5K,EAAA,EAAqBA,EAAA4K,IAAS5K,EAC9B0F,EAAA1F,GAAkBka,EAAMlS,KAAA7D,EAAAnE,GAAAmZ,GAExB,OAAAzT,EAEA,OAAawU,EAAMlS,KAAyB,EAAAmR,IAa5C2E,EAAAxhB,UAAA+hB,KAAA,SAAAla,EAAAgV,GACA,GAAAgF,MAAAC,QAAAja,GAAA,CAGA,IAFA,IAAAyG,EAAAzG,EAAAlE,OACAyF,EAAA,IAAAyY,MAAAvT,GACA5K,EAAA,EAAqBA,EAAA4K,IAAS5K,EAC9B0F,EAAA1F,GAAkBya,EAAUzS,KAAA7D,EAAAnE,GAAAmZ,GAE5B,OAAAzT,EAEA,OAAa+U,EAAUzS,KAAyB,EAAAmR,IAUhD2E,EAAAxhB,UAAAgiB,GAAA,SAAAna,EAAAgV,GACA,GAAAgF,MAAAC,QAAAja,GACA,QAAAnE,EAAA,EAAA4Y,EAAAzU,EAAAlE,OAAuCD,EAAA4Y,IAAQ5Y,EACvC0a,EAAQ1S,KAAA7D,EAAAnE,GAAAmZ,QAIVuB,EAAQ1S,KAAyB,EAAAmR,IAIvC2E,EAjGc,CAkGZvC,GCtGKgD,EAAA,SAAArD,GACP,SAAAqD,EAAApa,EAAAkD,EAAAmX,GACAtD,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAX,MAQAW,KAAAwW,WAQA,OAJAtD,IAAAqD,EAAAvG,UAAAkD,GACAqD,EAAAjiB,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACAiiB,EAAAjiB,UAAA2b,YAAAsG,EAEAA,EAzBO,CA0BLjD,GA0KFmD,EAAA,GAOO,SAAAC,EAAArX,GACP,OAAAoX,EAAAliB,eAAA8K,GACAoX,EAAApX,GACAoX,EAAApX,GAAA,UAAAA,EAIe,IAAAsX,EA1ID,SAAAb,GACd,SAAAc,EAAAC,GACAf,EAAAthB,KAAAwL,MAMIwP,EAAMxP,MAMVA,KAAA8W,QAAA,QAEA/e,IAAA8e,GACA7W,KAAA+W,cAAAF,GAoGA,OAhGAf,IAAAc,EAAA5G,UAAA8F,GACAc,EAAAtiB,UAAAD,OAAA+K,OAAA0W,KAAAxhB,WACAsiB,EAAAtiB,UAAA2b,YAAA2G,EAQAA,EAAAtiB,UAAAiC,IAAA,SAAA8I,GACA,IAAA5I,EAIA,OAHAuJ,KAAA8W,QAAAviB,eAAA8K,KACA5I,EAAAuJ,KAAA8W,QAAAzX,IAEA5I,GAQAmgB,EAAAtiB,UAAA0iB,QAAA,WACA,OAAA3iB,OAAAqJ,KAAAsC,KAAA8W,UAQAF,EAAAtiB,UAAA2iB,cAAA,WACA,OAAW3G,EAAM,GAAGtQ,KAAA8W,UAOpBF,EAAAtiB,UAAA4iB,OAAA,SAAA7X,EAAAmX,GACA,IAAAW,EACAA,EAAAT,EAAArX,GACAW,KAAA6T,cAAA,IAAA0C,EAAAY,EAAA9X,EAAAmX,IACAW,EAAgB9G,EAChBrQ,KAAA6T,cAAA,IAAA0C,EAAAY,EAAA9X,EAAAmX,KAUAI,EAAAtiB,UAAAkC,IAAA,SAAA6I,EAAA5I,EAAA2gB,GACA,GAAAA,EACApX,KAAA8W,QAAAzX,GAAA5I,MACK,CACL,IAAA+f,EAAAxW,KAAA8W,QAAAzX,GACAW,KAAA8W,QAAAzX,GAAA5I,EACA+f,IAAA/f,GACAuJ,KAAAkX,OAAA7X,EAAAmX,KAYAI,EAAAtiB,UAAAyiB,cAAA,SAAAhG,EAAAqG,GACA,QAAA/X,KAAA0R,EACA/Q,KAAAxJ,IAAA6I,EAAA0R,EAAA1R,GAAA+X,IAUAR,EAAAtiB,UAAA+iB,MAAA,SAAAhY,EAAA+X,GACA,GAAA/X,KAAAW,KAAA8W,QAAA,CACA,IAAAN,EAAAxW,KAAA8W,QAAAzX,UACAW,KAAA8W,QAAAzX,GACA+X,GACApX,KAAAkX,OAAA7X,EAAAmX,KAKAI,EArHc,CAsHZhB,GC/LF0B,EACA,SASOC,EAAA,SAAArE,GACP,SAAAqE,EAAApb,EAAAqb,GACAtE,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAyX,QAAAD,EAQA,OAJAtE,IAAAqE,EAAAvH,UAAAkD,GACAqE,EAAAjjB,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACAijB,EAAAjjB,UAAA2b,YAAAsH,EAEAA,EAjBO,CAkBLjE,GAuPaoE,EAjOD,SAAAd,GACd,SAAAe,EAAAC,EAAAC,GAEAjB,EAAApiB,KAAAwL,MAEA,IAAA1E,EAAAuc,GAAA,GAcA,GARA7X,KAAA8X,UAAAxc,EAAAyc,OAMA/X,KAAAgY,OAAAJ,GAAA,GAEA5X,KAAA8X,QACA,QAAA9f,EAAA,EAAA4Y,EAAA5Q,KAAAgY,OAAA/f,OAA8CD,EAAA4Y,IAAQ5Y,EACtDgI,KAAAiY,cAAAjY,KAAAgY,OAAAhgB,MAIAgI,KAAAkY,gBAoMA,OAhMAtB,IAAAe,EAAA3H,UAAA4G,GACAe,EAAArjB,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACAqjB,EAAArjB,UAAA2b,YAAA0H,EAMAA,EAAArjB,UAAAiM,MAAA,WACA,KAAAP,KAAAmY,YAAA,GACAnY,KAAA9D,OAWAyb,EAAArjB,UAAAiN,OAAA,SAAAW,GACA,QAAAlK,EAAA,EAAA4Y,EAAA1O,EAAAjK,OAAoCD,EAAA4Y,IAAQ5Y,EAC5CgI,KAAAjK,KAAAmM,EAAAlK,IAEA,OAAAgI,MAUA2X,EAAArjB,UAAAqJ,QAAA,SAAAya,GAEA,IADA,IAAAC,EAAArY,KAAAgY,OACAhgB,EAAA,EAAA4Y,EAAAyH,EAAApgB,OAAsCD,EAAA4Y,IAAQ5Y,EAC9CogB,EAAAC,EAAArgB,KAAAqgB,IAYAV,EAAArjB,UAAAgkB,SAAA,WACA,OAAAtY,KAAAgY,QASAL,EAAArjB,UAAAoI,KAAA,SAAA6G,GACA,OAAAvD,KAAAgY,OAAAzU,IASAoU,EAAArjB,UAAA6jB,UAAA,WACA,OAAAnY,KAAAzJ,IAAA+gB,IASAK,EAAArjB,UAAA+U,SAAA,SAAA9F,EAAAgV,GACAvY,KAAA8X,SACA9X,KAAAiY,cAAAM,GAEAvY,KAAAgY,OAAAzf,OAAAgL,EAAA,EAAAgV,GACAvY,KAAAkY,gBACAlY,KAAA6T,cACA,IAAA0D,EAA0BrH,EAAmBC,IAAAoI,KAS7CZ,EAAArjB,UAAA4H,IAAA,WACA,OAAA8D,KAAAwY,SAAAxY,KAAAmY,YAAA,IASAR,EAAArjB,UAAAyB,KAAA,SAAAwiB,GACAvY,KAAA8X,SACA9X,KAAAiY,cAAAM,GAEA,IAAAhZ,EAAAS,KAAAmY,YAEA,OADAnY,KAAAqJ,SAAA9J,EAAAgZ,GACAvY,KAAAmY,aASAR,EAAArjB,UAAAgP,OAAA,SAAAiV,GAEA,IADA,IAAArW,EAAAlC,KAAAgY,OACAhgB,EAAA,EAAA4Y,EAAA1O,EAAAjK,OAAoCD,EAAA4Y,IAAQ5Y,EAC5C,GAAAkK,EAAAlK,KAAAugB,EACA,OAAAvY,KAAAwY,SAAAxgB,IAaA2f,EAAArjB,UAAAkkB,SAAA,SAAAjV,GACA,IAAAkV,EAAAzY,KAAAgY,OAAAzU,GAIA,OAHAvD,KAAAgY,OAAAzf,OAAAgL,EAAA,GACAvD,KAAAkY,gBACAlY,KAAA6T,cAAA,IAAA0D,EAA2CrH,EAAmBE,OAAAqI,IAC9DA,GASAd,EAAArjB,UAAAokB,MAAA,SAAAnV,EAAAgV,GACA,IAAAhZ,EAAAS,KAAAmY,YACA,GAAA5U,EAAAhE,EAAA,CACAS,KAAA8X,SACA9X,KAAAiY,cAAAM,EAAAhV,GAEA,IAAAkV,EAAAzY,KAAAgY,OAAAzU,GACAvD,KAAAgY,OAAAzU,GAAAgV,EACAvY,KAAA6T,cACA,IAAA0D,EAA4BrH,EAAmBE,OAAAqI,IAC/CzY,KAAA6T,cACA,IAAA0D,EAA4BrH,EAAmBC,IAAAoI,QAC1C,CACL,QAAA/c,EAAA+D,EAAqB/D,EAAA+H,IAAW/H,EAChCwE,KAAAqJ,SAAA7N,OAAAzD,GAEAiI,KAAAqJ,SAAA9F,EAAAgV,KAOAZ,EAAArjB,UAAA4jB,cAAA,WACAlY,KAAAxJ,IAAA8gB,EAAAtX,KAAAgY,OAAA/f,SAQA0f,EAAArjB,UAAA2jB,cAAA,SAAAM,EAAAI,GACA,QAAA3gB,EAAA,EAAA4Y,EAAA5Q,KAAAgY,OAAA/f,OAA4CD,EAAA4Y,IAAQ5Y,EACpD,GAAAgI,KAAAgY,OAAAhgB,KAAAugB,GAAAvgB,IAAA2gB,EACA,UAAkBhJ,EAAc,KAKhCgI,EA7Nc,CA8NZhB,GCvPaiC,EA5Bf,SAAA1F,GACA,SAAA2F,EAAA1c,EAAAJ,EAAA+c,GAEA5F,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAjE,MAOAiE,KAAA+Y,gBAAAhhB,IAAA+gB,IAAA,KAQA,OAJA5F,IAAA2F,EAAA7I,UAAAkD,GACA2F,EAAAvkB,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACAukB,EAAAvkB,UAAA2b,YAAA4I,EAEAA,EAzBA,CA0BEvF,GC0Ca0F,EApEf,SAAAH,GACA,SAAAI,EAAA9c,EAAAJ,EAAAmd,EAAAC,EAAAL,GAEAD,EAAArkB,KAAAwL,KAAA7D,EAAAJ,EAAA+c,GAQA9Y,KAAAoZ,cAAAF,EAOAlZ,KAAAqZ,MAAAtd,EAAAud,cAAAJ,GAOAlZ,KAAAuZ,WAAAxd,EAAAyd,uBAAAxZ,KAAAqZ,OASArZ,KAAAyZ,cAAA1hB,IAAAohB,KA8BA,OA1BAN,IAAAI,EAAAjJ,UAAA6I,GACAI,EAAA3kB,UAAAD,OAAA+K,OAAAyZ,KAAAvkB,WACA2kB,EAAA3kB,UAAA2b,YAAAgJ,EAQAA,EAAA3kB,UAAA+e,eAAA,WACAwF,EAAAvkB,UAAA+e,eAAA7e,KAAAwL,MACAA,KAAAoZ,cAAA/F,kBASA4F,EAAA3kB,UAAA8e,gBAAA,WACAyF,EAAAvkB,UAAA8e,gBAAA5e,KAAAwL,MACAA,KAAAoZ,cAAAhG,mBAGA6F,EAhEA,CAiEEL,GCvEFc,EAAA,oBAAAC,UACAA,UAAAC,UAAAC,cAAA,GAMOC,GAAA,IAAAJ,EAAA5jB,QAAA,WAMAikB,GAAA,IAAAL,EAAA5jB,QAAA,eAAA4jB,EAAA5jB,QAAA,SAMAkkB,GAAA,IAAAN,EAAA5jB,QAAA,eAAA4jB,EAAA5jB,QAAA,QAMAmkB,GAAA,IAAAP,EAAA5jB,QAAA,aAUAokB,EAAAnmB,OAAAomB,kBAAA,EAOAC,EAAA,WACP,IAAAC,GAAA,EACA,IACAA,IAAAzf,SAAAC,cAAA,UAAAyf,WAAA,MAAAC,YACG,MAAA5jB,IAGH,OAAA0jB,EAPO,GA0BAG,GATAb,UASA,iBAAA5lB,QAQA0mB,EAAA,iBAAA1mB,OAQA2mB,IAAAf,UAAA,iBC/EQgB,EAAA,CAQfC,YAAA,cAOApG,MAASJ,EAASI,MAOlBC,SAAYL,EAASK,SAOrBoG,YAAA,cAQAC,YAAA,cAEAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBC7BeC,GApBf,SAAArC,GACA,SAAAsC,EAAApf,EAAAJ,EAAAyf,EAAArC,EAAAL,GAEAG,EAAAzkB,KAAAwL,KAAA7D,EAAAJ,EAAAyf,EAAApC,cAAAD,EAAAL,GAMA9Y,KAAAwb,eAQA,OAJAvC,IAAAsC,EAAAvL,UAAAiJ,GACAsC,EAAAjnB,UAAAD,OAAA+K,OAAA6Z,KAAA3kB,WACAinB,EAAAjnB,UAAA2b,YAAAsL,EAEAA,EAjBA,CAkBEvC,GCfayC,GAAA,CACfX,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCZIK,GAAW,SAAAC,EAAAC,GAKf5b,KAAA2b,aAOA3b,KAAA6b,SAAAD,GAOAF,GAAWpnB,UAAAwnB,UAAA,WACX,OAAAznB,OAAAqJ,KAAAsC,KAAA6b,WAQAH,GAAWpnB,UAAAynB,mBAAA,SAAA5E,GACX,OAAAnX,KAAA6b,SAAA1E,IAGe,IAAA6E,GAAA,GCIRC,GAAA,EAMAC,GAAA,QAgBP,SAAAC,GAAAC,GACA,IAAApc,KAAAqc,2BAAAD,GAAA,CAGAH,GAAA3V,aAAAtG,KAAAsc,YACAtc,KAAAuc,OAAAH,GAEA,IAAAzlB,EAAA6lB,GAAAJ,EAAApc,KAAA2b,YACA3b,KAAAsc,WAAAL,GAAA3V,YAAA8V,EACApc,KAAA2b,WAAAc,KAAA9lB,EAAAylB,IAUA,SAAAM,GAAAN,GACA,IAAApc,KAAAqc,2BAAAD,GAAA,CACA,IAAAzlB,EAAA6lB,GAAAJ,EAAApc,KAAA2b,YACA3b,KAAA2b,WAAAgB,KAAAhmB,EAAAylB,IAUA,SAAAQ,GAAAR,GACA,IAAApc,KAAAqc,2BAAAD,GAAA,CACA,IAAAtiB,EAAAkG,KAAAsc,WAAAL,GAAA3V,YAEA,GAAAxM,KAAA+iB,SAAAT,EAAAS,OAAA,CACA,IAAAlmB,EAAA6lB,GAAAJ,EAAApc,KAAA2b,YACA3b,KAAA2b,WAAAmB,GAAAnmB,EAAAylB,GACApc,KAAA+c,iBAWA,SAAAC,GAAAZ,GACA,IAAApc,KAAAqc,2BAAAD,GAAA,CACA,IAAAzlB,EAAA6lB,GAAAJ,EAAApc,KAAA2b,YACA3b,KAAA2b,WAAAsB,UAAAtmB,EAAAylB,IAUA,SAAAc,GAAAd,GACA,IAAApc,KAAAqc,2BAAAD,GAAA,CACA,IAAAzlB,EAAA6lB,GAAAJ,EAAApc,KAAA2b,YACA3b,KAAA2b,WAAAwB,SAAAxmB,EAAAylB,IAsGO,SAAAI,GAAAJ,EAAAT,GACP,IAAAhlB,EAAAglB,EAAAyB,WAAAhB,KAGAiB,EAAA1mB,EAAA0c,eAUA,OATA1c,EAAA0c,eAAA,WACA+I,EAAA/I,iBACAgK,KAGA1mB,EAAA2mB,UAAArB,GACAtlB,EAAA4mB,WAAA,EACA5mB,EAAA6mB,YAAAtB,GAEAvlB,EAIe,IAAA8mB,GAnHf,SAAAC,GACA,SAAAC,EAAAhC,GACA,IAAAC,EAAA,CACAO,aACAO,aACAE,WACAI,aACAE,aAEAQ,EAAAlpB,KAAAwL,KAAA2b,EAAAC,GAMA5b,KAAAsc,WAAAX,EAAAW,WAMAtc,KAAA4d,YAAA,GAgEA,OA7DAF,IAAAC,EAAA3N,UAAA0N,GACAC,EAAArpB,UAAAD,OAAA+K,OAAAse,KAAAppB,WACAqpB,EAAArpB,UAAA2b,YAAA0N,EA0BAA,EAAArpB,UAAA+nB,2BAAA,SAAAD,GAIA,IAHA,IAAAyB,EAAA7d,KAAA4d,YACAE,EAAA1B,EAAA2B,QACAC,EAAA5B,EAAA6B,QACAjmB,EAAA,EAAAa,EAAAglB,EAAA5lB,OAAAd,OAAA,EAAiDa,EAAAa,IAAA1B,EAAA0mB,EAAA7lB,IAAuBA,IAAA,CAExE,IAAAkmB,EAAAhe,KAAAie,IAAAL,EAAA3mB,EAAA,IACAinB,EAAAle,KAAAie,IAAAH,EAAA7mB,EAAA,IACA,GAAA+mB,GA3IA,IA2IAE,GA3IA,GA4IA,SAGA,UAQAT,EAAArpB,UAAAioB,OAAA,SAAAH,GACA,IAAAzlB,EAAA6lB,GAAAJ,EAAApc,KAAA2b,YACA3b,KAAA2b,WAAAY,OAAA5lB,EAAAylB,GACApc,KAAA+c,gBAMAY,EAAArpB,UAAAyoB,aAAA,kBACA/c,KAAAsc,WAAAL,GAAA3V,aAGAqX,EArFA,CAsFE3B,ICnLFqC,GAAA,CACA,GACA,cACA,QACA,MACA,SASA,SAAAC,GAAAlC,GACApc,KAAAsc,WAAAF,EAAAkB,UAAAhX,YAAA8V,EACA,IAAAzlB,EAAAqJ,KAAAue,cAAAnC,GACApc,KAAA2b,WAAAc,KAAA9lB,EAAAylB,GASA,SAAAoC,GAAApC,GACA,IAAAzlB,EAAAqJ,KAAAue,cAAAnC,GACApc,KAAA2b,WAAAgB,KAAAhmB,EAAAylB,GASA,SAAAqC,GAAArC,GACA,IAAAzlB,EAAAqJ,KAAAue,cAAAnC,GACApc,KAAA2b,WAAAmB,GAAAnmB,EAAAylB,GACApc,KAAA0e,QAAAtC,EAAAkB,WASA,SAAAqB,GAAAvC,GACA,IAAAzlB,EAAAqJ,KAAAue,cAAAnC,GACApc,KAAA2b,WAAAwB,SAAAxmB,EAAAylB,GASA,SAAAwC,GAAAxC,GACA,IAAAzlB,EAAAqJ,KAAAue,cAAAnC,GACApc,KAAA2b,WAAAsB,UAAAtmB,EAAAylB,GASA,SAAAyC,GAAAzC,GACA,IAAAzlB,EAAAqJ,KAAAue,cAAAnC,GACApc,KAAA2b,WAAAY,OAAA5lB,EAAAylB,GACApc,KAAA0e,QAAAtC,EAAAkB,WASA,SAAAwB,GAAA1C,GACA,IAAAzlB,EAAAqJ,KAAA2b,WAAAoD,UAAA,qBAAA3C,KACApc,KAAA2b,WAAA9H,cAAAld,GASA,SAAAqoB,GAAA5C,GACA,IAAAzlB,EAAAqJ,KAAA2b,WAAAoD,UAAA,oBAAA3C,KACApc,KAAA2b,WAAA9H,cAAAld,GAGA,IAuDesoB,GAvDf,SAAAvB,GACA,SAAAwB,EAAAvD,GACA,IAAAC,EAAA,CACAuD,cAAAb,GACAc,cAAAZ,GACAa,YAAAZ,GACAa,aAAAX,GACAY,cAAAX,GACAY,gBAAAX,GACAY,oBAAAT,GACAU,qBAAAZ,IAEApB,EAAAlpB,KAAAwL,KAAA2b,EAAAC,GAMA5b,KAAAsc,WAAAX,EAAAW,WAkCA,OA/BAoB,IAAAwB,EAAAlP,UAAA0N,GACAwB,EAAA5qB,UAAAD,OAAA+K,OAAAse,KAAAppB,WACA4qB,EAAA5qB,UAAA2b,YAAAiP,EAUAA,EAAA5qB,UAAAiqB,cAAA,SAAAnC,GAEA,IAAAzlB,EAAAylB,EAMA,MALA,iBAAAA,EAAAoB,eACA7mB,EAAAqJ,KAAA2b,WAAAyB,WAAAhB,MACAoB,YAAAa,GAAAjC,EAAAoB,cAGA7mB,GAOAuoB,EAAA5qB,UAAAoqB,QAAA,SAAApB,UACAtd,KAAAsc,WAAAgB,EAAAhX,aAGA4Y,EApDA,CAqDElD,ICtJF,SAAA2D,GAAAvD,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAAyD,GAAAzD,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAA0D,GAAA1D,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAA2D,GAAA3D,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAA4D,GAAA5D,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAA6D,GAAA7D,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAA8D,GAAA9D,GACApc,KAAA2b,WAAAiE,gBAAAxD,GASA,SAAA+D,GAAA/D,GACApc,KAAA2b,WAAAiE,gBAAAxD,GAGA,IAsBegE,GAtBf,SAAA1C,GACA,SAAA2C,EAAA1E,GACA,IAAAC,EAAA,CACA0E,YAAAX,GACAY,YAAAV,GACAW,UAAAV,GACAW,WAAAV,GACAW,YAAAV,GACAW,cAAAV,GACAW,kBAAAT,GACAU,mBAAAX,IAEAxC,EAAAlpB,KAAAwL,KAAA2b,EAAAC,GAOA,OAJA8B,IAAA2C,EAAArQ,UAAA0N,GACA2C,EAAA/rB,UAAAD,OAAA+K,OAAAse,KAAAppB,WACA+rB,EAAA/rB,UAAA2b,YAAAoQ,EAEAA,EAnBA,CAoBErE,IC/FF8E,IAAA,EAGAC,GAAA,SAAAC,GACA,SAAAD,EAAA5kB,EAAAid,EAAA6H,GACAD,EAAAxsB,KAAAwL,KAAA7D,GAMA6D,KAAAoZ,gBAEA,IAAA8H,EAAAD,GAAA,GAKAjhB,KAAAmhB,QA+IA,SAAAD,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAL,GACAK,EAAAD,EAAAC,aAEA,OAAAD,EAAAE,OACA,OAAAD,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,QAAAA,EAAA,EAGA,OAAAA,EAhLAE,CAAAH,GAKAlhB,KAAAshB,SAoLA,SAAAJ,EAAAC,GAGA,IAAAG,EAAA,EAEAA,EADAJ,EAAAI,SACAJ,EAAAI,SAEAH,EAAA,KAEA,OAAAG,EA7LAC,CAAAL,EAAAlhB,KAAAmhB,SAOAnhB,KAAAwhB,QAAA,YAAAN,KAAA,QAKAlhB,KAAAyhB,WAAA,eAAAP,KAAA,WAKAlhB,KAAA0hB,KAAA,SAAAR,IAAA,UAKAlhB,KAAA2hB,OAAA,WAAAT,IAAA,YAKAlhB,KAAA4hB,QAAA,YAAAV,IAAA,UAKAlhB,KAAA6hB,QAAA,YAAAX,IAAA,UAKAlhB,KAAA+d,QAAA,YAAAmD,IAAA,UAKAlhB,KAAAie,QAAA,YAAAiD,IAAA,UAKAlhB,KAAA8hB,QAAA,YAAAZ,KAAA,QAKAlhB,KAAA+hB,OAAA,WAAAb,KAAA,OAKAlhB,KAAAgiB,SAAA,aAAAd,KAAA,SAKAlhB,KAAAiiB,QAAA,YAAAf,KAAA,QAKAlhB,KAAA6c,OAAA,WAAAqE,IAAA,SAKAlhB,KAAAkiB,cAAA,kBAAAhB,EACAA,EAAA,mBAQAlhB,KAAAsd,UAAA,cAAA4D,IAAA,YAKAlhB,KAAAmiB,MAAA,UAAAjB,IAAA,QAKAlhB,KAAAgC,OAAA,WAAAkf,IAAA,SAKAlhB,KAAAoiB,MAAA,UAAAlB,IAAA,QAKAlhB,KAAAqiB,MAAA,UAAAnB,IAAA,QAKAlhB,KAAAwd,YAAA,gBAAA0D,IAAA,eAKAlhB,KAAAsiB,YAAA,gBAAApB,IAAA,cAKAlhB,KAAAud,UAAA,cAAA2D,KAAA,UAGA9H,EAAA/F,iBACArT,KAAAqT,eAAA,WACA+F,EAAA/F,mBASA,OAJA2N,IAAAD,EAAA/Q,UAAAgR,GACAD,EAAAzsB,UAAAD,OAAA+K,OAAA4hB,KAAA1sB,WACAysB,EAAAzsB,UAAA2b,YAAA8Q,EAEAA,EAtJA,CAuJEzN,IAiEF,WACA,IACA,IAAAiP,EAAA,IAAAC,WAAA,SAAsCrB,QAAA,IACtCL,GAAA,IAAAyB,EAAApB,QACG,MAAAxqB,KAJH,GASe,IAAA8rB,GAAA,GC7NR,SAAAC,GAAAlmB,EAAAC,GACP,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,IAuBO,SAAAkmB,GAAAzgB,EAAA0F,EAAAgb,GACP,IAMA5qB,EANAuH,EAAA2C,EAAAjK,OACA,GAAAiK,EAAA,IAAA0F,EACA,SACG,GAAAA,GAAA1F,EAAA3C,EAAA,GACH,OAAAA,EAAA,EAGA,GAAAqjB,EAAA,GACA,IAAA5qB,EAAA,EAAiBA,EAAAuH,IAAOvH,EACxB,GAAAkK,EAAAlK,GAAA4P,EACA,OAAA5P,EAAA,OAGK,GAAA4qB,EAAA,GACL,IAAA5qB,EAAA,EAAiBA,EAAAuH,IAAOvH,EACxB,GAAAkK,EAAAlK,IAAA4P,EACA,OAAA5P,OAIA,IAAAA,EAAA,EAAiBA,EAAAuH,IAAOvH,EAAA,CACxB,GAAAkK,EAAAlK,IAAA4P,EACA,OAAA5P,EACS,GAAAkK,EAAAlK,GAAA4P,EACT,OAAA1F,EAAAlK,EAAA,GAAA4P,IAAA1F,EAAAlK,GACAA,EAAA,EAEAA,EAKA,OAAAuH,EAAA,EAUO,SAAAsjB,GAAA3gB,EAAA4gB,EAAAC,GACP,KAAAD,EAAAC,GAAA,CACA,IAAAxV,EAAArL,EAAA4gB,GACA5gB,EAAA4gB,GAAA5gB,EAAA6gB,GACA7gB,EAAA6gB,GAAAxV,IACAuV,IACAC,GAUO,SAAAxhB,GAAAW,EAAAjJ,GAGP,IAFA,IAAA+pB,EAAA7M,MAAAC,QAAAnd,KAAA,CAAAA,GACAhB,EAAA+qB,EAAA/qB,OACAD,EAAA,EAAiBA,EAAAC,EAAYD,IAC7BkK,IAAAjK,QAAA+qB,EAAAhrB,GA8CO,SAAAirB,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAAjrB,OACA,GAAAmrB,IAAAD,EAAAlrB,OACA,SAEA,QAAAD,EAAA,EAAiBA,EAAAorB,EAAUprB,IAC3B,GAAAkrB,EAAAlrB,KAAAmrB,EAAAnrB,GACA,SAGA,SCvIA,SAAAqrB,GAAAjH,GACApc,KAAAsjB,eAAAlH,GACApc,KAAAujB,iBAAAnH,EAAAoH,eAAA,IACAxjB,KAAAyjB,iBAAArH,GACApc,KAAA0jB,cACA1jB,KAAA2jB,gBAAAvH,EAAApc,KAAA4jB,WASA,SAAAC,GAAAzH,GACApc,KAAA2jB,gBAAAvH,EAAApc,KAAA8jB,cAUA,SAAAC,GAAA3H,GACApc,KAAAyjB,iBAAArH,GACApc,KAAA2jB,gBAAAvH,EAAApc,KAAAgkB,QAUA,SAAAC,GAAA7H,GACApc,KAAA2jB,gBAAAvH,EAAApc,KAAAkkB,YAIA,IAsUeC,GAtUA,SAAAzG,GACf,SAAA0G,EAAAzI,EAAA0I,GACA,IAAAzI,EAAA,CACAyH,cACAQ,aACAE,YACAE,gBAEAvG,EAAAlpB,KAAAwL,KAAA2b,EAAAC,GAMA5b,KAAAsc,WAAAX,EAAAW,WAMAtc,KAAAqkB,cAMArkB,KAAAskB,mBAAAvsB,EAMAiI,KAAA0jB,YAAA,EAMA1jB,KAAAukB,SAQAvkB,KAAAwkB,cAAA,KAqRA,OAlRA9G,IAAA0G,EAAApU,UAAA0N,GACA0G,EAAA9vB,UAAAD,OAAA+K,OAAAse,KAAAppB,WACA8vB,EAAA9vB,UAAA2b,YAAAmU,EAOAA,EAAA9vB,UAAAmwB,gBAAA,SAAAC,GACA,OAAA1kB,KAAAskB,gBAAAI,EAAAC,YAQAP,EAAA9vB,UAAAivB,iBAAA,SAAAmB,GACA,IAAAE,EAAAvwB,OAAAqJ,KAAAsC,KAAAsc,YAAArkB,QACA,IAAA2sB,GAAA,IAAAA,GAAuC3I,GAAU3V,aAAAtG,KAAAsc,cACjDtc,KAAAskB,cAAAI,EAAAC,WACA3kB,KAAA6kB,2BAQAT,EAAA9vB,UAAAwwB,sBAAA,SAAAC,GACAA,EAAAxH,YACAvd,KAAAskB,mBAAAvsB,EACAiI,KAAAglB,qBAOAZ,EAAA9vB,UAAA0wB,iBAAA,WACAhlB,KAAAukB,SAAAU,WACAjlB,KAAAklB,wBAAA5lB,KAAAU,MAnJA,MA0JAokB,EAAA9vB,UAAA4wB,wBAAA,WACAllB,KAAA0jB,YAAA,EACA1jB,KAAAukB,cAAAxsB,GAMAqsB,EAAA9vB,UAAAuwB,uBAAA,gBACA9sB,IAAAiI,KAAAukB,UACAY,aAAAnlB,KAAAukB,WAUAH,EAAA9vB,UAAA8wB,gBAAA,SAAAlM,EAAAwL,GACA,IAAA/tB,EAAAqJ,KAAA2b,WAAAyB,WAAAlE,EAAAwL,GAyBA,OArBA/tB,EAAA2mB,UAAAoH,EAAAC,WAAA,EAGAhuB,EAAA6qB,SAAA,EACA7qB,EAAA8qB,YAAA,EACA9qB,EAAAgrB,OAAA3hB,KAAA0jB,YACA/sB,EAAAkmB,OAAA,EACAlmB,EAAAwqB,QAAA,EACAxqB,EAAAwrB,MAAAuC,EAAAW,SAAA,EACA1uB,EAAAqL,OAAA0iB,EAAAY,SAAA,EACA3uB,EAAA2qB,SAAAoD,EAAAa,OAAA,GACA5uB,EAAA4mB,UAAAvd,KAAAykB,gBAAAC,GACA/tB,EAAA6mB,YA1LgB,QA8LhB7mB,EAAAonB,QAAA2G,EAAA3G,QACApnB,EAAAsnB,QAAAyG,EAAAzG,QACAtnB,EAAAirB,QAAA8C,EAAA9C,QACAjrB,EAAAkrB,QAAA6C,EAAA7C,QAEAlrB,GAQAytB,EAAA9vB,UAAAqvB,gBAAA,SAAAvH,EAAAoJ,GACA,IAAAC,EAAAtP,MAAA7hB,UAAAwH,MAAAtH,KAAA4nB,EAAAoH,gBACAoB,EAAAa,EAAAxtB,OACA,SAAAob,IACA+I,EAAA/I,iBAEA,QAAArb,EAAA,EAAmBA,EAAA4sB,IAAW5sB,EAAA,CAC9B,IAAA0tB,EAAA1lB,KAAAolB,gBAAAhJ,EAAAqJ,EAAAztB,IAEA0tB,EAAArS,iBACAmS,EAAAhxB,KAAAwL,KAAAoc,EAAAsJ,KAUAtB,EAAA9vB,UAAAqxB,WAAA,SAAAC,EAAAC,GAEA,IADA,IAAAhtB,EAAA+sB,EAAA3tB,OACAD,EAAA,EAAmBA,EAAAa,EAAOb,IAAA,CAE1B,GADA4tB,EAAA5tB,GACA2sB,aAAAkB,EACA,SAGA,UAcAzB,EAAA9vB,UAAAgvB,eAAA,SAAAlH,GACA,IAAAwJ,EAAAxJ,EAAAqJ,QAGA/nB,EAAArJ,OAAAqJ,KAAAsC,KAAAsc,YACAsI,EAAAlnB,EAAAzF,OACA,GAAA2sB,GAAAgB,EAAA3tB,OAAA,CAEA,IADA,IAAA2G,EAAA,GACA5G,EAAA,EAAqBA,EAAA4sB,IAAW5sB,EAAA,CAChC,IAAAqH,EAAAymB,OAAApoB,EAAA1F,IACAvB,EAAAuJ,KAAAsc,WAAAjd,GAIAA,GAAmB4c,IAAUjc,KAAA2lB,WAAAC,EAAAvmB,EAAA,IAC7BT,EAAA7I,KAAAU,EAAAsvB,KAGA,QAAAC,EAAA,EAAuBA,EAAApnB,EAAA3G,SAAgB+tB,EACvChmB,KAAAkkB,WAAA9H,EAAAxd,EAAAonB,MAUA5B,EAAA9vB,UAAAsvB,UAAA,SAAA1K,EAAA6L,GACA/kB,KAAAsc,WAAAyI,EAAAzH,WAAA,CACA1V,OAAAmd,EAAAnd,OACAme,IAAAhB,EACAkB,UAAAlB,EAAAnd,QAEA5H,KAAA2b,WAAAuK,KAAAnB,EAAA7L,GACAlZ,KAAA2b,WAAAwK,MAAApB,EAAA7L,GACAlZ,KAAA2b,WAAAc,KAAAsI,EAAA7L,IAQAkL,EAAA9vB,UAAAwvB,aAAA,SAAA5K,EAAA6L,GACA,IAAAjR,EAAAiR,EACAW,EAAA1lB,KAAAsc,WAAAxI,EAAAwJ,WAEA,GAAAoI,EAAA,CAGA,IAAAU,EAAAV,EAAAK,IACAE,EAAAP,EAAAO,UACAjmB,KAAA2b,WAAAgB,KAAA7I,EAAAoF,GACAkN,GAAAH,IAAAnS,EAAAlM,SACAwe,EAAAlE,cAAApO,EAAAlM,OACwB,EAAAsa,cAAA+D,EAExBG,EAAAxe,OAAAqe,EACAnS,EAAAlM,QACA5H,KAAA2b,WAAAwB,SAAAiJ,EAAAlN,GACAlZ,KAAA2b,WAAAsB,UAAAnJ,EAAAoF,KAG0B,EAAAtR,OAAAqe,EACA,EAAA/D,cAAA,KAC1BliB,KAAAkkB,WAAAhL,EAAApF,KAGA4R,EAAAK,IAAAjS,EACA4R,EAAAO,UAAAnS,EAAAlM,SAQAwc,EAAA9vB,UAAA0vB,OAAA,SAAA9K,EAAA6L,GACA/kB,KAAA2b,WAAAmB,GAAAiI,EAAA7L,GACAlZ,KAAA2b,WAAAoK,IAAAhB,EAAA7L,GACAlZ,KAAA2b,WAAA0K,MAAAtB,EAAA7L,GACAlZ,KAAAsmB,gBAAAvB,IAQAX,EAAA9vB,UAAA4vB,WAAA,SAAAhL,EAAA6L,GACA/kB,KAAA2b,WAAAY,OAAAwI,EAAA7L,GACAlZ,KAAA2b,WAAAoK,IAAAhB,EAAA7L,GACAlZ,KAAA2b,WAAA0K,MAAAtB,EAAA7L,GACAlZ,KAAAsmB,gBAAAvB,IAOAX,EAAA9vB,UAAAgyB,gBAAA,SAAAvB,UACA/kB,KAAAsc,WAAAyI,EAAAzH,WACAtd,KAAA8kB,sBAAAC,IASAX,EAAA9vB,UAAAmvB,iBAAA,SAAArH,GACA,IAAAyB,EAAA7d,KAAAqkB,YAAAzG,YACAzmB,EAAAilB,EAAAoH,eAAA,GAEA,GAAAxjB,KAAAykB,gBAAAttB,GAAA,CAEA,IAAAovB,EAAA,CAAApvB,EAAA4mB,QAAA5mB,EAAA8mB,SACAJ,EAAA9nB,KAAAwwB,GAEAtB,WAAA,WD5QO,IAAe/iB,EAAAmI,EACtBrS,EADsBqS,EC8QRkc,ED7QdvuB,GADsBkK,EC8QR2b,GD7Qd/nB,QAAAuU,GACArS,GAAA,GAEAkK,EAAA3J,OAAAP,EAAA,IC2QOgI,KAAAwkB,iBAIPJ,EAnUe,CAoUbpI,ICrXFwK,GAAA,CAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,aAkVeC,GA9UQ,SAAA5Q,GACvB,SAAA6Q,EAAAjP,GACA5B,EAAArhB,KAAAwL,MAOAA,KAAA2mB,SAAAlP,EAMAzX,KAAAsc,WAAA,GAMAtc,KAAA4mB,UAAA,GAMA5mB,KAAA6mB,iBAAA,GAEA7mB,KAAA8mB,kBA8SA,OA3SAjR,IAAA6Q,EAAA1W,UAAA6F,GACA6Q,EAAApyB,UAAAD,OAAA+K,OAAAyW,KAAAvhB,WACAoyB,EAAApyB,UAAA2b,YAAAyW,EAMAA,EAAApyB,UAAAwyB,gBAAA,WACA,GAAQrM,EACRza,KAAA+mB,eAAA,aAAwC3G,GAAYpgB,YAC/C,GAAU0a,EACf1a,KAAA+mB,eAAA,SAAoC9H,GAAQjf,WACvC,CACL,IAAAqkB,EAAA,IAA4B5G,GAAWzd,MACvCA,KAAA+mB,eAAA,QAAA1C,GAEU7J,GACVxa,KAAA+mB,eAAA,YAAyC5C,GAAWnkB,KAAAqkB,IAKpDrkB,KAAAgnB,aASAN,EAAApyB,UAAAyyB,eAAA,SAAA3wB,EAAA6Q,GACA,IAAAvH,EAAAuH,EACAggB,EAAAvnB,EAAAoc,YAEAmL,IACAA,EAAAtpB,QAAA,SAAAhH,GACA,IAAAuwB,EAAAxnB,EAAAqc,mBAAAplB,GAEAuwB,IACAlnB,KAAA4mB,UAAAjwB,GAAAuwB,EAAA5nB,KAAAI,KAEOJ,KAAAU,OACPA,KAAA6mB,iBAAA9wB,KAAA2J,KAQAgnB,EAAApyB,UAAA0yB,UAAA,WAEA,IADA,IAAAnuB,EAAAmH,KAAA6mB,iBAAA5uB,OACAD,EAAA,EAAmBA,EAAAa,EAAOb,IAAA,CAC1B,IAAAmvB,EAAAnnB,KAAA6mB,iBAAA7uB,GACAgI,KAAAonB,WAAAD,EAAArL,eAQA4K,EAAApyB,UAAA+yB,YAAA,WAEA,IADA,IAAAxuB,EAAAmH,KAAA6mB,iBAAA5uB,OACAD,EAAA,EAAmBA,EAAAa,EAAOb,IAAA,CAC1B,IAAAmvB,EAAAnnB,KAAA6mB,iBAAA7uB,GACAgI,KAAAsnB,cAAAH,EAAArL,eASA4K,EAAApyB,UAAAizB,cAAA,SAAAnL,GACA,IAAAjgB,EAAAigB,EAAAjgB,KACA+qB,EAAAlnB,KAAA4mB,UAAAzqB,GACA+qB,GACAA,EAAA9K,IASAsK,EAAApyB,UAAA8yB,WAAA,SAAAI,GACAA,EAAA7pB,QAAA,SAAA8pB,GACMvV,EAAMlS,KAAA2mB,SAAAc,EAAAznB,KAAAunB,cAAAvnB,OACPV,KAAAU,QAQL0mB,EAAApyB,UAAAgzB,cAAA,SAAAE,GACAA,EAAA7pB,QAAA,SAAAhH,GACM+b,EAAQ1S,KAAA2mB,SAAAhwB,EAAAqJ,KAAAunB,cAAAvnB,OACTV,KAAAU,QAYL0mB,EAAApyB,UAAA8oB,WAAA,SAAAtJ,EAAAsI,GAEA,IADA,IAAAsL,EAAA,GACA1vB,EAAA,EAAA4Y,EAAA4V,GAAAvuB,OAA4CD,EAAA4Y,EAAQ5Y,IAAA,CACpD,IAAA8B,EAAA0sB,GAAAxuB,GAAA,GACA0vB,EAAA5tB,GAAAga,EAAAha,IAAAsiB,EAAAtiB,IAAA0sB,GAAAxuB,GAAA,GAGA,OAAA0vB,GAWAhB,EAAApyB,UAAAmoB,KAAA,SAAAxjB,EAAA6a,GACA9T,KAAA2nB,UAAmBlM,GAAgBV,YAAA9hB,EAAA6a,IAQnC4S,EAAApyB,UAAAqoB,KAAA,SAAA1jB,EAAA6a,GACA9T,KAAA2nB,UAAmBlM,GAAgBX,YAAA7hB,EAAA6a,IAQnC4S,EAAApyB,UAAAwoB,GAAA,SAAA7jB,EAAA6a,GACA9T,KAAA2nB,UAAmBlM,GAAgBT,UAAA/hB,EAAA6a,IAQnC4S,EAAApyB,UAAA6xB,MAAA,SAAAltB,EAAA6a,GACA7a,EAAAuoB,SAAA,EACAxhB,KAAA2nB,UAAmBlM,GAAgBN,aAAAliB,EAAA6a,IAQnC4S,EAAApyB,UAAA+xB,MAAA,SAAAptB,EAAA6a,GACA7a,EAAAuoB,SAAA,EACAxhB,KAAA2nB,UAAmBlM,GAAgBL,aAAAniB,EAAA6a,IAQnC4S,EAAApyB,UAAA4xB,KAAA,SAAAjtB,EAAA6a,GACA7a,EAAAuoB,SAAA,EACAxhB,KAAA2nB,UAAmBlM,GAAgBR,YAAAhiB,EAAA6a,IAQnC4S,EAAApyB,UAAAyxB,IAAA,SAAA9sB,EAAA6a,GACA7a,EAAAuoB,SAAA,EACAxhB,KAAA2nB,UAAmBlM,GAAgBP,WAAAjiB,EAAA6a,IAQnC4S,EAAApyB,UAAAioB,OAAA,SAAAtjB,EAAA6a,GACA9T,KAAA2nB,UAAmBlM,GAAgBJ,cAAApiB,EAAA6a,IAQnC4S,EAAApyB,UAAA6oB,SAAA,SAAAlkB,EAAA6a,GACA9T,KAAA+lB,IAAA9sB,EAAA6a,GACA9T,KAAA4nB,UAAA3uB,EAAA2O,OAAA3O,EAAAipB,gBACAliB,KAAAqmB,MAAAptB,EAAA6a,IASA4S,EAAApyB,UAAA2oB,UAAA,SAAAhkB,EAAA6a,GACA9T,KAAAkmB,KAAAjtB,EAAA6a,GACA9T,KAAA4nB,UAAA3uB,EAAA2O,OAAA3O,EAAAipB,gBACAliB,KAAAmmB,MAAAltB,EAAA6a,IAWA4S,EAAApyB,UAAAszB,UAAA,SAAAC,EAAAC,GACA,SAAAD,IAAAC,IAGAD,EAAA/lB,SAAAgmB,IAaApB,EAAApyB,UAAAyqB,UAAA,SAAAgJ,EAAA9uB,EAAA6a,GACA,WAAe2O,GAAYsF,EAAAjU,EAAA7a,IAS3BytB,EAAApyB,UAAAqzB,UAAA,SAAAI,EAAA9uB,EAAA6a,GACA,IAAAnd,EAAAqJ,KAAA+e,UAAAgJ,EAAA9uB,EAAA6a,GACA9T,KAAA6T,cAAAld,IAQA+vB,EAAApyB,UAAAsrB,gBAAA,SAAA9L,GACA,IAAAnd,EAAAqJ,KAAA+e,UAAAjL,EAAA3X,KAAA2X,KACA9T,KAAA6T,cAAAld,IAUA+vB,EAAApyB,UAAA0zB,eAAA,SAAA7Q,EAAArD,GAGA,OAFA9T,KAAA+e,UACA5H,EAAiBqF,GAAiB1I,EAAA9T,MAAA8T,IAOlC4S,EAAApyB,UAAAue,gBAAA,WACA7S,KAAAqnB,cACAxR,EAAAvhB,UAAAue,gBAAAre,KAAAwL,OAGA0mB,EA3UuB,CA4UrBnT,GC5Fa0U,GA1TW,SAAApS,GAC1B,SAAAqS,EAAAnsB,EAAAosB,GAEAtS,EAAArhB,KAAAwL,MAOAA,KAAAooB,KAAArsB,EAMAiE,KAAAqoB,gBAMAroB,KAAAsoB,WAAA,EAMAtoB,KAAAuoB,kBAAA,GAMAvoB,KAAAwoB,eAAAL,EACAA,EAAsBjO,EAAqBA,EAQ3Cla,KAAAyoB,MAAA,KAEA,IAAAhR,EAAAzX,KAAAooB,KAAAM,cAMA1oB,KAAA2oB,gBAAA,EAMA3oB,KAAA4oB,gBAAA,GASA5oB,KAAA6oB,qBAAA,IAAoCpC,GAAmBhP,GASvDzX,KAAA8oB,6BAAA,KAMA9oB,KAAA+oB,wBAAmC7W,EAAMlS,KAAA6oB,qBACnCpN,GAAgBV,YACtB/a,KAAAgpB,mBAAAhpB,MAMAA,KAAAipB,oBAA+B/W,EAAMlS,KAAA6oB,qBAC/BpN,GAAgBX,YACtB9a,KAAAkpB,YAAAlpB,MA2NA,OAvNA6V,IAAAqS,EAAAlY,UAAA6F,GACAqS,EAAA5zB,UAAAD,OAAA+K,OAAAyW,KAAAvhB,WACA4zB,EAAA5zB,UAAA2b,YAAAiY,EAOAA,EAAA5zB,UAAA60B,cAAA,SAAA3N,GACA,IAAA4N,EAAA,IAAuB9N,GACjBX,EAAmBnG,MAAAxU,KAAAooB,KAAA5M,GACzBxb,KAAA6T,cAAAuV,QACArxB,IAAAiI,KAAAqoB,iBAEAlD,aAAAnlB,KAAAqoB,iBACAroB,KAAAqoB,qBAAAtwB,EACAqxB,EAAA,IAAqB9N,GACbX,EAAmBlG,SAAAzU,KAAAooB,KAAA5M,GAC3Bxb,KAAA6T,cAAAuV,IAGAppB,KAAAqoB,gBAAApD,WAAA,WACAjlB,KAAAqoB,qBAAAtwB,EACA,IAAAqxB,EAAA,IAA2B9N,GACjBX,EAAmBC,YAAA5a,KAAAooB,KAAA5M,GAC7Bxb,KAAA6T,cAAAuV,IACO9pB,KAAAU,MAAA,MAWPkoB,EAAA5zB,UAAA+0B,sBAAA,SAAA7N,GACA,IAAA1H,EAAA0H,EAEA1H,EAAA3X,MAAsBwe,EAAmBK,WACzClH,EAAA3X,MAAsBwe,EAAmBU,qBACzCrb,KAAA4oB,gBAAA9U,EAAAwJ,WACKxJ,EAAA3X,MAAwBwe,EAAmBI,cAChD/a,KAAA4oB,gBAAA9U,EAAAwJ,YAAA,GAEAtd,KAAA2oB,gBAAAt0B,OAAAqJ,KAAAsC,KAAA4oB,iBAAA3wB,QAQAiwB,EAAA5zB,UAAAg1B,iBAAA,SAAA9N,GACAxb,KAAAqpB,sBAAA7N,GACA,IAAA4N,EAAA,IAAuB9N,GACjBX,EAAmBK,UAAAhb,KAAAooB,KAAA5M,GACzBxb,KAAA6T,cAAAuV,GAQAA,EAAAjW,oBAAAnT,KAAAsoB,YAAAtoB,KAAAupB,qBAAA/N,IACAxb,KAAAmpB,cAAAnpB,KAAAyoB,OAGA,IAAAzoB,KAAA2oB,kBACA3oB,KAAAuoB,kBAAA5qB,QAAqC4U,GACrCvS,KAAAuoB,kBAAAtwB,OAAA,EACA+H,KAAAsoB,WAAA,EACAtoB,KAAAyoB,MAAA,KACAzoB,KAAA8oB,6BAAA3wB,UACA6H,KAAA8oB,6BAAA,OAUAZ,EAAA5zB,UAAAi1B,qBAAA,SAAA/N,GACA,WAAAA,EAAAqB,QAQAqL,EAAA5zB,UAAA00B,mBAAA,SAAAxN,GACAxb,KAAAqpB,sBAAA7N,GACA,IAAA4N,EAAA,IAAuB9N,GACjBX,EAAmBI,YAAA/a,KAAAooB,KAAA5M,GACzBxb,KAAA6T,cAAAuV,GAEAppB,KAAAyoB,MAAAjN,EAEA,IAAAxb,KAAAuoB,kBAAAtwB,SAKA+H,KAAA8oB,6BACA,IAAcrC,GAAmB7rB,UAEjCoF,KAAAuoB,kBAAAxyB,KACQmc,EAAMlS,KAAA8oB,6BACJnO,EAAmBG,YAC7B9a,KAAAwpB,mBAAAxpB,MACQkS,EAAMlS,KAAA8oB,6BACJnO,EAAmBK,UAC7Bhb,KAAAspB,iBAAAtpB,MAcQkS,EAAMlS,KAAA6oB,qBACJlO,EAAmBU,cAC7Brb,KAAAspB,iBAAAtpB,SAUAkoB,EAAA5zB,UAAAk1B,mBAAA,SAAAhO,GAIA,GAAAxb,KAAAypB,UAAAjO,GAAA,CACAxb,KAAAsoB,WAAA,EACA,IAAAc,EAAA,IAAyB9N,GACjBX,EAAmBE,YAAA7a,KAAAooB,KAAA5M,EAC3Bxb,KAAAsoB,WACAtoB,KAAA6T,cAAAuV,GAOA5N,EAAAnI,kBAUA6U,EAAA5zB,UAAA40B,YAAA,SAAA1N,GACA,IAAA/B,KAAAzZ,KAAAyoB,QAAAzoB,KAAAypB,UAAAjO,IACAxb,KAAA6T,cAAA,IAA2ByH,GAC3BE,EAAArf,KAAA6D,KAAAooB,KAAA5M,EAAA/B,KASAyO,EAAA5zB,UAAAm1B,UAAA,SAAAjO,GACA,OAAAxb,KAAAsoB,WACApoB,KAAAie,IAAA3C,EAAAuC,QAAA/d,KAAAyoB,MAAA1K,SAAA/d,KAAAwoB,gBACAtoB,KAAAie,IAAA3C,EAAAyC,QAAAje,KAAAyoB,MAAAxK,SAAAje,KAAAwoB,gBAMAN,EAAA5zB,UAAAue,gBAAA,WACA7S,KAAAipB,sBACM1W,EAAavS,KAAAipB,qBACnBjpB,KAAAipB,oBAAA,MAEAjpB,KAAA+oB,0BACMxW,EAAavS,KAAA+oB,yBACnB/oB,KAAA+oB,wBAAA,MAGA/oB,KAAAuoB,kBAAA5qB,QAAmC4U,GACnCvS,KAAAuoB,kBAAAtwB,OAAA,EAEA+H,KAAA8oB,+BACA9oB,KAAA8oB,6BAAA3wB,UACA6H,KAAA8oB,6BAAA,MAEA9oB,KAAA6oB,uBACA7oB,KAAA6oB,qBAAA1wB,UACA6H,KAAA6oB,qBAAA,MAEAhT,EAAAvhB,UAAAue,gBAAAre,KAAAwL,OAGAkoB,EAtT0B,CAuTxB3U,GC3TamW,GAOf,aAPeA,GAcf,YAdeA,GAqBf,UCrBeC,GAAA,CACfC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,QCJeC,GAKf,cALeA,GAUf,aAVeA,GAef,SAfeA,GAsBf,iBCtBeC,GAAA,CACfC,KAAA,EACAC,QAAA,EACAC,OAAA,EAKAvV,MAAA,EACAwV,MAAA,EACAC,MAAA,GCRO,SAAAC,GAAAC,EAAAC,GACP,IAAAD,EACA,UAAc7a,EAAc8a,GCDrB,IAeHC,GAAa,SAAAC,EAAAC,GAMjB5qB,KAAA6qB,kBAAAF,EAMA3qB,KAAA8qB,aAAAF,EAMA5qB,KAAA+qB,UAAA,GAMA/qB,KAAAgrB,YAAA,GAMAhrB,KAAAirB,gBAAA,IAOAP,GAAap2B,UAAAiM,MAAA,WACbP,KAAA+qB,UAAA9yB,OAAA,EACA+H,KAAAgrB,YAAA/yB,OAAA,EACE4Y,EAAK7Q,KAAAirB,kBAQPP,GAAap2B,UAAA42B,QAAA,WACb,IAAAC,EAAAnrB,KAAA+qB,UACAK,EAAAprB,KAAAgrB,YACAvT,EAAA0T,EAAA,GACA,GAAAA,EAAAlzB,QACAkzB,EAAAlzB,OAAA,EACAmzB,EAAAnzB,OAAA,IAEAkzB,EAAA,GAAAA,EAAAjvB,MACAkvB,EAAA,GAAAA,EAAAlvB,MACA8D,KAAAqrB,QAAA,IAEA,IAAAC,EAAAtrB,KAAA8qB,aAAArT,GAEA,cADAzX,KAAAirB,gBAAAK,GACA7T,GASAiT,GAAap2B,UAAAi3B,QAAA,SAAA9T,GACX8S,KAAMvqB,KAAA8qB,aAAArT,KAAAzX,KAAAirB,iBACR,IACA,IAAAO,EAAAxrB,KAAA6qB,kBAAApT,GACA,OAAA+T,GA1FOrqB,MA2FPnB,KAAA+qB,UAAAh1B,KAAA0hB,GACAzX,KAAAgrB,YAAAj1B,KAAAy1B,GACAxrB,KAAAirB,gBAAAjrB,KAAA8qB,aAAArT,KAAA,EACAzX,KAAAyrB,UAAA,EAAAzrB,KAAA+qB,UAAA9yB,OAAA,IACA,IASAyyB,GAAap2B,UAAAo3B,SAAA,WACb,OAAA1rB,KAAA+qB,UAAA9yB,QAUAyyB,GAAap2B,UAAAq3B,mBAAA,SAAApoB,GACb,SAAAA,EAAA,GAUAmnB,GAAap2B,UAAAs3B,oBAAA,SAAAroB,GACb,SAAAA,EAAA,GAUAmnB,GAAap2B,UAAAu3B,gBAAA,SAAAtoB,GACb,OAAAA,EAAA,MAQAmnB,GAAap2B,UAAAw3B,SAAA,WACb,IAAA9zB,EACA,IAAAA,GAAAgI,KAAA+qB,UAAA9yB,QAAA,KAA4CD,GAAA,EAAQA,IACpDgI,KAAAqrB,QAAArzB,IAQA0yB,GAAap2B,UAAAy3B,QAAA,WACb,WAAA/rB,KAAA+qB,UAAA9yB,QAQAyyB,GAAap2B,UAAA03B,YAAA,SAAA3sB,GACb,OAAAA,KAAAW,KAAAirB,iBAQAP,GAAap2B,UAAA23B,SAAA,SAAAxU,GACb,OAAAzX,KAAAgsB,YAAAhsB,KAAA8qB,aAAArT,KAQAiT,GAAap2B,UAAA+2B,QAAA,SAAA9nB,GAQb,IAPA,IAAA4nB,EAAAnrB,KAAA+qB,UACAK,EAAAprB,KAAAgrB,YACApG,EAAAuG,EAAAlzB,OACAwf,EAAA0T,EAAA5nB,GACAioB,EAAAJ,EAAA7nB,GACA2oB,EAAA3oB,EAEAA,EAAAqhB,GAAA,IACA,IAAAuH,EAAAnsB,KAAA2rB,mBAAApoB,GACA6oB,EAAApsB,KAAA4rB,oBAAAroB,GAEA8oB,EAAAD,EAAAxH,GACAwG,EAAAgB,GAAAhB,EAAAe,GACAC,EAAAD,EAEAhB,EAAA5nB,GAAA4nB,EAAAkB,GACAjB,EAAA7nB,GAAA6nB,EAAAiB,GACA9oB,EAAA8oB,EAGAlB,EAAA5nB,GAAAkU,EACA2T,EAAA7nB,GAAAioB,EACAxrB,KAAAyrB,UAAAS,EAAA3oB,IASAmnB,GAAap2B,UAAAm3B,UAAA,SAAAS,EAAA3oB,GAMb,IALA,IAAA4nB,EAAAnrB,KAAA+qB,UACAK,EAAAprB,KAAAgrB,YACAvT,EAAA0T,EAAA5nB,GACAioB,EAAAJ,EAAA7nB,GAEAA,EAAA2oB,GAAA,CACA,IAAAI,EAAAtsB,KAAA6rB,gBAAAtoB,GACA,KAAA6nB,EAAAkB,GAAAd,GAKA,MAJAL,EAAA5nB,GAAA4nB,EAAAmB,GACAlB,EAAA7nB,GAAA6nB,EAAAkB,GACA/oB,EAAA+oB,EAKAnB,EAAA5nB,GAAAkU,EACA2T,EAAA7nB,GAAAioB,GAOAd,GAAap2B,UAAAi4B,aAAA,WACb,IAKA9U,EAAAzf,EAAAwzB,EALAb,EAAA3qB,KAAA6qB,kBACAM,EAAAnrB,KAAA+qB,UACAK,EAAAprB,KAAAgrB,YACAznB,EAAA,EACAhE,EAAA4rB,EAAAlzB,OAEA,IAAAD,EAAA,EAAaA,EAAAuH,IAAOvH,GAEpBwzB,EAAAb,EADAlT,EAAA0T,EAAAnzB,MAxPOmJ,WA2PPnB,KAAAirB,gBAAAjrB,KAAA8qB,aAAArT,KAEA2T,EAAA7nB,GAAAioB,EACAL,EAAA5nB,KAAAkU,GAGA0T,EAAAlzB,OAAAsL,EACA6nB,EAAAnzB,OAAAsL,EACAvD,KAAA8rB,YAIe,ICjJAU,GAlHF,SAAAC,GACb,SAAAC,EAAAC,EAAAC,GAEAH,EAAAj4B,KAKAwL,KAAA,SAAAyX,GACA,OAAAkV,EAAAj0B,MAAA,KAAA+e,IAMA,SAAAA,GACA,OAAuDA,EAAA,GAAAoV,WAOvD7sB,KAAA8sB,oBAAAF,EAMA5sB,KAAA+sB,cAAA,EAMA/sB,KAAAgtB,kBAAA,GA2EA,OAvEAP,IAAAC,EAAA1c,UAAAyc,GACAC,EAAAp4B,UAAAD,OAAA+K,OAAAqtB,KAAAn4B,WACAo4B,EAAAp4B,UAAA2b,YAAAyc,EAKAA,EAAAp4B,UAAAi3B,QAAA,SAAA9T,GACA,IAAAwV,EAAAR,EAAAn4B,UAAAi3B,QAAA/2B,KAAAwL,KAAAyX,GACAwV,GAEM/a,EADNuF,EAAA,GACmBrD,EAASC,OAAArU,KAAAktB,iBAAAltB,MAE5B,OAAAitB,GAMAP,EAAAp4B,UAAA64B,gBAAA,WACA,OAAAntB,KAAA+sB,eAOAL,EAAAp4B,UAAA44B,iBAAA,SAAApZ,GACA,IAAAsZ,EAAsDtZ,EAAA,OACtDuZ,EAAAD,EAAAE,WACA,GAAAD,IAAkBpD,GAASG,QAAAiD,IAAqBpD,GAASpV,OACzDwY,IAAkBpD,GAASI,OAAAgD,IAAoBpD,GAASK,MAAA,CAClD5X,EAAQ0a,EAAOhZ,EAASC,OAAArU,KAAAktB,iBAAAltB,MAC9B,IAAAutB,EAAAH,EAAAP,SACAU,KAAAvtB,KAAAgtB,2BACAhtB,KAAAgtB,kBAAAO,KACAvtB,KAAA+sB,eAEA/sB,KAAA8sB,wBAQAJ,EAAAp4B,UAAAk5B,cAAA,SAAAC,EAAAC,GAIA,IAHA,IAEAL,EAAAD,EAAAG,EAFAI,EAAA,EACAC,GAAA,EAEA5tB,KAAA+sB,cAAAU,GAAAE,EAAAD,GACA1tB,KAAA0rB,WAAA,GAEA6B,GADAH,EAAoDptB,KAAAkrB,UAAA,IACpD2B,UACAQ,EAAAD,EAAAE,cACoBrD,GAASK,MAC7BsD,GAAA,EACOP,IAAoBpD,GAASC,MAAAqD,KAAAvtB,KAAAgtB,oBACpChtB,KAAAgtB,kBAAAO,IAAA,IACAvtB,KAAA+sB,gBACAY,EACAP,EAAApqB,QAGA,IAAA2qB,GAAAC,GAGA5tB,KAAA8sB,uBAIAJ,EA9Ga,CDmQE,IEzQRmB,GAAA,GAMAC,GAAA,ICDA,SAAAC,GAAAt3B,EAAAgL,EAAAtB,GACP,OAAAD,KAAAuB,IAAAvB,KAAAC,IAAA1J,EAAAgL,GAAAtB,GAaO,IAAA6tB,GAIP,SAAA9tB,KAEAA,KAAA8tB,KAGA,SAAAlQ,GACA,IAAAE,EAA8B,KAAArQ,IAAAmQ,GAC9B,OAAAE,EAAA,EAAAA,GAAA,GA4BO,SAAAiQ,GAAAnQ,EAAAE,EAAAkQ,EAAAC,EAAAC,EAAAC,GACP,IAAAnQ,EAAAkQ,EAAAF,EACA9P,EAAAiQ,EAAAF,EACA,OAAAjQ,GAAA,IAAAE,EAAA,CACA,IAAAjnB,IAAA2mB,EAAAoQ,GAAAhQ,GAAAF,EAAAmQ,GAAA/P,IAAAF,IAAAE,KACAjnB,EAAA,GACA+2B,EAAAE,EACAD,EAAAE,GACKl3B,EAAA,IACL+2B,GAAAhQ,EAAA/mB,EACAg3B,GAAA/P,EAAAjnB,GAGA,OAASm3B,GAAexQ,EAAAE,EAAAkQ,EAAAC,GAYjB,SAASG,GAAeJ,EAAAC,EAAAC,EAAAC,GAC/B,IAAAnQ,EAAAkQ,EAAAF,EACA9P,EAAAiQ,EAAAF,EACA,OAAAjQ,IAAAE,IA6EO,SAAAmQ,GAAAC,GACP,OAAAA,EAAAtuB,KAAAuuB,GAAA,IAUO,SAAAC,GAAAlyB,EAAAC,GACP,IAAAsC,EAAAvC,EAAAC,EACA,OAAAsC,EAAAtC,EAAA,EAAAsC,EAAAtC,EAAAsC,EAWO,SAAA4vB,GAAAnyB,EAAAC,EAAAqhB,GACP,OAAAthB,EAAAshB,GAAArhB,EAAAD,GC7JO,SAAAoyB,GAAAvgB,GACP,OAAAA,ECxBO,SAAAwgB,GAAAC,EAAAC,GACP,YAAAh3B,IAAA+2B,EACA,OAEA,EAUO,SAASE,GAAIF,EAAAC,GACpB,YAAAh3B,IAAA+2B,EACAA,EAAAC,OAEA,EC3Be,IAAAE,GACf,EADeA,GAEf,ECFeC,GACf,SADeA,GAEf,aAFeA,GAGf,WC+BO,SAAAC,GAAA5V,EAAAwV,GAGP,OAFAxV,EAAA,IAAAwV,EAAA,GACAxV,EAAA,IAAAwV,EAAA,GACAxV,EAiOO,SAAS6V,GAAM7V,EAAA8V,GACtB,IAAAC,EAAApvB,KAAAqvB,IAAAF,GACAG,EAAAtvB,KAAAuvB,IAAAJ,GACAvR,EAAAvE,EAAA,GAAA+V,EAAA/V,EAAA,GAAAiW,EACAxR,EAAAzE,EAAA,GAAA+V,EAAA/V,EAAA,GAAAiW,EAGA,OAFAjW,EAAA,GAAAuE,EACAvE,EAAA,GAAAyE,EACAzE,EAqBO,SAASmW,GAAKnW,EAAAoW,GAGrB,OAFApW,EAAA,IAAAoW,EACApW,EAAA,IAAAoW,EACApW,EASO,SAASqW,GAAeC,EAAAC,GAC/B,IAAA5R,EAAA2R,EAAA,GAAAC,EAAA,GACA1R,EAAAyR,EAAA,GAAAC,EAAA,GACA,OAAA5R,IAAAE,IC7SO,SAAA2R,GAAA54B,GACP,OAAA+I,KAAAiE,IAAAhN,EAAA,GAUO,SAAA64B,GAAA74B,GACP,SAAA44B,GAAA,EAAA54B,GAUO,SAAA84B,GAAA94B,GACP,SAAAA,IAAA,EAAAA,MAUO,SAAA+4B,GAAA/4B,GACP,OAAAA,ECrCe,IAAAg5B,GAAA,CACfC,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,aCJeC,GAAA,CACfC,QAAA,EACAC,aAAA,EACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,KAAA,ICOO,SAAAC,GAAAC,GAEP,IADA,IAAAC,EAAAC,KACAl5B,EAAA,EAAA4Y,EAAAogB,EAAA/4B,OAA0CD,EAAA4Y,IAAQ5Y,EAClDm5B,GAAAF,EAAAD,EAAAh5B,IAEA,OAAAi5B,EA4BO,SAAAG,GAAAH,EAAAx6B,EAAA46B,GACP,OAAAA,GACAA,EAAA,GAAAJ,EAAA,GAAAx6B,EACA46B,EAAA,GAAAJ,EAAA,GAAAx6B,EACA46B,EAAA,GAAAJ,EAAA,GAAAx6B,EACA46B,EAAA,GAAAJ,EAAA,GAAAx6B,EACA46B,GAEA,CACAJ,EAAA,GAAAx6B,EACAw6B,EAAA,GAAAx6B,EACAw6B,EAAA,GAAAx6B,EACAw6B,EAAA,GAAAx6B,GAaO,SAAS66B,GAAKL,EAAAI,GACrB,OAAAA,GACAA,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,GAEAJ,EAAAn1B,QAWO,SAAAy1B,GAAAN,EAAAnT,EAAAE,GACP,IAAAE,EAAAE,EAeA,OAbAF,EADAJ,EAAAmT,EAAA,GACAA,EAAA,GAAAnT,EACGmT,EAAA,GAAAnT,EACHA,EAAAmT,EAAA,GAEA,GASA/S,GANAE,EADAJ,EAAAiT,EAAA,GACAA,EAAA,GAAAjT,EACGiT,EAAA,GAAAjT,EACHA,EAAAiT,EAAA,GAEA,GAEA7S,EAYO,SAAAoT,GAAAP,EAAA1X,GACP,OAASkY,GAAUR,EAAA1X,EAAA,GAAAA,EAAA,IAgBZ,SAAAmY,GAAAC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,GAaO,SAASF,GAAUR,EAAAnT,EAAAE,GAC1B,OAAAiT,EAAA,IAAAnT,MAAAmT,EAAA,IAAAA,EAAA,IAAAjT,MAAAiT,EAAA,GAWO,SAAAY,GAAAZ,EAAA1X,GACP,IAAArY,EAAA+vB,EAAA,GACA7vB,EAAA6vB,EAAA,GACA5vB,EAAA4vB,EAAA,GACA3vB,EAAA2vB,EAAA,GACAnT,EAAAvE,EAAA,GACAyE,EAAAzE,EAAA,GACAuY,EAAqBtB,GAAYC,QAcjC,OAbA3S,EAAA5c,EACA4wB,GAAkCtB,GAAYM,KAC3ChT,EAAAzc,IACHywB,GAAkCtB,GAAYI,OAE9C5S,EAAA5c,EACA0wB,GAAkCtB,GAAYK,MAC3C7S,EAAA1c,IACHwwB,GAAkCtB,GAAYG,OAE9CmB,IAAuBtB,GAAYC,UACnCqB,EAAmBtB,GAAYE,cAE/BoB,EASO,SAAAZ,KACP,OAAA/vB,mBAaO,SAAA4wB,GAAA7wB,EAAAE,EAAAC,EAAAC,EAAA+vB,GACP,OAAAA,GACAA,EAAA,GAAAnwB,EACAmwB,EAAA,GAAAjwB,EACAiwB,EAAA,GAAAhwB,EACAgwB,EAAA,GAAA/vB,EACA+vB,GAEA,CAAAnwB,EAAAE,EAAAC,EAAAC,GAUO,SAAA0wB,GAAAX,GACP,OAAAU,GACA5wB,kBAAAkwB,GAmCO,SAAAY,GAAAC,EAAAC,EAAApP,EAAAqP,EAAAf,GAEP,OAAAgB,GADAL,GAAAX,GACAa,EAAAC,EAAApP,EAAAqP,GAqBO,SAASE,GAAMX,EAAAC,GACtB,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAWO,SAASW,GAAMZ,EAAAC,GAatB,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,EAQO,SAAAR,GAAAF,EAAA1X,GACPA,EAAA,GAAA0X,EAAA,KACAA,EAAA,GAAA1X,EAAA,IAEAA,EAAA,GAAA0X,EAAA,KACAA,EAAA,GAAA1X,EAAA,IAEAA,EAAA,GAAA0X,EAAA,KACAA,EAAA,GAAA1X,EAAA,IAEAA,EAAA,GAAA0X,EAAA,KACAA,EAAA,GAAA1X,EAAA,IAUO,SAAAiZ,GAAAvB,EAAAD,GACP,QAAAh5B,EAAA,EAAA4Y,EAAAogB,EAAA/4B,OAA0CD,EAAA4Y,IAAQ5Y,EAClDm5B,GAAAF,EAAAD,EAAAh5B,IAEA,OAAAi5B,EAYO,SAAAoB,GAAApB,EAAAiB,EAAAC,EAAApP,EAAAqP,GACP,KAAQD,EAAApP,EAAcoP,GAAAC,EACtBK,GAAAxB,EAAAiB,EAAAC,GAAAD,EAAAC,EAAA,IAEA,OAAAlB,EAsBO,SAAAwB,GAAAxB,EAAAnT,EAAAE,GACPiT,EAAA,GAAA/wB,KAAAuB,IAAAwvB,EAAA,GAAAnT,GACAmT,EAAA,GAAA/wB,KAAAuB,IAAAwvB,EAAA,GAAAjT,GACAiT,EAAA,GAAA/wB,KAAAC,IAAA8wB,EAAA,GAAAnT,GACAmT,EAAA,GAAA/wB,KAAAC,IAAA8wB,EAAA,GAAAjT,GAcO,SAAA0U,GAAAzB,EAAAn5B,EAAAsZ,GACP,IAAAuhB,EAEA,OADAA,EAAA76B,EAAAtD,KAAA4c,EAAAwhB,GAAA3B,KAEA0B,GAEAA,EAAA76B,EAAAtD,KAAA4c,EAAAyhB,GAAA5B,KAEA0B,GAEAA,EAAA76B,EAAAtD,KAAA4c,EAAA0hB,GAAA7B,KAEA0B,GAEAA,EAAA76B,EAAAtD,KAAA4c,EAAA2hB,GAAA9B,OAIA,EAUO,SAAS+B,GAAO/B,GACvB,IAAArsB,EAAA,EAIA,OAHOquB,GAAOhC,KACdrsB,EAAAsuB,GAAAjC,GAAAkC,GAAAlC,IAEArsB,EAUO,SAAAguB,GAAA3B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAA4B,GAAA5B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAASmC,GAASnC,GACzB,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAUO,SAAAoC,GAAApC,EAAAqC,GACP,IAAA/Z,EAYA,OAXA+Z,IAAiBnD,GAAMC,YACvB7W,EAAAqZ,GAAA3B,GACGqC,IAAqBnD,GAAME,aAC9B9W,EAAAsZ,GAAA5B,GACGqC,IAAqBnD,GAAMG,SAC9B/W,EAAAwZ,GAAA9B,GACGqC,IAAqBnD,GAAMI,UAC9BhX,EAAAuZ,GAAA7B,GAEI1G,IAAM,MAEVhR,EA0BO,SAAAga,GAAAllB,EAAAmlB,EAAA1E,EAAA2E,EAAApC,GACP,IAAAnT,EAAAsV,EAAAC,EAAA,KACArV,EAAAoV,EAAAC,EAAA,KACAC,EAAAxzB,KAAAqvB,IAAAT,GACA6E,EAAAzzB,KAAAuvB,IAAAX,GACA8E,EAAA1V,EAAAwV,EACAG,EAAA3V,EAAAyV,EACAG,EAAA1V,EAAAsV,EACAK,EAAA3V,EAAAuV,EACA7V,EAAAzP,EAAA,GACA2P,EAAA3P,EAAA,GACA2lB,EAAAlW,EAAA8V,EAAAG,EACA7F,EAAApQ,EAAA8V,EAAAG,EACA3F,EAAAtQ,EAAA8V,EAAAG,EACAE,EAAAnW,EAAA8V,EAAAG,EACAG,EAAAlW,EAAA6V,EAAAC,EACA3F,EAAAnQ,EAAA6V,EAAAC,EACAzF,EAAArQ,EAAA6V,EAAAC,EACAK,EAAAnW,EAAA6V,EAAAC,EACA,OAAA/B,GACA7xB,KAAAuB,IAAAuyB,EAAA9F,EAAAE,EAAA6F,GAAA/zB,KAAAuB,IAAAyyB,EAAA/F,EAAAE,EAAA8F,GACAj0B,KAAAC,IAAA6zB,EAAA9F,EAAAE,EAAA6F,GAAA/zB,KAAAC,IAAA+zB,EAAA/F,EAAAE,EAAA8F,GACA9C,GAUO,SAAA8B,GAAAlC,GACP,OAAAA,EAAA,GAAAA,EAAA,GAuBO,SAAAmD,GAAAzC,EAAAC,EAAAP,GACP,IAAAgD,EAAAhD,GA1XA,CAAAlwB,SAAA,UAmZA,OAxBMmzB,GAAU3C,EAAAC,IAChBD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAyC,EAAA,GAAA1C,EAAA,GAEA0C,EAAA,GAAAzC,EAAA,IAGAI,GAAAqC,GAEAA,EA8BO,SAAAtB,GAAA9B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAA6B,GAAA7B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAiC,GAAAjC,GACP,OAAAA,EAAA,GAAAA,EAAA,GAWO,SAASqD,GAAU3C,EAAAC,GAC1B,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GAUO,SAASqB,GAAOhC,GACvB,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GA0BO,SAAAsD,GAAAtD,EAAAx6B,GACP,IAAA+9B,GAAAvD,EAAA,GAAAA,EAAA,OAAAx6B,EAAA,GACAg+B,GAAAxD,EAAA,GAAAA,EAAA,OAAAx6B,EAAA,GACAw6B,EAAA,IAAAuD,EACAvD,EAAA,IAAAuD,EACAvD,EAAA,IAAAwD,EACAxD,EAAA,IAAAwD,ECjsBe,IAAAC,GAAA,CACfC,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,UCTeC,GAAA,CACfC,GAAA,KACAC,IAAA,MACAC,IAAA,MACAC,KAAA,QCAO,SAAAC,GAAAvD,EAAAC,EAAApP,EAAAqP,EAAA9nB,EAAAorB,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACA19B,EAAA,EACAwD,EAAA22B,EAAsB32B,EAAAunB,EAASvnB,GAAA42B,EAAA,CAC/B,IAAAtU,EAAAoU,EAAA12B,GACAwiB,EAAAkU,EAAA12B,EAAA,GACAm6B,EAAA39B,KAAAsS,EAAA,GAAAwT,EAAAxT,EAAA,GAAA0T,EAAA1T,EAAA,GACAqrB,EAAA39B,KAAAsS,EAAA,GAAAwT,EAAAxT,EAAA,GAAA0T,EAAA1T,EAAA,GAKA,OAHAorB,GAAAC,EAAA19B,QAAAD,IACA29B,EAAA19B,OAAAD,GAEA29B;;;;;;;ACKO,IAAAC,GAAA,UAYA,SAAAC,GAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAD,GAAAJ,GACAM,EAAa3H,GAASuH,EAAA,IACtBK,EAAa5H,GAASwH,EAAA,IACtBK,GAAAD,EAAAD,GAAA,EACAG,EAAoB9H,GAASwH,EAAA,GAAAD,EAAA,MAC7Bt5B,EAAA0D,KAAAuvB,IAAA2G,GAAAl2B,KAAAuvB,IAAA2G,GACAl2B,KAAAuvB,IAAA4G,GAAAn2B,KAAAuvB,IAAA4G,GACAn2B,KAAAqvB,IAAA2G,GAAAh2B,KAAAqvB,IAAA4G,GACA,SAAAF,EAAA/1B,KAAAo2B,MAAAp2B,KAAAsE,KAAAhI,GAAA0D,KAAAsE,KAAA,EAAAhI,IC3CA,IAAA+5B,GAAA,CACAC,QAAA,UACAC,KAAA,KACAC,OAAA,IACAC,OAAA,SACAC,YAAA,cACAC,OAAA,SAUOC,GAAA,GAEPA,GAAAP,GAAAC,SAAA,EAAAt2B,KAAAuuB,GAAA,YACAqI,GAAAP,GAAAE,MAAA,MACAK,GAAAP,GAAAG,QAAA,EACAI,GAAAP,GAAAM,QAAA,UAEe,IAAAE,GAAA,GCqBXC,GAAU,SAAA17B,GAKd0E,KAAAi3B,MAAA37B,EAAAuU,KASA7P,KAAAk3B,OAAwD57B,EAAA,MASxD0E,KAAAm3B,aAAAp/B,IAAAuD,EAAA21B,OAAA31B,EAAA21B,OAAA,KASAjxB,KAAAo3B,kBAAAr/B,IAAAuD,EAAA+7B,YACA/7B,EAAA+7B,YAAA,KAMAr3B,KAAAs3B,sBAAAv/B,IAAAuD,EAAAi8B,gBACAj8B,EAAAi8B,gBAAA,MAMAv3B,KAAAw3B,aAAAz/B,IAAAuD,EAAAm8B,QAAAn8B,EAAAm8B,OAMAz3B,KAAA03B,aAAA13B,KAAAw3B,UAAAx3B,KAAAm3B,SAMAn3B,KAAA23B,wBAAAr8B,EAAAs8B,mBAMA53B,KAAA63B,iBAAA,KAMA73B,KAAA83B,eAAAx8B,EAAAy8B,eAMAf,GAAU1iC,UAAA0jC,SAAA,WACV,OAAAh4B,KAAA03B,WAQAV,GAAU1iC,UAAA2jC,QAAA,WACV,OAAAj4B,KAAAi3B,OAQAD,GAAU1iC,UAAA4jC,UAAA,WACV,OAAAl4B,KAAAm3B,SAQAH,GAAU1iC,UAAA6jC,SAAA,WACV,OAAAn4B,KAAAk3B,QAUAF,GAAU1iC,UAAA8jC,iBAAA,WACV,OAAAp4B,KAAA83B,gBAAgChB,GAAe92B,KAAAk3B,SAQ/CF,GAAU1iC,UAAA+jC,eAAA,WACV,OAAAr4B,KAAAo3B,cAcAJ,GAAU1iC,UAAAgkC,mBAAA,WACV,OAAAt4B,KAAAs3B,kBAQAN,GAAU1iC,UAAAikC,SAAA,WACV,OAAAv4B,KAAAw3B,SAQAR,GAAU1iC,UAAAkkC,UAAA,SAAAf,GACVz3B,KAAAw3B,QAAAC,EACAz3B,KAAA03B,aAAAD,IAAAz3B,KAAAm3B,UAMAH,GAAU1iC,UAAAmkC,mBAAA,WACV,OAAAz4B,KAAA63B,kBAMAb,GAAU1iC,UAAAokC,mBAAA,SAAAC,GACV34B,KAAA63B,iBAAAc,GAQA3B,GAAU1iC,UAAAskC,UAAA,SAAA3H,GACVjxB,KAAAm3B,QAAAlG,EACAjxB,KAAA03B,aAAA13B,KAAAw3B,UAAAvG,IASA+F,GAAU1iC,UAAAukC,eAAA,SAAAxB,GACVr3B,KAAAo3B,aAAAC,GASAL,GAAU1iC,UAAAwkC,sBAAA,SAAAC,GACV/4B,KAAA23B,wBAAAoB,GAQA/B,GAAU1iC,UAAA0kC,uBAAA,WACV,OAAAh5B,KAAA23B,yBAGe,IAAAsB,GAAA,GC7PRC,GAAA,QAOAC,GAAAj5B,KAAAuuB,GAAAyK,GAOAE,GAAA,EACPD,OACAA,OAQOE,GAAA,kBAOHC,GAAkB,SAAAC,GACtB,SAAAC,EAAA3pB,GACA0pB,EAAA/kC,KAAAwL,KAAA,CACA6P,OACA4pB,MAAa1C,GAAKL,OAClBzF,OAAAmI,GACA3B,QAAA,EACAJ,YAAAgC,GACAzB,mBAAA,SAAApE,EAAAkG,GACA,OAAAlG,EAA4BxF,GAAI0L,EAAA,GAAAR,OAUhC,OAJAK,IAAAC,EAAAxpB,UAAAupB,GACAC,EAAAllC,UAAAD,OAAA+K,OAAAm6B,KAAAjlC,WACAklC,EAAAllC,UAAA2b,YAAAupB,EAEAA,EAnBsB,CAoBpBP,IASKU,GAAA,CACP,IAAML,GAAkB,aACxB,IAAMA,GAAkB,eACxB,IAAMA,GAAkB,eACxB,IAAMA,GAAkB,eACxB,IAAMA,GAAkB,oCACxB,IAAMA,GAAkB,8BACxB,IAAMA,GAAkB,iDAYjB,SAAAM,GAAAC,EAAAC,EAAAC,GACP,IAAA9hC,EAAA4hC,EAAA5hC,OACA+hC,EAAAD,EAAA,EAAAA,EAAA,EACAppB,EAAAmpB,OACA/hC,IAAA4Y,IAGAA,EAFAqpB,EAAA,EAEAH,EAAA/9B,QAEA,IAAAqa,MAAAle,IAIA,IADA,IAAAgiC,EAAAd,GACAnhC,EAAA,EAAiBA,EAAAC,EAAYD,GAAAgiC,EAAA,CAC7BrpB,EAAA3Y,GAAAiiC,EAAAJ,EAAA7hC,GAAA,IACA,IAAAgmB,EAAAkb,GACAh5B,KAAAgE,IAAAhE,KAAAg6B,IAAAh6B,KAAAuuB,IAAAoL,EAAA7hC,EAAA,aACAgmB,EAAAic,EACAjc,EAAAic,EACKjc,GAAAic,IACLjc,GAAAic,GAEAtpB,EAAA3Y,EAAA,GAAAgmB,EAEA,OAAArN,EAYO,SAASwpB,GAAUN,EAAAC,EAAAC,GAC1B,IAAA9hC,EAAA4hC,EAAA5hC,OACA+hC,EAAAD,EAAA,EAAAA,EAAA,EACAppB,EAAAmpB,OACA/hC,IAAA4Y,IAGAA,EAFAqpB,EAAA,EAEAH,EAAA/9B,QAEA,IAAAqa,MAAAle,IAGA,QAAAD,EAAA,EAAiBA,EAAAC,EAAYD,GAAAgiC,EAC7BrpB,EAAA3Y,GAAA,IAAA6hC,EAAA7hC,GAAAmhC,GACAxoB,EAAA3Y,EAAA,OAAAkI,KAAAk6B,KACAl6B,KAAAyN,IAAAksB,EAAA7hC,EAAA,GAAAkhC,KAAAh5B,KAAAuuB,GAAA,GAEA,OAAA9d,ECrIO,IASI0pB,GAAM,kBAONC,GAhBM,QAgBSp6B,KAAAuuB,GAAmB,IAWzC8L,GAAkB,SAAAhB,GACtB,SAAAiB,EAAA3qB,EAAA4qB,GACAlB,EAAA/kC,KAAAwL,KAAA,CACA6P,OACA4pB,MAAa1C,GAAKP,QAClBvF,OAAcoJ,GACd9C,gBAAAkD,EACAhD,QAAA,EACAM,cAAqBuC,GACrBjD,YAAmBgD,KASnB,OAJAd,IAAAiB,EAAAxqB,UAAAupB,GACAiB,EAAAlmC,UAAAD,OAAA+K,OAAAm6B,KAAAjlC,WACAkmC,EAAAlmC,UAAA2b,YAAAuqB,EAEAA,EAlBsB,CAmBpBvB,IASSyB,GAAW,CACtB,IAAMH,GAAkB,UACxB,IAAMA,GAAkB,mBACxB,IAAMA,GAAkB,oCACxB,IAAMA,GAAkB,uCACxB,IAAMA,GAAkB,iCACxB,IAAMA,GAAkB,4BACxB,IAAMA,GAAkB,sDACxB,IAAMA,GAAkB,sCCpEpBI,GAAK,GCET,ICmPOC,GAAAC,GAAAC,GDnPPC,GAAA,GAmBO,SAASC,GAAG/zB,EAAAg0B,EAAAC,GACnB,IAAAC,EAAAl0B,EAAAgxB,UACAmD,EAAAH,EAAAhD,UACAkD,KAAAJ,KACAA,GAAAI,GAAA,IAEAJ,GAAAI,GAAAC,GAAAF,EC6DO,SAAAG,GAAAxB,EAAAC,EAAAC,GACP,IAAAppB,EACA,QAAA5Y,IAAA+hC,EAAA,CACA,QAAA9hC,EAAA,EAAA4Y,EAAAipB,EAAA5hC,OAAsCD,EAAA4Y,IAAQ5Y,EAC9C8hC,EAAA9hC,GAAA6hC,EAAA7hC,GAEA2Y,EAAAmpB,OAEAnpB,EAAAkpB,EAAA/9B,QAEA,OAAA6U,EAUO,SAAA2qB,GAAAzB,EAAAC,EAAAC,GACP,QAAAhiC,IAAA+hC,GAAAD,IAAAC,EAAA,CACA,QAAA9hC,EAAA,EAAA4Y,EAAAipB,EAAA5hC,OAAsCD,EAAA4Y,IAAQ5Y,EAC9C8hC,EAAA9hC,GAAA6hC,EAAA7hC,GAEA6hC,EAAAC,EAEA,OAAAD,EAWO,SAAA0B,GAAAjtB,IFpGA,SAAYuB,EAAAvB,GACjBqsB,GAAK9qB,GAAAvB,EEoGLktB,CAAeltB,EAAA2pB,UAAA3pB,GACf0sB,GAAgB1sB,IAAA+sB,IAqBX,SAASI,GAAGC,GACnB,uBAAAA,EFrISf,GEsI6B,IFtIxB,KEuIa,QAwBpB,SAAA/C,GAAAtpB,EAAAklB,EAAAkG,EAAAiC,GAEP,IAAAC,EACA/8B,GAFAyP,EAAemtB,GAAGntB,IAElB0qB,yBACA,GAAAn6B,EACA+8B,EAAA/8B,EAAA20B,EAAAkG,QAGA,GADAprB,EAAA6pB,YACiBpB,GAAKP,UAAAmF,MAAuC5E,GAAKP,QAClEoF,EAAApI,MACK,CAIL,IAAAqI,EAAAC,GAAAxtB,EAA+DmtB,GAAG,cAClEM,EAAA,CACArC,EAAA,GAAAlG,EAAA,EAAAkG,EAAA,GACAA,EAAA,GAAAlG,EAAA,EAAAkG,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAlG,EAAA,EACAkG,EAAA,GAAAA,EAAA,GAAAlG,EAAA,GAKAoI,GAFkB/F,IADlBkG,EAAAF,EAAAE,IAAA,IAC6BjgC,MAAA,KAAAigC,EAAAjgC,MAAA,MACV+5B,GAAWkG,EAAAjgC,MAAA,KAAAigC,EAAAjgC,MAAA,OAC9B,EACA,IAAAi8B,EAAA4D,EACQ7E,GAAe6E,GACvBrtB,EAAA8pB,wBACArgC,IAAAggC,IACA6D,GAAA7D,GAIA,OAAA6D,EAWO,SAAAI,GAAAC,IArFA,SAAAA,GACPA,EAAAt+B,QAAA49B,IAqFAW,CAAAD,GACAA,EAAAt+B,QAAA,SAAAsJ,GACAg1B,EAAAt+B,QAAA,SAAAs9B,GACAh0B,IAAAg0B,GACQD,GAAgB/zB,EAAAg0B,EAAAI,QA4CjB,SAAAc,GAAA7tB,EAAA8tB,GACP,OAAA9tB,EAEG,iBAAAA,EACQmtB,GAAGntB,GAEd,EAJWmtB,GAAGW,GAmHP,SAAAC,GAAAC,EAAAC,GACP,GAAAD,IAAAC,EACA,SAEA,IAAAC,EAAAF,EAAAnE,aAAAoE,EAAApE,WACA,OAAAmE,EAAArE,YAAAsE,EAAAtE,UACAuE,EAEAV,GAAAQ,EAAAC,KACAlB,IAAAmB,EAcO,SAAAV,GAAAW,EAAAC,GACP,IAEAC,EDlWO,SAAYxB,EAAAC,GACnB,IAAA9wB,EAIA,OAHA6wB,KAAAJ,IAAAK,KAAAL,GAAAI,KACA7wB,EAAAywB,GAAAI,GAAAC,IAEA9wB,EC6VsBsyB,CAFtBH,EAAAxE,UACAyE,EAAAzE,WAKA,OAHA0E,IACAA,EAAArB,IAEAqB,EAcO,SAASE,GAAY51B,EAAAg0B,GAG5B,OAAAa,GAFyBL,GAAGx0B,GACEw0B,GAAGR,IAmB1B,SAAS6B,GAASvjB,EAAAtS,EAAAg0B,GAEzB,OADsB4B,GAAY51B,EAAAg0B,EAClC0B,CAAApjB,OAAAxhB,EAAAwhB,EAAAthB,QAyCA+jC,GAA2BrC,IAC3BqC,GAA2BtB,IA1PpBE,GA6PyCjB,GA7PzCkB,GA6P+DjB,GA7P/DkB,GA6P6EX,GAA1DO,GA5P1B/8B,QAAA,SAAA2+B,GACA1B,GAAAj9B,QAAA,SAAA4+B,GACMvB,GAAgBsB,EAAAC,EAAA1B,IAChBG,GAAgBuB,EAAAD,EAAAxB,QCnOtB,IAAAiC,GAAA,IAAA5mB,MAAA,GAiBO,SAAS6mB,GAAK1yB,GACrB,OAAS2yB,GAAG3yB,EAAA,aAWL,SAAA4yB,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACArH,EAAAqH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACArH,EAAAqH,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,EAAAV,EAAA,GASA,OAPAD,EAAA,GAAAE,EAAAK,EAAA5H,EAAA6H,EACAR,EAAA,GAAAG,EAAAI,EAAAH,EAAAI,EACAR,EAAA,GAAAE,EAAAtH,EAAAD,EAAA8H,EACAT,EAAA,GAAAG,EAAAvH,EAAAwH,EAAAK,EACAT,EAAA,GAAAE,EAAAQ,EAAA/H,EAAAgI,EAAAN,EACAL,EAAA,GAAAG,EAAAO,EAAAN,EAAAO,EAAAL,EAEAN,EAcO,SAASF,GAAG3yB,EAAA9N,EAAAC,EAAAjC,EAAAoE,EAAAjI,EAAAyhB,GAOnB,OANA9N,EAAA,GAAA9N,EACA8N,EAAA,GAAA7N,EACA6N,EAAA,GAAA9P,EACA8P,EAAA,GAAA1L,EACA0L,EAAA,GAAA3T,EACA2T,EAAA,GAAA8N,EACA9N,EAUO,SAAAyzB,GAAAZ,EAAAC,GAOP,OANAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAaO,SAAAzkC,GAAA4R,EAAAiP,GACP,IAAAuE,EAAAvE,EAAA,GACAyE,EAAAzE,EAAA,GAGA,OAFAA,EAAA,GAAAjP,EAAA,GAAAwT,EAAAxT,EAAA,GAAA0T,EAAA1T,EAAA,GACAiP,EAAA,GAAAjP,EAAA,GAAAwT,EAAAxT,EAAA,GAAA0T,EAAA1T,EAAA,GACAiP,EAwBO,SAASykB,GAAK1zB,EAAAwT,EAAAE,GACrB,OAAAkf,GAAA5yB,EAA6B2yB,GAAGF,GAAAjf,EAAA,IAAAE,EAAA,MAWzB,SAASigB,GAAS3zB,EAAA4T,EAAAE,GACzB,OAAA8e,GAAA5yB,EAA6B2yB,GAAGF,GAAA,QAAA7e,EAAAE,IAiBzB,SAAS8f,GAAO5zB,EAAA6zB,EAAAC,EAAAC,EAAAC,EAAAjP,EAAAkP,EAAAC,GACvB,IAAA/O,EAAAvvB,KAAAuvB,IAAAJ,GACAE,EAAArvB,KAAAqvB,IAAAF,GAOA,OANA/kB,EAAA,GAAA+zB,EAAA9O,EACAjlB,EAAA,GAAAg0B,EAAA7O,EACAnlB,EAAA,IAAA+zB,EAAA5O,EACAnlB,EAAA,GAAAg0B,EAAA/O,EACAjlB,EAAA,GAAAi0B,EAAAF,EAAA9O,EAAAiP,EAAAH,EAAA5O,EAAA0O,EACA7zB,EAAA,GAAAi0B,EAAAD,EAAA7O,EAAA+O,EAAAF,EAAA/O,EAAA6O,EACA9zB,ECxLA,IAAAm0B,GDuBA,cE4PO,SAAAC,GAAAC,GACP,IAAAvM,EAQA,OAPAuM,GAAgBvJ,GAAcC,GAC9BjD,EAAA,EACGuM,GAAoBvJ,GAAcE,KAAAqJ,GAAkBvJ,GAAcG,IACrEnD,EAAA,EACGuM,GAAoBvJ,GAAcI,OACrCpD,EAAA,GAE2B,EAsBZ,IAAAwM,GA/SG,SAAAC,GAClB,SAAAC,IAEAD,EAAArqC,KAAAwL,MAMAA,KAAA2+B,OAAkBvJ,GAAcC,GAMhCr1B,KAAAoyB,OAAA,EAMApyB,KAAAkyB,gBAAA,KAgOA,OA5NA2M,IAAAC,EAAA9uB,UAAA6uB,GACAC,EAAAxqC,UAAAD,OAAA+K,OAAAy/B,KAAAvqC,WACAwqC,EAAAxqC,UAAA2b,YAAA6uB,EAKAA,EAAAxqC,UAAAyqC,cAAA,SAAA9N,GACA,OAAWgB,GAAiCjyB,KAAAkyB,gBAC5C,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OAAAnB,IAOA6N,EAAAxqC,UAAA0qC,eAAA,WACA,OAAW1vB,KAQXwvB,EAAAxqC,UAAA2qC,mBAAA,WACA,OAAAj/B,KAAAkyB,gBAAAp2B,MAAA,EAAAkE,KAAAoyB,SAMA0M,EAAAxqC,UAAA4qC,mBAAA,WACA,OAAAl/B,KAAAkyB,iBAQA4M,EAAAxqC,UAAA6qC,kBAAA,WACA,OAAAn/B,KAAAkyB,gBAAAp2B,MAAAkE,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,SAQA0M,EAAAxqC,UAAA8qC,UAAA,WACA,OAAAp/B,KAAA2+B,QAMAG,EAAAxqC,UAAA+qC,sBAAA,SAAAC,GAQA,GAPAt/B,KAAAu/B,4BAAAv/B,KAAAiW,gBACMpF,EAAK7Q,KAAAw/B,yBACXx/B,KAAAy/B,yCAAA,EACAz/B,KAAAu/B,2BAAAv/B,KAAAiW,eAIAqpB,EAAA,GACA,IAAAt/B,KAAAy/B,0CACAH,GAAAt/B,KAAAy/B,yCACA,OAAAz/B,KAEA,IAAAX,EAAAigC,EAAAh5B,WACA,GAAAtG,KAAAw/B,wBAAAjrC,eAAA8K,GACA,OAAAW,KAAAw/B,wBAAAngC,GAEA,IAAAqgC,EACA1/B,KAAA2/B,8BAAAL,GAEA,OADAI,EAAAR,qBACAjnC,OAAA+H,KAAAkyB,gBAAAj6B,QACA+H,KAAAw/B,wBAAAngC,GAAAqgC,EACAA,IAQA1/B,KAAAy/B,yCAAAH,EACAt/B,OAUA8+B,EAAAxqC,UAAAqrC,8BAAA,SAAAL,GACA,OAAAt/B,MAMA8+B,EAAAxqC,UAAAsrC,UAAA,WACA,OAAA5/B,KAAAoyB,QAOA0M,EAAAxqC,UAAAurC,mBAAA,SAAAlB,EAAAzM,GACAlyB,KAAAoyB,OAAAsM,GAAAC,GACA3+B,KAAA2+B,SACA3+B,KAAAkyB,mBAQA4M,EAAAxqC,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACIzwB,KASJwvB,EAAAxqC,UAAA0rC,UAAA,SAAArB,EAAA3N,EAAAiP,GAEA,IAAA7N,EACA,GAAAuM,EACAvM,EAAAsM,GAAAC,OACK,CACL,QAAA3mC,EAAA,EAAqBA,EAAAioC,IAAajoC,EAAA,CAClC,OAAAg5B,EAAA/4B,OAGA,OAFA+H,KAAA2+B,OAAwBvJ,GAAcC,QACtCr1B,KAAAoyB,OAAA,GAGApB,EAAyCA,EAAA,GAIzC2N,EA8EA,SAAAvM,GACA,IAAAuM,EACA,GAAAvM,EACAuM,EAAavJ,GAAcC,GACxB,GAAAjD,EACHuM,EAAavJ,GAAcE,IACxB,GAAAlD,IACHuM,EAAavJ,GAAcI,MAE3B,SAvFA0K,CADA9N,EAAApB,EAAA/4B,QAGA+H,KAAA2+B,SACA3+B,KAAAoyB,UAOA0M,EAAAxqC,UAAA6rC,eAAA,SAAAjF,GACAl7B,KAAAkyB,kBACAgJ,EAAAl7B,KAAAkyB,gBAAAlyB,KAAAkyB,gBAAAlyB,KAAAoyB,QACApyB,KAAAgW,YAQA8oB,EAAAxqC,UAAA8rC,OAAA,SAAA/Q,EAAAgR,GACA,IAAAnO,EAAAlyB,KAAAk/B,qBACA,GAAAhN,EAAA,CACA,IAAAE,EAAApyB,KAAA4/B,aXjLO,SAAe1N,EAAAC,EAAApP,EAAAqP,EAAA/C,EAAAgR,EAAA3K,GAOtB,IANA,IAAAC,EAAAD,GAAA,GACAnG,EAAArvB,KAAAqvB,IAAAF,GACAI,EAAAvvB,KAAAuvB,IAAAJ,GACAiR,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAroC,EAAA,EACAwD,EAAA22B,EAAsB32B,EAAAunB,EAASvnB,GAAA42B,EAAA,CAC/B,IAAAoC,EAAAtC,EAAA12B,GAAA8kC,EACA7L,EAAAvC,EAAA12B,EAAA,GAAA+kC,EACA5K,EAAA39B,KAAAsoC,EAAA9L,EAAAjF,EAAAkF,EAAAhF,EACAkG,EAAA39B,KAAAuoC,EAAA/L,EAAA/E,EAAAgF,EAAAlF,EACA,QAAAxuB,EAAAvF,EAAA,EAAuBuF,EAAAvF,EAAA42B,IAAgBrxB,EACvC40B,EAAA39B,KAAAk6B,EAAAnxB,GAGA20B,GAAAC,EAAA19B,QAAAD,IACA29B,EAAA19B,OAAAD,GWiKMwoC,CACNtO,EAAA,EAAAA,EAAAj6B,OACAm6B,EAAA/C,EAAAgR,EAAAnO,GACAlyB,KAAAgW,YAQA8oB,EAAAxqC,UAAAq7B,MAAA,SAAA0O,EAAAoC,EAAAC,GACA,IAAApC,EAAAmC,OACA1oC,IAAAumC,IACAA,EAAAD,GAEA,IAAAgC,EAAAK,EACAL,IACAA,EAAejN,GAASpzB,KAAAk4B,cAExB,IAAAhG,EAAAlyB,KAAAk/B,qBACA,GAAAhN,EAAA,CACA,IAAAE,EAAApyB,KAAA4/B,aXrKO,SAAc1N,EAAAC,EAAApP,EAAAqP,EAAAiM,EAAAC,EAAA+B,EAAA3K,GAKrB,IAJA,IAAAC,EAAAD,GAAA,GACA4K,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAroC,EAAA,EACAwD,EAAA22B,EAAsB32B,EAAAunB,EAASvnB,GAAA42B,EAAA,CAC/B,IAAAoC,EAAAtC,EAAA12B,GAAA8kC,EACA7L,EAAAvC,EAAA12B,EAAA,GAAA+kC,EACA5K,EAAA39B,KAAAsoC,EAAAjC,EAAA7J,EACAmB,EAAA39B,KAAAuoC,EAAAjC,EAAA7J,EACA,QAAA1zB,EAAAvF,EAAA,EAAuBuF,EAAAvF,EAAA42B,IAAgBrxB,EACvC40B,EAAA39B,KAAAk6B,EAAAnxB,GAGA20B,GAAAC,EAAA19B,QAAAD,IACA29B,EAAA19B,OAAAD,GWuJM2oC,CACNzO,EAAA,EAAAA,EAAAj6B,OACAm6B,EAAAiM,EAAAC,EAAA+B,EAAAnO,GACAlyB,KAAAgW,YAQA8oB,EAAAxqC,UAAAssC,UAAA,SAAApM,EAAAC,GACA,IAAAvC,EAAAlyB,KAAAk/B,qBACA,GAAAhN,EAAA,CACA,IAAAE,EAAApyB,KAAA4/B,aXrJO,SAAkB1N,EAAAC,EAAApP,EAAAqP,EAAAoC,EAAAC,EAAAiB,GAGzB,IAFA,IAAAC,EAAAD,GAAA,GACA19B,EAAA,EACAwD,EAAA22B,EAAsB32B,EAAAunB,EAASvnB,GAAA42B,EAAA,CAC/BuD,EAAA39B,KAAAk6B,EAAA12B,GAAAg5B,EACAmB,EAAA39B,KAAAk6B,EAAA12B,EAAA,GAAAi5B,EACA,QAAA1zB,EAAAvF,EAAA,EAAuBuF,EAAAvF,EAAA42B,IAAgBrxB,EACvC40B,EAAA39B,KAAAk6B,EAAAnxB,GAGA20B,GAAAC,EAAA19B,QAAAD,IACA29B,EAAA19B,OAAAD,GW2IM6oC,CACN3O,EAAA,EAAAA,EAAAj6B,OAAAm6B,EACAoC,EAAAC,EAAAvC,GACAlyB,KAAAgW,YAIA8oB,EArPkB,CDYN,SAAAloB,GACZ,SAAAioB,IAEAjoB,EAAApiB,KAAAwL,MAMAA,KAAAm3B,QbkKA,CAAAh2B,SAAA,Ua5JAnB,KAAA8gC,iBAAA,EAMA9gC,KAAAw/B,wBAAA,GAMAx/B,KAAAy/B,yCAAA,EAMAz/B,KAAAu/B,2BAAA,EA2NA,OAvNA3oB,IAAAioB,EAAA7uB,UAAA4G,GACAioB,EAAAvqC,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACAuqC,EAAAvqC,UAAA2b,YAAA4uB,EAOAA,EAAAvqC,UAAAysC,MAAA,WACA,OAAWzxB,KAWXuvB,EAAAvqC,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,OAAW5xB,KAQXuvB,EAAAvqC,UAAA6sC,WAAA,SAAArjB,EAAAE,GACA,UAWA6gB,EAAAvqC,UAAA8sC,gBAAA,SAAA1H,EAAA2H,GACA,IAAAJ,EAAAI,GAAA,CAAAC,SAEA,OADAthC,KAAAghC,eAAAtH,EAAA,GAAAA,EAAA,GAAAuH,EAAA9/B,KACA8/B,GAUApC,EAAAvqC,UAAAitC,qBAAA,SAAAhoB,GACA,OAAAvZ,KAAAmhC,WAAA5nB,EAAA,GAAAA,EAAA,KASAslB,EAAAvqC,UAAAyqC,cAAA,SAAA9N,GACA,OAAW3hB,KASXuvB,EAAAvqC,UAAA4jC,UAAA,SAAA7G,GAKA,OAJArxB,KAAA8gC,iBAAA9gC,KAAAiW,gBACAjW,KAAAm3B,QAAAn3B,KAAA++B,cAAA/+B,KAAAm3B,SACAn3B,KAAA8gC,gBAAA9gC,KAAAiW,ebmiBO,SAAAgb,EAAAI,GACP,OAAAA,GACAA,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,GAEAJ,EaziBWuQ,CAAcxhC,KAAAm3B,QAAA9F,IAWzBwN,EAAAvqC,UAAA8rC,OAAA,SAAA/Q,EAAAgR,GACI/wB,KAcJuvB,EAAAvqC,UAAAq7B,MAAA,SAAA0O,EAAAoC,EAAAC,GACIpxB,KAaJuvB,EAAAvqC,UAAAmtC,SAAA,SAAAC,GACA,OAAA1hC,KAAAq/B,sBAAAqC,MAWA7C,EAAAvqC,UAAA+qC,sBAAA,SAAAC,GACA,OAAWhwB,KAQXuvB,EAAAvqC,UAAAqtC,QAAA,WACA,OAAWryB,KAWXuvB,EAAAvqC,UAAA6rC,eAAA,SAAAjF,GACI5rB,KASJuvB,EAAAvqC,UAAAstC,iBAAA,SAAA3Q,GACA,OAAW3hB,KAWXuvB,EAAAvqC,UAAAssC,UAAA,SAAApM,EAAAC,GACInlB,KAkBJuvB,EAAAvqC,UAAAgW,UAAA,SAAArD,EAAAg0B,GAEA,IAAA4G,EAAqBpG,GAAax0B,GAClCi0B,EAAA2G,EAAA1J,YAA+CpB,GAAKH,YACpD,SAAAkL,EAAAC,EAAA3P,GACA,IAAA4P,EAAAH,EAAA3J,YACA+J,EAAAJ,EAAAxJ,iBACA1I,EAAoBwD,GAAS8O,GAAoB9O,GAAS6O,GAO1D,OANQ9D,GAAgBO,GACxBwD,EAAA,GAAAA,EAAA,GACAtS,KAAA,EACA,KACQ8F,GAAWqM,EAAA,EAAAA,EAAA7pC,OAAAm6B,EACnBqM,GAAAsD,GACelF,GAAYgF,EAAA5G,EAAZ4B,CAAYiF,EAAAC,EAAA3P,IAErByK,GAAYgF,EAAA5G,GAElB,OADAj7B,KAAAmgC,eAAAjF,GACAl7B,MAGA6+B,EA5PY,CA6PVloB,IE/QK,SAASurB,GAAUhQ,EAAAC,EAAApP,EAAAqP,GAI1B,IAHA,IAAA+P,EAAA,EACAjU,EAAAgE,EAAAnP,EAAAqP,GACAjE,EAAA+D,EAAAnP,EAAAqP,EAAA,GACQD,EAAApP,EAAcoP,GAAAC,EAAA,CACtB,IAAAhE,EAAA8D,EAAAC,GACA9D,EAAA6D,EAAAC,EAAA,GACAgQ,GAAAhU,EAAAC,EAAAF,EAAAG,EACAH,EAAAE,EACAD,EAAAE,EAEA,OAAA8T,EAAA,EAWO,SAASC,GAAWlQ,EAAAC,EAAAkQ,EAAAjQ,GAE3B,IADA,IAAAxtB,EAAA,EACA5M,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACA4M,GAAYs9B,GAAUhQ,EAAAC,EAAApP,EAAAqP,GACtBD,EAAApP,EAEA,OAAAne,ECvBA,SAAA09B,GAAApQ,EAAAqQ,EAAAC,EAAApQ,EAAAtU,EAAAE,EAAAijB,GACA,IAIA9O,EAJAjE,EAAAgE,EAAAqQ,GACApU,EAAA+D,EAAAqQ,EAAA,GACArkB,EAAAgU,EAAAsQ,GAAAtU,EACA9P,EAAA8T,EAAAsQ,EAAA,GAAArU,EAEA,OAAAjQ,GAAA,IAAAE,EACA+T,EAAAoQ,MACG,CACH,IAAAprC,IAAA2mB,EAAAoQ,GAAAhQ,GAAAF,EAAAmQ,GAAA/P,IAAAF,IAAAE,KACA,GAAAjnB,EAAA,EACAg7B,EAAAqQ,MACK,IAAArrC,EAAA,GACL,QAAAa,EAAA,EAAqBA,EAAAo6B,IAAYp6B,EACjCipC,EAAAjpC,GAA0B22B,GAAIuD,EAAAqQ,EAAAvqC,GAC9Bk6B,EAAAsQ,EAAAxqC,GAAAb,GAGA,YADA8pC,EAAAhpC,OAAAm6B,GAGAD,EAAAoQ,GAGA,QAAAvc,EAAA,EAAmBA,EAAAoM,IAAcpM,EACjCib,EAAAjb,GAAAkM,EAAAC,EAAAnM,GAEAib,EAAAhpC,OAAAm6B,EAcO,SAAAqQ,GAAAvQ,EAAAC,EAAApP,EAAAqP,EAAAjyB,GACP,IAAA+tB,EAAAgE,EAAAC,GACAhE,EAAA+D,EAAAC,EAAA,GACA,IAAAA,GAAAC,EAAwBD,EAAApP,EAAcoP,GAAAC,EAAA,CACtC,IAAAhE,EAAA8D,EAAAC,GACA9D,EAAA6D,EAAAC,EAAA,GACAuQ,EAAuBpU,GAASJ,EAAAC,EAAAC,EAAAC,GAChCqU,EAAAviC,IACAA,EAAAuiC,GAEAxU,EAAAE,EACAD,EAAAE,EAEA,OAAAluB,EAYO,SAAAwiC,GAAAzQ,EAAAC,EAAAkQ,EAAAjQ,EAAAjyB,GACP,QAAAnI,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACAmI,EAAAsiC,GACAvQ,EAAAC,EAAApP,EAAAqP,EAAAjyB,GACAgyB,EAAApP,EAEA,OAAA5iB,EAqCO,SAAAyiC,GAAA1Q,EAAAC,EAAApP,EACPqP,EAAAyQ,EAAAC,EAAAhlB,EAAAE,EAAAijB,EAAAC,EACA6B,GACA,GAAA5Q,GAAApP,EACA,OAAAme,EAEA,IAAAlpC,EAAAgrC,EACA,OAAAH,EAAA,CAIA,IAFAG,EAAsB1U,GACtBxQ,EAAAE,EAAAkU,EAAAC,GAAAD,EAAAC,EAAA,KACA+O,EAAA,CACA,IAAAlpC,EAAA,EAAiBA,EAAAo6B,IAAYp6B,EAC7BipC,EAAAjpC,GAAAk6B,EAAAC,EAAAn6B,GAGA,OADAipC,EAAAhpC,OAAAm6B,EACA4Q,EAEA,OAAA9B,EAKA,IAFA,IAAA+B,EAAAF,GAAA,CAAAzB,SACA/9B,EAAA4uB,EAAAC,EACA7uB,EAAAwf,GAIA,GAHAuf,GACApQ,EAAA3uB,EAAA6uB,EAAA7uB,EAAA6uB,EAAAtU,EAAAE,EAAAilB,IACAD,EAAsB1U,GAASxQ,EAAAE,EAAAilB,EAAA,GAAAA,EAAA,KAC/B/B,EAAA,CAEA,IADAA,EAAA8B,EACAhrC,EAAA,EAAiBA,EAAAo6B,IAAYp6B,EAC7BipC,EAAAjpC,GAAAirC,EAAAjrC,GAEAipC,EAAAhpC,OAAAm6B,EACA7uB,GAAA6uB,OAYA7uB,GAAA6uB,EAAAlyB,KAAAC,KACAD,KAAAsE,KAAAw+B,GACA9iC,KAAAsE,KAAA08B,IAAA2B,EAAA,KAGA,GAAAC,IAEAR,GACApQ,EAAAnP,EAAAqP,EAAAD,EAAAC,EAAAtU,EAAAE,EAAAilB,IACAD,EAAsB1U,GAASxQ,EAAAE,EAAAilB,EAAA,GAAAA,EAAA,KAC/B/B,GAAA,CAEA,IADAA,EAAA8B,EACAhrC,EAAA,EAAiBA,EAAAo6B,IAAYp6B,EAC7BipC,EAAAjpC,GAAAirC,EAAAjrC,GAEAipC,EAAAhpC,OAAAm6B,EAGA,OAAA8O,EAkBO,SAAAgC,GAAAhR,EAAAC,EAAAkQ,EACPjQ,EAAAyQ,EAAAC,EAAAhlB,EAAAE,EAAAijB,EAAAC,EACA6B,GAEA,IADA,IAAAE,EAAAF,GAAA,CAAAzB,SACAtpC,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACAkpC,EAAA0B,GACA1Q,EAAAC,EAAApP,EAAAqP,EACAyQ,EAAAC,EAAAhlB,EAAAE,EAAAijB,EAAAC,EAAA+B,GACA9Q,EAAApP,EAEA,OAAAme,EC/MO,SAAAiC,GAAAjR,EAAAC,EAAA5Y,EAAA6Y,GACP,QAAAp6B,EAAA,EAAA4Y,EAAA2I,EAAAthB,OAAyCD,EAAA4Y,IAAQ5Y,EACjDk6B,EAAAC,KAAA5Y,EAAAvhB,GAEA,OAAAm6B,EAWO,SAAAiR,GAAAlR,EAAAC,EAAAnB,EAAAoB,GACP,QAAAp6B,EAAA,EAAA4Y,EAAAogB,EAAA/4B,OAA0CD,EAAA4Y,IAAQ5Y,EAElD,IADA,IAAAuhB,EAAAyX,EAAAh5B,GACAwD,EAAA,EAAmBA,EAAA42B,IAAY52B,EAC/B02B,EAAAC,KAAA5Y,EAAA/d,GAGA,OAAA22B,EAYO,SAAAkR,GAAAnR,EAAAC,EAAAmR,EAAAlR,EAAAmR,GAGP,IAFA,IAAAlB,EAAAkB,GAAA,GACAvrC,EAAA,EACAwD,EAAA,EAAAgoC,EAAAF,EAAArrC,OAA2CuD,EAAAgoC,IAAQhoC,EAAA,CACnD,IAAAunB,EAAAqgB,GACAlR,EAAAC,EAAAmR,EAAA9nC,GAAA42B,GACAiQ,EAAArqC,KAAA+qB,EACAoP,EAAApP,EAGA,OADAsf,EAAApqC,OAAAD,EACAqqC,EC3CO,SAAAoB,GAAAvR,EAAAC,EAAApP,EAAAqP,EAAAsR,GAGP,IAFA,IAAA1S,OAAAj5B,IAAA2rC,IAAA,GACA1rC,EAAA,EACAwD,EAAA22B,EAAsB32B,EAAAunB,EAASvnB,GAAA42B,EAC/BpB,EAAAh5B,KAAAk6B,EAAAp2B,MAAAN,IAAA42B,GAGA,OADApB,EAAA/4B,OAAAD,EACAg5B,EAYO,SAAA2S,GAAAzR,EAAAC,EAAAkQ,EAAAjQ,EAAAwR,GAGP,IAFA,IAAAN,OAAAvrC,IAAA6rC,IAAA,GACA5rC,EAAA,EACAwD,EAAA,EAAAgoC,EAAAnB,EAAApqC,OAAmCuD,EAAAgoC,IAAQhoC,EAAA,CAC3C,IAAAunB,EAAAsf,EAAA7mC,GACA8nC,EAAAtrC,KAAAyrC,GACAvR,EAAAC,EAAApP,EAAAqP,EAAAkR,EAAAtrC,IACAm6B,EAAApP,EAGA,OADAugB,EAAArrC,OAAAD,EACAsrC,EAaO,SAAAO,GAAA3R,EAAAC,EAAA2R,EAAA1R,EAAA2R,GAGP,IAFA,IAAAC,OAAAjsC,IAAAgsC,IAAA,GACA/rC,EAAA,EACAwD,EAAA,EAAAgoC,EAAAM,EAAA7rC,OAAoCuD,EAAAgoC,IAAQhoC,EAAA,CAC5C,IAAA6mC,EAAAyB,EAAAtoC,GACAwoC,EAAAhsC,KAAA2rC,GACAzR,EAAAC,EAAAkQ,EAAAjQ,EAAA4R,EAAAhsC,IACAm6B,EAAAkQ,IAAApqC,OAAA,GAGA,OADA+rC,EAAA/rC,OAAAD,EACAgsC,ECQO,SAAAC,GAAA/R,EAAAC,EAAApP,EACPqP,EAAAkN,EAAA4E,EAAAC,GACA,IAAA5kC,GAAAwjB,EAAAoP,GAAAC,EACA,GAAA7yB,EAAA,GACA,KAAU4yB,EAAApP,EAAcoP,GAAAC,EACxB8R,EAAAC,KACAjS,EAAAC,GACA+R,EAAAC,KACAjS,EAAAC,EAAA,GAEA,OAAAgS,EAGA,IAAAC,EAAA,IAAAjuB,MAAA5W,GACA6kC,EAAA,KACAA,EAAA7kC,EAAA,KAIA,IAFA,IAAAgD,EAAA,CAAA4vB,EAAApP,EAAAqP,GACA7uB,EAAA,EACAhB,EAAAtK,OAAA,IAQA,IAPA,IAAAosC,EAAA9hC,EAAArG,MACAooC,EAAA/hC,EAAArG,MACAqoC,EAAA,EACArW,EAAAgE,EAAAoS,GACAnW,EAAA+D,EAAAoS,EAAA,GACAlW,EAAA8D,EAAAmS,GACAhW,EAAA6D,EAAAmS,EAAA,GACArsC,EAAAssC,EAAAlS,EAAgCp6B,EAAAqsC,EAAUrsC,GAAAo6B,EAAA,CAC1C,IAEA4Q,EAA4B/U,GAF5BiE,EAAAl6B,GACAk6B,EAAAl6B,EAAA,GAEAk2B,EAAAC,EAAAC,EAAAC,GACA2U,EAAAuB,IACAhhC,EAAAvL,EACAusC,EAAAvB,GAGAuB,EAAAjF,IACA8E,GAAA7gC,EAAA4uB,GAAAC,GAAA,EACAkS,EAAAlS,EAAA7uB,GACAhB,EAAAxM,KAAAuuC,EAAA/gC,GAEAA,EAAA6uB,EAAAiS,GACA9hC,EAAAxM,KAAAwN,EAAA8gC,IAIA,QAAAre,EAAA,EAAmBA,EAAAzmB,IAASymB,EAC5Boe,EAAApe,KACAke,EAAAC,KACAjS,EAAAC,EAAAnM,EAAAoM,GACA8R,EAAAC,KACAjS,EAAAC,EAAAnM,EAAAoM,EAAA,IAGA,OAAA+R,EAgBO,SAAAK,GAAAtS,EAAAC,EACPkQ,EAAAjQ,EAAAkN,EAAA4E,EACAC,EAAAM,GACA,QAAAzsC,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACAmsC,EAAAF,GACA/R,EAAAC,EAAApP,EAAAqP,EAAAkN,EACA4E,EAAAC,GACAM,EAAA1uC,KAAAouC,GACAhS,EAAApP,EAEA,OAAAohB,EAsFO,SAAAO,GAAAjuC,EAAAirC,GACP,OAAAA,EAAAxhC,KAAAykC,MAAAluC,EAAAirC,GAuBO,SAAAkD,GAAA1S,EAAAC,EAAApP,EAAAqP,EACPsP,EAAAwC,EAAAC,GAEA,GAAAhS,GAAApP,EACA,OAAAohB,EAGA,IAQA/V,EAAAC,EARAH,EAAAwW,GAAAxS,EAAAC,GAAAuP,GACAvT,EAAAuW,GAAAxS,EAAAC,EAAA,GAAAuP,GACAvP,GAAAC,EAEA8R,EAAAC,KAAAjW,EACAgW,EAAAC,KAAAhW,EAIA,GAIA,GAHAC,EAAAsW,GAAAxS,EAAAC,GAAAuP,GACArT,EAAAqW,GAAAxS,EAAAC,EAAA,GAAAuP,IACAvP,GAAAC,IACArP,EAOA,OAFAmhB,EAAAC,KAAA/V,EACA8V,EAAAC,KAAA9V,EACA8V,QAEG/V,GAAAF,GAAAG,GAAAF,GACH,KAAAgE,EAAApP,GAAA,CAEA,IAAAkR,EAAAyQ,GAAAxS,EAAAC,GAAAuP,GACAvN,EAAAuQ,GAAAxS,EAAAC,EAAA,GAAAuP,GAGA,GAFAvP,GAAAC,EAEA6B,GAAA7F,GAAA+F,GAAA9F,EAAA,CAIA,IAAA8P,EAAA/P,EAAAF,EACAkQ,EAAA/P,EAAAF,EAEAoQ,EAAAtK,EAAA/F,EACAsQ,EAAArK,EAAAhG,EAIAgQ,EAAAK,GAAAJ,EAAAG,IACAJ,EAAA,GAAAI,EAAAJ,MAAAI,GAAAJ,EAAA,GAAAI,EAAAJ,KACAC,EAAA,GAAAI,EAAAJ,MAAAI,GAAAJ,EAAA,GAAAI,EAAAJ,IAEAhQ,EAAA6F,EACA5F,EAAA8F,IAMA+P,EAAAC,KAAA/V,EACA8V,EAAAC,KAAA9V,EACAH,EAAAE,EACAD,EAAAE,EACAD,EAAA6F,EACA5F,EAAA8F,IAKA,OAFA+P,EAAAC,KAAA/V,EACA8V,EAAAC,KAAA9V,EACA8V,EAgBO,SAAAU,GACP3S,EAAAC,EAAAkQ,EAAAjQ,EACAsP,EACAwC,EAAAC,EAAAM,GACA,QAAAzsC,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACAmsC,EAAAS,GACA1S,EAAAC,EAAApP,EAAAqP,EACAsP,EACAwC,EAAAC,GACAM,EAAA1uC,KAAAouC,GACAhS,EAAApP,EAEA,OAAAohB,ECvVA,IA2HeW,GA3HD,SAAAhG,GACd,SAAAiG,EAAA/T,EAAA+O,GAEAjB,EAAAtqC,KAAAwL,MAMAA,KAAAglC,WAAA,EAMAhlC,KAAAilC,mBAAA,OAEAltC,IAAAgoC,GAAA5pB,MAAAC,QAAA4a,EAAA,IAGAhxB,KAAA8/B,eAAkF,EAAAC,GAFlF//B,KAAA6/B,mBAAAE,EAAmE,GAqGnE,OA9FAjB,IAAAiG,EAAA/0B,UAAA8uB,GACAiG,EAAAzwC,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACAywC,EAAAzwC,UAAA2b,YAAA80B,EAQAA,EAAAzwC,UAAAysC,MAAA,WACA,WAAAgE,EAAA/kC,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,SAMAoG,EAAAzwC,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,OAAAA,EAA6B3P,GAAwBvxB,KAAAk4B,YAAApa,EAAAE,GACrDkjB,GAEAlhC,KAAAilC,mBAAAjlC,KAAAiW,gBACAjW,KAAAglC,UAAA9kC,KAAAsE,KAAiCi+B,GACjCziC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OAAA,IACApyB,KAAAilC,kBAAAjlC,KAAAiW,eAEW2sB,GACX5iC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OACApyB,KAAAglC,WAAA,EAAAlnB,EAAAE,EAAAijB,EAAAC,KAQA6D,EAAAzwC,UAAA4wC,QAAA,WACA,OAAWhD,GAAcliC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,SASzB2S,EAAAzwC,UAAA0qC,eAAA,WACA,OAAWyE,GACXzjC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,SAMA2S,EAAAzwC,UAAAqrC,8BAAA,SAAAL,GACA,IAAA4E,EAAA,GAIA,OAHAA,EAAAjsC,OAAuCgsC,GACvCjkC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OACAkN,EAAA4E,EAAA,GACA,IAAAa,EAAAb,EAAqD9O,GAAcC,KAOnE0P,EAAAzwC,UAAAqtC,QAAA,WACA,OAAWjN,GAAYG,aAMvBkQ,EAAAzwC,UAAAstC,iBAAA,SAAA3Q,GACA,UAUA8T,EAAAzwC,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEAlyB,KAAAkyB,gBAAAj6B,OAAkCmrC,GAClCpjC,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,QACApyB,KAAAgW,WAGA+uB,EAvHc,CAwHZnG,ICnCauG,GA1FN,SAAArG,GACT,SAAAsG,EAAApU,EAAA+O,GACAjB,EAAAtqC,KAAAwL,MACAA,KAAA8/B,eAAA9O,EAAA+O,GAmFA,OAhFAjB,IAAAsG,EAAAp1B,UAAA8uB,GACAsG,EAAA9wC,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACA8wC,EAAA9wC,UAAA2b,YAAAm1B,EAQAA,EAAA9wC,UAAAysC,MAAA,WAEA,OADA,IAAAqE,EAAAplC,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,SAOAyG,EAAA9wC,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,IAAAhP,EAAAlyB,KAAAkyB,gBACA8Q,EAA0B1U,GAASxQ,EAAAE,EAAAkU,EAAA,GAAAA,EAAA,IACnC,GAAA8Q,EAAA9B,EAAA,CAEA,IADA,IAAA9O,EAAApyB,KAAAoyB,OACAp6B,EAAA,EAAqBA,EAAAo6B,IAAYp6B,EACjCipC,EAAAjpC,GAAAk6B,EAAAl6B,GAGA,OADAipC,EAAAhpC,OAAAm6B,EACA4Q,EAEA,OAAA9B,GAUAkE,EAAA9wC,UAAA0qC,eAAA,WACA,OAAAh/B,KAAAkyB,gBAAAlyB,KAAAkyB,gBAAAp2B,QAAA,IAMAspC,EAAA9wC,UAAAyqC,cAAA,SAAA9N,GACA,OrB+KO1X,EqB/KgCvZ,KAAAkyB,gBrB+KhCb,EqB/KgCJ,ErBgLvCnT,EAAAvE,EAAA,GACAyE,EAAAzE,EAAA,GACAwY,GAAAjU,EAAAE,EAAAF,EAAAE,EAAAqT,GAHO,IAAA9X,EAAA8X,EACPvT,EACAE,GqB1KAonB,EAAA9wC,UAAAqtC,QAAA,WACA,OAAWjN,GAAYC,OAOvByQ,EAAA9wC,UAAAstC,iBAAA,SAAA3Q,GACA,OAAWQ,GAAUR,EAAAjxB,KAAAkyB,gBAAA,GAAAlyB,KAAAkyB,gBAAA,KAOrBkT,EAAA9wC,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEAlyB,KAAAkyB,gBAAAj6B,OAAkCkrC,GAClCnjC,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,QACApyB,KAAAgW,WAGAovB,EAtFS,CAuFPxG,ICxFK,SAAAyG,GAAAnT,EAAAC,EAAApP,EAAAqP,EAAAnB,GASP,OARgByB,GAAazB,EAK7B,SAAA1X,GACA,OAAA+rB,GAAApT,EAAAC,EAAApP,EAAAqP,EAAA7Y,EAAA,GAAAA,EAAA,MAeO,SAAA+rB,GAAApT,EAAAC,EAAApP,EAAAqP,EAAAtU,EAAAE,GAWP,IAHA,IAAAunB,EAAA,EACArX,EAAAgE,EAAAnP,EAAAqP,GACAjE,EAAA+D,EAAAnP,EAAAqP,EAAA,GACQD,EAAApP,EAAcoP,GAAAC,EAAA,CACtB,IAAAhE,EAAA8D,EAAAC,GACA9D,EAAA6D,EAAAC,EAAA,GACAhE,GAAAnQ,EACAqQ,EAAArQ,IAAAoQ,EAAAF,IAAAlQ,EAAAmQ,IAAArQ,EAAAoQ,IAAAG,EAAAF,GAAA,GACAoX,IAEKlX,GAAArQ,IAAAoQ,EAAAF,IAAAlQ,EAAAmQ,IAAArQ,EAAAoQ,IAAAG,EAAAF,GAAA,GACLoX,IAEArX,EAAAE,EACAD,EAAAE,EAEA,WAAAkX,EAaO,SAAAC,GAAAtT,EAAAC,EAAAkQ,EAAAjQ,EAAAtU,EAAAE,GACP,OAAAqkB,EAAApqC,OACA,SAEA,IAAAqtC,GAAApT,EAAAC,EAAAkQ,EAAA,GAAAjQ,EAAAtU,EAAAE,GACA,SAEA,QAAAhmB,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAC3C,GAAAstC,GAAApT,EAAAmQ,EAAArqC,EAAA,GAAAqqC,EAAArqC,GAAAo6B,EAAAtU,EAAAE,GACA,SAGA,SCjEO,SAAAynB,GAAAvT,EAAAC,EACPkQ,EAAAjQ,EAAAsT,EAAAC,EAAAjQ,GAMA,IALA,IAAA19B,EAAA4Y,EAAAkN,EAAAoQ,EAAAE,EAAAD,EAAAE,EACArQ,EAAA0nB,EAAAC,EAAA,GAEAC,EAAA,GAEA7mC,EAAA,EAAA8mC,EAAAxD,EAAApqC,OAAmC8G,EAAA8mC,IAAQ9mC,EAAA,CAC3C,IAAAgkB,EAAAsf,EAAAtjC,GAGA,IAFAmvB,EAAAgE,EAAAnP,EAAAqP,GACAjE,EAAA+D,EAAAnP,EAAAqP,EAAA,GACAp6B,EAAAm6B,EAAoBn6B,EAAA+qB,EAAS/qB,GAAAo6B,EAC7BhE,EAAA8D,EAAAl6B,GACAq2B,EAAA6D,EAAAl6B,EAAA,IACAgmB,GAAAmQ,GAAAE,GAAArQ,GAAAmQ,GAAAnQ,MAAAqQ,KACAvQ,GAAAE,EAAAmQ,IAAAE,EAAAF,IAAAC,EAAAF,KACA0X,EAAA7vC,KAAA+nB,IAEAoQ,EAAAE,EACAD,EAAAE,EAKA,IAAAyX,EAAAxE,IACAyE,GAAA5kC,IAGA,IAFAykC,EAAA//B,KAAqB6c,IACrBwL,EAAA0X,EAAA,GACA5tC,EAAA,EAAA4Y,EAAAg1B,EAAA3tC,OAAwCD,EAAA4Y,IAAQ5Y,EAAA,CAChDo2B,EAAAwX,EAAA5tC,GACA,IAAAguC,EAAA9lC,KAAAie,IAAAiQ,EAAAF,GACA8X,EAAAD,GAEUP,GAAqBtT,EAAAC,EAAAkQ,EAAAjQ,EAD/BtU,GAAAoQ,EAAAE,GAAA,EAC+BpQ,KAC/B8nB,EAAAhoB,EACAioB,EAAAC,GAGA9X,EAAAE,EAOA,OALA6X,MAAAH,KAGAA,EAAAJ,EAAAC,IAEAjQ,GACAA,EAAA3/B,KAAA+vC,EAAA9nB,EAAA+nB,GACArQ,GAEA,CAAAoQ,EAAA9nB,EAAA+nB,GCjDO,SAAApoC,GAAAu0B,EAAAC,EAAApP,EAAAqP,EAAAt6B,EAAAsZ,GAIP,IAHA,IAEA80B,EAFAC,EAAA,CAAAjU,EAAAC,GAAAD,EAAAC,EAAA,IACAiU,EAAA,GAEQjU,EAAAC,EAAArP,EAAyBoP,GAAAC,EAAA,CAIjC,GAHAgU,EAAA,GAAAlU,EAAAC,EAAAC,GACAgU,EAAA,GAAAlU,EAAAC,EAAAC,EAAA,GACA8T,EAAApuC,EAAAtD,KAAA4c,EAAA+0B,EAAAC,GAEA,OAAAF,EAEAC,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,SClBO,SAAAC,GAAAnU,EAAAC,EAAApP,EAAAqP,EAAAnB,GACP,IAAAqV,EAA0BjU,GzBwL1B,CAAAlxB,SAAA,UyBvLe+wB,EAAAC,EAAApP,EAAAqP,GACf,QAAOkC,GAAUrD,EAAAqV,OAGX5U,GAAcT,EAAAqV,KAGpBA,EAAA,IAAArV,EAAA,IACAqV,EAAA,IAAArV,EAAA,KAGAqV,EAAA,IAAArV,EAAA,IACAqV,EAAA,IAAArV,EAAA,IAGStzB,GAAcu0B,EAAAC,EAAApP,EAAAqP,EAOvB,SAAA+T,EAAAC,GACA,OzB8qBO,SAAAnV,EAAAsV,EAAAxjB,GACP,IAAAhhB,GAAA,EACAykC,EAAA3U,GAAAZ,EAAAsV,GACAE,EAAA5U,GAAAZ,EAAAlO,GACA,GAAAyjB,IAAmBhW,GAAYE,cAC/B+V,IAAiBjW,GAAYE,aAC7B3uB,GAAA,MACG,CACH,IASA+b,EAAAE,EATA9c,EAAA+vB,EAAA,GACA7vB,EAAA6vB,EAAA,GACA5vB,EAAA4vB,EAAA,GACA3vB,EAAA2vB,EAAA,GACAyV,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAA7jB,EAAA,GACA8jB,EAAA9jB,EAAA,GACA+jB,GAAAD,EAAAF,IAAAC,EAAAF,GAEAD,EAAoBjW,GAAYG,SAChC6V,EAAqBhW,GAAYG,SAGjC5uB,GADA+b,EAAA8oB,GAAAC,EAAAvlC,GAAAwlC,IACA5lC,GAAA4c,GAAAzc,GAEAU,KAAA0kC,EAAmCjW,GAAYI,QAC/C4V,EAAqBhW,GAAYI,QAGjC7uB,GADAic,EAAA6oB,GAAAD,EAAAvlC,GAAAylC,IACA1lC,GAAA4c,GAAA1c,GAEAS,KAAA0kC,EAAmCjW,GAAYK,QAC/C2V,EAAqBhW,GAAYK,QAGjC9uB,GADA+b,EAAA8oB,GAAAC,EAAAzlC,GAAA0lC,IACA5lC,GAAA4c,GAAAzc,GAEAU,KAAA0kC,EAAmCjW,GAAYM,OAC/C0V,EAAqBhW,GAAYM,OAGjC/uB,GADAic,EAAA6oB,GAAAD,EAAA1lC,GAAA4lC,IACA1lC,GAAA4c,GAAA1c,GAIA,OAAAS,EyB1tBaglC,CAAiB9V,EAAAkV,EAAAC,QA8DvB,SAAAY,GAAA9U,EAAAC,EAAAkQ,EAAAjQ,EAAAnB,GACP,IA9BO,SAAAiB,EAAAC,EAAApP,EAAAqP,EAAAnB,GACP,SAAAoV,GACAnU,EAAAC,EAAApP,EAAAqP,EAAAnB,IAGMqU,GAAoBpT,EAAAC,EAAApP,EAAAqP,EAAAnB,EAAA,GAAAA,EAAA,KAGpBqU,GAAoBpT,EAAAC,EAAApP,EAAAqP,EAAAnB,EAAA,GAAAA,EAAA,KAGpBqU,GAAoBpT,EAAAC,EAAApP,EAAAqP,EAAAnB,EAAA,GAAAA,EAAA,KAGpBqU,GAAoBpT,EAAAC,EAAApP,EAAAqP,EAAAnB,EAAA,GAAAA,EAAA,KAgB1BgW,CACA/U,EAAAC,EAAAkQ,EAAA,GAAAjQ,EAAAnB,GACA,SAEA,OAAAoR,EAAApqC,OACA,SAEA,QAAAD,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAC3C,GAAQqtC,GAAwBnT,EAAAmQ,EAAArqC,EAAA,GAAAqqC,EAAArqC,GAAAo6B,EAAAnB,KAChCoV,GAAAnU,EAAAmQ,EAAArqC,EAAA,GAAAqqC,EAAArqC,GAAAo6B,EAAAnB,GACA,SAIA,SC3GO,SAASiW,GAAWhV,EAAAC,EAAApP,EAAAqP,GAC3B,KAAAD,EAAApP,EAAAqP,GAAA,CACA,QAAAp6B,EAAA,EAAmBA,EAAAo6B,IAAYp6B,EAAA,CAC/B,IAAAuV,EAAA2kB,EAAAC,EAAAn6B,GACAk6B,EAAAC,EAAAn6B,GAAAk6B,EAAAnP,EAAAqP,EAAAp6B,GACAk6B,EAAAnP,EAAAqP,EAAAp6B,GAAAuV,EAEA4kB,GAAAC,EACArP,GAAAqP,GCNO,SAAA+U,GAAAjV,EAAAC,EAAApP,EAAAqP,GAMP,IAHA,IAAAgV,EAAA,EACAlZ,EAAAgE,EAAAnP,EAAAqP,GACAjE,EAAA+D,EAAAnP,EAAAqP,EAAA,GACQD,EAAApP,EAAcoP,GAAAC,EAAA,CACtB,IAAAhE,EAAA8D,EAAAC,GACA9D,EAAA6D,EAAAC,EAAA,GACAiV,IAAAhZ,EAAAF,IAAAG,EAAAF,GACAD,EAAAE,EACAD,EAAAE,EAEA,OAAA+Y,EAAA,EAiBO,SAAAC,GAAAnV,EAAAC,EAAAkQ,EAAAjQ,EAAAkV,GAEP,IADA,IAAAllC,OAAArK,IAAAuvC,KACAtvC,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACAuvC,EAAAJ,GACAjV,EAAAC,EAAApP,EAAAqP,GACA,OAAAp6B,GACA,GAAAoK,GAAAmlC,IAAAnlC,IAAAmlC,EACA,cAGA,GAAAnlC,IAAAmlC,IAAAnlC,GAAAmlC,EACA,SAGApV,EAAApP,EAEA,SAyCO,SAAAykB,GAAAtV,EAAAC,EAAAkQ,EAAAjQ,EAAAkV,GAEP,IADA,IAAAllC,OAAArK,IAAAuvC,KACAtvC,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACAuvC,EAAAJ,GACAjV,EAAAC,EAAApP,EAAAqP,IACA,IAAAp6B,EACAoK,GAAAmlC,IAAAnlC,IAAAmlC,EACAnlC,IAAAmlC,IAAAnlC,GAAAmlC,IAEML,GAAkBhV,EAAAC,EAAApP,EAAAqP,GAExBD,EAAApP,EAEA,OAAAoP,EAiBO,SAAAsV,GAAAvV,EAAAC,EAAA2R,EAAA1R,EAAAkV,GACP,QAAAtvC,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAC5Cm6B,EAAAqV,GACAtV,EAAAC,EAAA2R,EAAA9rC,GAAAo6B,EAAAkV,GAEA,OAAAnV,EC7GA,IAAIuV,GAAO,SAAA5I,GACX,SAAA6I,EAAA3W,EAAA+O,EAAAwD,GAEAzE,EAAAtqC,KAAAwL,MAMAA,KAAA4nC,MAAA,GAMA5nC,KAAA6nC,4BAAA,EAMA7nC,KAAA8nC,mBAAA,KAMA9nC,KAAAglC,WAAA,EAMAhlC,KAAAilC,mBAAA,EAMAjlC,KAAA+nC,mBAAA,EAMA/nC,KAAAgoC,yBAAA,UAEAjwC,IAAAgoC,GAAAwD,GACAvjC,KAAA6/B,mBAAAE,EAAmE,GACnE//B,KAAA4nC,MAAArE,GAEAvjC,KAAA8/B,eAAyF,EAAAC,GAmPzF,OA9OAjB,IAAA6I,EAAA33B,UAAA8uB,GACA6I,EAAArzC,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACAqzC,EAAArzC,UAAA2b,YAAA03B,EAOAA,EAAArzC,UAAA2zC,iBAAA,SAAAC,GACAloC,KAAAkyB,gBAGM3wB,GAAMvB,KAAAkyB,gBAAAgW,EAAAhJ,sBAFZl/B,KAAAkyB,gBAAAgW,EAAAhJ,qBAAApjC,QAIAkE,KAAA4nC,MAAA7xC,KAAAiK,KAAAkyB,gBAAAj6B,QACA+H,KAAAgW,WASA2xB,EAAArzC,UAAAysC,MAAA,WACA,WAAA4G,EAAA3nC,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,OAAA3+B,KAAA4nC,MAAA9rC,UAMA6rC,EAAArzC,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,OAAAA,EAA6B3P,GAAwBvxB,KAAAk4B,YAAApa,EAAAE,GACrDkjB,GAEAlhC,KAAAilC,mBAAAjlC,KAAAiW,gBACAjW,KAAAglC,UAAA9kC,KAAAsE,KAAiCm+B,GACjC3iC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OAAA,IACApyB,KAAAilC,kBAAAjlC,KAAAiW,eAEWitB,GACXljC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OACApyB,KAAAglC,WAAA,EAAAlnB,EAAAE,EAAAijB,EAAAC,KAMAyG,EAAArzC,UAAA6sC,WAAA,SAAArjB,EAAAE,GACA,OAAWwnB,GAAqBxlC,KAAAmoC,6BAAA,EAAAnoC,KAAA4nC,MAAA5nC,KAAAoyB,OAAAtU,EAAAE,IAQhC2pB,EAAArzC,UAAA4wC,QAAA,WACA,OAAW9C,GAAepiC,KAAAmoC,6BAAA,EAAAnoC,KAAA4nC,MAAA5nC,KAAAoyB,SAiB1BuV,EAAArzC,UAAA0qC,eAAA,SAAAsI,GACA,IAAApV,EASA,YARAn6B,IAAAuvC,EAEME,GADNtV,EAAAlyB,KAAAmoC,6BAAArsC,QAEA,EAAAkE,KAAA4nC,MAAA5nC,KAAAoyB,OAAAkV,GAEApV,EAAAlyB,KAAAkyB,gBAGWyR,GACXzR,EAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,SAMAuV,EAAArzC,UAAA8zC,QAAA,WACA,OAAApoC,KAAA4nC,OAMAD,EAAArzC,UAAA+zC,qBAAA,WACA,GAAAroC,KAAA6nC,4BAAA7nC,KAAAiW,cAAA,CACA,IAAAqyB,EAAuBlV,GAASpzB,KAAAk4B,aAChCl4B,KAAA8nC,mBAAgCrC,GAChCzlC,KAAAmoC,6BAAA,EAAAnoC,KAAA4nC,MAAA5nC,KAAAoyB,OACAkW,EAAA,GACAtoC,KAAA6nC,2BAAA7nC,KAAAiW,cAEA,OAAAjW,KAAA8nC,oBASAH,EAAArzC,UAAAi0C,iBAAA,WACA,WAAepD,GAAKnlC,KAAAqoC,uBAA8BjT,GAAcG,MAUhEoS,EAAArzC,UAAAk0C,mBAAA,WACA,OAAAxoC,KAAA4nC,MAAA3vC,QAaA0vC,EAAArzC,UAAAm0C,cAAA,SAAAllC,GACA,OAAAA,EAAA,GAAAvD,KAAA4nC,MAAA3vC,QAAAsL,EACA,KAEA,IAAeuhC,GAAU9kC,KAAAkyB,gBAAAp2B,MACzB,IAAAyH,EAAA,EAAAvD,KAAA4nC,MAAArkC,EAAA,GAAAvD,KAAA4nC,MAAArkC,IAAAvD,KAAA2+B,SAQAgJ,EAAArzC,UAAAo0C,eAAA,WAMA,IALA,IAAA/J,EAAA3+B,KAAA2+B,OACAzM,EAAAlyB,KAAAkyB,gBACAmQ,EAAAriC,KAAA4nC,MACAe,EAAA,GACAxW,EAAA,EACAn6B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAqCD,EAAA4Y,IAAQ5Y,EAAA,CAC7C,IAAA+qB,EAAAsf,EAAArqC,GACAkwC,EAAA,IAA2BpD,GAAU5S,EAAAp2B,MAAAq2B,EAAApP,GAAA4b,GACrCgK,EAAA5yC,KAAAmyC,GACA/V,EAAApP,EAEA,OAAA4lB,GAMAhB,EAAArzC,UAAA6zC,2BAAA,WACA,GAAAnoC,KAAA+nC,mBAAA/nC,KAAAiW,cAAA,CACA,IAAAic,EAAAlyB,KAAAkyB,gBACUmV,GACVnV,EAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,QACApyB,KAAAgoC,yBAAA9V,GAEAlyB,KAAAgoC,yBAAA9V,EAAAp2B,QACAkE,KAAAgoC,yBAAA/vC,OACYuvC,GACZxnC,KAAAgoC,yBAAA,EAAAhoC,KAAA4nC,MAAA5nC,KAAAoyB,SAEApyB,KAAA+nC,kBAAA/nC,KAAAiW,cAEA,OAAAjW,KAAAgoC,0BAMAL,EAAArzC,UAAAqrC,8BAAA,SAAAL,GACA,IAAA4E,EAAA,GACAO,EAAA,GAKA,OAJAP,EAAAjsC,OAAuC4sC,GACvC7kC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OACAlyB,KAAAsE,KAAA86B,GACA4E,EAAA,EAAAO,GACA,IAAAkD,EAAAzD,EAAkD9O,GAAcC,GAAAoP,IAOhEkD,EAAArzC,UAAAqtC,QAAA,WACA,OAAWjN,GAAYI,SAOvB6S,EAAArzC,UAAAstC,iBAAA,SAAA3Q,GACA,OAAW+V,GACXhnC,KAAAmoC,6BAAA,EAAAnoC,KAAA4nC,MAAA5nC,KAAAoyB,OAAAnB,IAUA0W,EAAArzC,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEA,IAAAmQ,EAAegB,GACfrjC,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,OAAApyB,KAAA4nC,OACA5nC,KAAAkyB,gBAAAj6B,OAAA,IAAAoqC,EAAApqC,OAAA,EAAAoqC,IAAApqC,OAAA,GACA+H,KAAAgW,WAGA2xB,EAtSW,CAuST/I,IAGagK,GAAA,GAiCR,SAAAC,GAAA5X,GACP,IAAA/vB,EAAA+vB,EAAA,GACA7vB,EAAA6vB,EAAA,GACA5vB,EAAA4vB,EAAA,GACA3vB,EAAA2vB,EAAA,GACAiB,EACA,CAAAhxB,EAAAE,EAAAF,EAAAI,EAAAD,EAAAC,EAAAD,EAAAD,EAAAF,EAAAE,GACA,WAAasmC,GAAOxV,EAAkBkD,GAAcC,GAAA,CAAAnD,EAAAj6B,SA0C7C,SAAA6wC,GAAAC,EAAA16B,EAAA4nB,EAAA+S,GAKP,IAJA,IAAA9W,EAAA6W,EAAA7J,qBACA9M,EAAA2W,EAAAnJ,YACAqJ,EAAA/W,EAAAj6B,OAAAm6B,EAAA,EACA8W,EAAAF,GAAA,EACAhxC,EAAA,EAAiBA,GAAAixC,IAAYjxC,EAAA,CAC7B,IAAAm6B,EAAAn6B,EAAAo6B,EACA/C,EAAA6Z,EAAoC,EAANxa,GAAM12B,EAAAixC,GAAA/oC,KAAAuuB,GAAAwa,EACpC/W,EAAAC,GAAA9jB,EAAA,GAAA4nB,EAAA/1B,KAAAqvB,IAAAF,GACA6C,EAAAC,EAAA,GAAA9jB,EAAA,GAAA4nB,EAAA/1B,KAAAuvB,IAAAJ,GAEA0Z,EAAA/yB,UCzPA,IAAAmzB,GAAA,EA6/BA,SAAAC,GAAAtxC,EAAAuxC,GACApkB,WAAA,WACAntB,EAAAuxC,IACG,GAgII,SAAAC,GAAAC,GACP,QAAAA,EAAAC,cAAAD,EAAAE,ejC5jCO,SAAeC,EAAAC,GAEtB,IADA,IAAA1mB,GAAA,EACAjrB,EAAA0xC,EAAAzxC,OAAA,EAAsCD,GAAA,IAAQA,EAC9C,GAAA0xC,EAAA1xC,IAAA2xC,EAAA3xC,GAAA,CACAirB,GAAA,EACA,MAGA,OAAAA,EiCqjCS2mB,CAAgBL,EAAAC,aAAAD,EAAAE,iBAIzBF,EAAAM,mBAAAN,EAAAO,kBAGAP,EAAAQ,iBAAAR,EAAAS,gBAMe,IAAAC,GAtlCP,SAAArzB,GACR,SAAAszB,EAAAryB,GACAjB,EAAApiB,KAAAwL,MAEA,IAAA1E,EAAkBgV,EAAM,GAAGuH,GAM3B7X,KAAAmqC,OAAA,MAMAnqC,KAAAoqC,YAAA,GAMApqC,KAAAqqC,oBAEArqC,KAAAsqC,kBAAAtqC,KAAAsqC,kBAAAhrC,KAAAU,MAOAA,KAAAuqC,YAAuBpO,GAAgB7gC,EAAAgT,WAAA,aAEvCtO,KAAAwqC,cAAAlvC,GA25BA,OAx5BAsb,IAAAszB,EAAAl6B,UAAA4G,GACAszB,EAAA51C,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACA41C,EAAA51C,UAAA2b,YAAAi6B,EAMAA,EAAA51C,UAAAk2C,cAAA,SAAAlvC,GAKA,IAAAmvC,EAAA,GACAA,EAAevb,SAAYn3B,IAAAuD,EAAA+S,OAC3B/S,EAAA+S,OAAA,KAEA,IAAAq8B,EAw6BO,SAAApvC,GACP,IAAAqvC,EACAC,EACAC,EAOAC,OAAA/yC,IAAAuD,EAAAwvC,QACAxvC,EAAAwvC,QAAA3B,GAEA4B,OAAAhzC,IAAAuD,EAAAyvC,QACAzvC,EAAAyvC,QAPA,GASAC,OAAAjzC,IAAAuD,EAAA0vC,WACA1vC,EAAA0vC,WATA,EAWA,QAAAjzC,IAAAuD,EAAA2vC,YAAA,CACA,IAAAA,EAAA3vC,EAAA2vC,YACAL,EAAAK,EAAAH,GACAD,OAAA9yC,IAAAkzC,EAAAF,GACAE,EAAAF,GAAAE,IAAAhzC,OAAA,GACA0yC,ECxsCO,SAAAM,GACP,gBAOAzX,EAAAzE,EAAAnM,GACA,QAAA7qB,IAAAy7B,EAAA,CACA,IAAA9lB,EAAgBiV,GAAiBsoB,EAAAzX,EAAA5Q,GACjClV,EAAYqgB,GAAKrgB,EAAAqhB,EAAA,EAAAkc,EAAAhzC,OAAA,GACjB,IAAAsL,EAAArD,KAAA4N,MAAAJ,GACA,GAAAA,GAAAnK,KAAA0nC,EAAAhzC,OAAA,GACA,IAAAizC,EAAAD,EAAA1nC,GAAA0nC,EAAA1nC,EAAA,GACA,OAAA0nC,EAAA1nC,GAAArD,KAAAiE,IAAA+mC,EAAAx9B,EAAAnK,GAEA,OAAA0nC,EAAA1nC,KDurC2B4nC,CAC3BF,OACG,CAEH,IAAA38B,EAAqB6tB,GAAgB7gC,EAAAgT,WAAA,aACrC2iB,EAAA3iB,EAAA4pB,YACAzE,EAAAxC,EAIA/wB,KAAAC,IAAe+yB,GAAQjC,GAAUkC,GAASlC,IAF1C,IAAY6F,GAAgBC,GAAKP,SACjCloB,EAAA8pB,mBAGAgT,EAAA3X,EAAsC3F,GAAiB5tB,KAAAiE,IA5BvD,EA6BAglC,IAEAkC,EAAAD,EAAAlrC,KAAAiE,IA/BA,EADA,GAiCAglC,SAIApxC,KADA6yC,EAAAtvC,EAAAsvC,eAEAE,EAAA,EAEAF,EAAAQ,EAAAlrC,KAAAiE,IAAA6mC,EAAAF,QAKA/yC,KADA8yC,EAAAvvC,EAAAuvC,iBAIAA,OAFA9yC,IAAAuD,EAAAyvC,aACAhzC,IAAAuD,EAAAsvC,cACAA,EAAA1qC,KAAAiE,IAAA6mC,EAAAD,GAEAK,EAAAlrC,KAAAiE,IAAA6mC,EAAAD,GAGAM,GAKAN,EAAAD,EAAA5qC,KAAA4N,MACA5N,KAAAgE,IAAA0mC,EAAAC,GAAA3qC,KAAAgE,IAAA8mC,IACAH,EAAAD,EAAA1qC,KAAAiE,IAAA6mC,EAAAD,EAAAD,GAEAH,ECptCO,SAAAO,EAAAN,EAAAU,GACP,gBAOA9X,EAAAzE,EAAAnM,GACA,QAAA7qB,IAAAy7B,EAAA,CACA,IAAArB,GAAAvP,EAAA,KACA2oB,EAAArrC,KAAA4N,MACA5N,KAAAgE,IAAA0mC,EAAApX,GAAAtzB,KAAAgE,IAAAgnC,GAAA/Y,GACAqZ,EAAAtrC,KAAAC,IAAAorC,EAAAxc,EAAA,GAIA,YAHAh3B,IAAAuzC,IACAE,EAAAtrC,KAAAuB,IAAA+pC,EAAAF,IAEAV,EAAA1qC,KAAAiE,IAAA+mC,EAAAM,KDmsC2BC,CAC3BT,EAAAJ,EAAAG,EAAAD,GAEA,OAAUY,WAAAf,EAAAC,gBACVC,gBAAAC,UAAAE,cAj/BAW,CAAArwC,GAMA0E,KAAA4rC,eAAAlB,EAAAE,cAMA5qC,KAAA6rC,eAAAnB,EAAAG,cAMA7qC,KAAA8rC,YAAApB,EAAAM,WAMAhrC,KAAA+rC,aAAAzwC,EAAA2vC,YAMAjrC,KAAAgsC,SAAAtB,EAAAI,QAEA,IAAAmB,EA03BO,SAAA3wC,GACP,YAAAvD,IAAAuD,EAAA21B,QrCpqCOA,EqCqqCgB31B,EAAA21B,OrCpqCvB,SAKA5iB,GACA,OAAAA,EACA,CACU0f,GAAK1f,EAAA,GAAA4iB,EAAA,GAAAA,EAAA,IACLlD,GAAK1f,EAAA,GAAA4iB,EAAA,GAAAA,EAAA,UAGf,IqC0pCWrC,GrCvqCJ,IAAAqC,EqCySPib,CAAA5wC,GACAqvC,EAAAD,EAAAgB,WACAS,EAu9BO,SAAA7wC,GAGP,QAFAvD,IAAAuD,EAAA8wC,gBACA9wC,EAAA8wC,eACA,CACA,IAAAC,EAAA/wC,EAAA+wC,kBACA,YAAAt0C,IAAAs0C,IAAA,IAAAA,GpCntCA3K,EAAA4K,GAAmC/d,GAAS,GAC5C,SAMAO,EAAAC,GACA,YAAAh3B,IAAA+2B,EACA5uB,KAAAie,IAAA2Q,EAAAC,IAAA2S,EACA,EAEA5S,EAAAC,OAGA,KoCssCK,IAAAsd,EACQrd,GACR,iBAAAqd,GpC/uCE9sC,EoCgvCmB8sC,EpC/uC1BE,EAAA,EAAArsC,KAAAuuB,GAAAlvB,EACA,SAMAuvB,EAAAC,GACA,YAAAh3B,IAAA+2B,EACAA,EAAA5uB,KAAA4N,OAAAghB,EAAAC,GAAAwd,EAAA,IAAAA,OAGA,IoCquCavd,GAGb,OAAWH,GpCrvCJ,IAAAtvB,EACPgtC,EAsBO,IAAAD,EACP5K,EoCuPA8K,CAAAlxC,GAMA0E,KAAAysC,aAAA,CACAp+B,OAAA49B,EACAzY,WAAAmX,EACA7b,SAAAqd,QAGAp0C,IAAAuD,EAAAk4B,WACAiX,EAAiBvb,IAAY5zB,EAAAk4B,gBACxBz7B,IAAAuD,EAAAiT,OACLk8B,EAAiBvb,IAAYlvB,KAAA0sC,oBAC7B1sC,KAAA4rC,eAAAtwC,EAAAiT,KAAAvO,KAAAgsC,UAEAhsC,KAAA+rC,eACAtB,EAAmBvb,IAA2BnB,GAC9CjI,OAAA9lB,KAAA2sC,iBAAAlC,EAAoDvb,KACpDlvB,KAAA6rC,eAAA7rC,KAAA4rC,kBAGAnB,EAAevb,SAAYn3B,IAAAuD,EAAAwzB,SAAAxzB,EAAAwzB,SAAA,EAC3B9uB,KAAA+W,cAAA0zB,GAMAzqC,KAAA4sC,SAAAtxC,GAYA4uC,EAAA51C,UAAAu4C,mBAAA,SAAAC,GACA,IAAAxxC,EAAkBgV,EAAM,GAAGtQ,KAAA4sC,UAe3B,YAZA70C,IAAAuD,EAAAk4B,WACAl4B,EAAAk4B,WAAAxzB,KAAA2sC,gBAEArxC,EAAAiT,KAAAvO,KAAA+sC,UAIAzxC,EAAA+S,OAAArO,KAAAgtC,YAGA1xC,EAAAwzB,SAAA9uB,KAAAitC,cAEW38B,EAAM,GAAGhV,EAAAwxC,IAoCpB5C,EAAA51C,UAAA44C,QAAA,SAAAC,GACA,IAGAr1C,EAHA2Y,EAAA/I,UAEA0lC,EAAA1lC,UAAAzP,OAMA,GAJAm1C,EAAA,sBAAA1lC,UAAA0lC,EAAA,KACAt1C,EAAA4P,UAAA0lC,EAAA,KACAA,IAEAptC,KAAAqtC,QAAA,CAEA,IAAAhgB,EAAA3lB,UAAA0lC,EAAA,GAaA,OAZA/f,EAAAhf,QACArO,KAAAstC,UAAAjgB,EAAAhf,aAEAtW,IAAAs1B,EAAA9e,MACAvO,KAAAutC,QAAAlgB,EAAA9e,WAEAxW,IAAAs1B,EAAAyB,UACA9uB,KAAAwtC,YAAAngB,EAAAyB,eAEAh3B,GACAsxC,GAAAtxC,GAAA,IASA,IALA,IAAAyuC,EAAAkH,KAAAC,MACAr/B,EAAArO,KAAAgtC,YAAAlxC,QACA03B,EAAAxzB,KAAA2sC,gBACA7d,EAAA9uB,KAAAitC,cACAU,EAAA,GACA31C,EAAA,EAAmBA,EAAAo1C,IAAoBp1C,EAAA,CACvC,IAAAsD,EAAgDmV,EAAAzY,GAEhDuxC,EAA2C,CAC3ChD,QACAqH,UAAA,EACAvN,OAAA/kC,EAAA+kC,OACAwN,cAAA91C,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IACAC,OAAAxyC,EAAAwyC,QAAkC7d,IAoBlC,GAjBA30B,EAAA+S,SACAk7B,EAAAC,aAAAn7B,EACAk7B,EAAAE,aAAAnuC,EAAA+S,OACAA,EAAAk7B,EAAAE,mBAGA1xC,IAAAuD,EAAAiT,MACAg7B,EAAAM,iBAAArW,EACA+V,EAAAO,iBAAA9pC,KAAA0sC,oBACA1sC,KAAA4rC,eAAAtwC,EAAAiT,KAAAvO,KAAAgsC,SAAA,GACAxY,EAAA+V,EAAAO,kBACOxuC,EAAAk4B,aACP+V,EAAAM,iBAAArW,EACA+V,EAAAO,iBAAAxuC,EAAAk4B,WACAA,EAAA+V,EAAAO,uBAGA/xC,IAAAuD,EAAAwzB,SAAA,CACAya,EAAAQ,eAAAjb,EACA,IAAAC,EAAoBL,GAAMpzB,EAAAwzB,WAAA5uB,KAAAuuB,GAAA,EAAAvuB,KAAAuuB,IAAAvuB,KAAAuuB,GAC1B8a,EAAAS,eAAAlb,EAAAC,EACAD,EAAAya,EAAAS,eAGAT,EAAAzxC,WAGAwxC,GAAAC,GACAA,EAAAqE,UAAA,EAGArH,GAAAgD,EAAAsE,SAEAF,EAAA53C,KAAAwzC,GAEAvpC,KAAAoqC,YAAAr0C,KAAA43C,GACA3tC,KAAA+tC,QAAiB9e,GAAQ,GACzBjvB,KAAAsqC,qBAQAJ,EAAA51C,UAAA05C,aAAA,WACA,OAAAhuC,KAAAmqC,OAAuBlb,IAAQ,GAQ/Bib,EAAA51C,UAAA25C,eAAA,WACA,OAAAjuC,KAAAmqC,OAAuBlb,IAAQ,GAO/Bib,EAAA51C,UAAA45C,iBAAA,WACAluC,KAAA+tC,QAAiB9e,IAAQjvB,KAAAmqC,OAAyBlb,KAClD,QAAAj3B,EAAA,EAAA4Y,EAAA5Q,KAAAoqC,YAAAnyC,OAAiDD,EAAA4Y,IAAQ5Y,EAAA,CACzD,IAAA21C,EAAA3tC,KAAAoqC,YAAApyC,GACA21C,EAAA,GAAA71C,UACAsxC,GAAAuE,EAAA,GAAA71C,UAAA,GAGAkI,KAAAoqC,YAAAnyC,OAAA,GAMAiyC,EAAA51C,UAAAg2C,kBAAA,WAKA,QAJAvyC,IAAAiI,KAAAqqC,sBACA8D,qBAAAnuC,KAAAqqC,qBACArqC,KAAAqqC,yBAAAtyC,GAEAiI,KAAAguC,eAAA,CAKA,IAFA,IAAAN,EAAAD,KAAAC,MACAU,GAAA,EACAp2C,EAAAgI,KAAAoqC,YAAAnyC,OAAA,EAA6CD,GAAA,IAAQA,EAAA,CAGrD,IAFA,IAAA21C,EAAA3tC,KAAAoqC,YAAApyC,GACAq2C,GAAA,EACA7yC,EAAA,EAAAgoC,EAAAmK,EAAA11C,OAAyCuD,EAAAgoC,IAAQhoC,EAAA,CACjD,IAAA+tC,EAAAoE,EAAAnyC,GACA,IAAA+tC,EAAAqE,SAAA,CAGA,IAAAU,EAAAZ,EAAAnE,EAAAhD,MACAgI,EAAAhF,EAAAsE,SAAA,EAAAS,EAAA/E,EAAAsE,SAAA,EACAU,GAAA,GACAhF,EAAAqE,UAAA,EACAW,EAAA,GAEAF,GAAA,EAEA,IAAAG,EAAAjF,EAAAuE,OAAAS,GACA,GAAAhF,EAAAC,aAAA,CACA,IAAAxV,EAAAuV,EAAAC,aAAA,GACAtV,EAAAqV,EAAAC,aAAA,GAGA1rB,EAAAkW,EAAAwa,GAFAjF,EAAAE,aAAA,GAEAzV,GACAhW,EAAAkW,EAAAsa,GAFAjF,EAAAE,aAAA,GAEAvV,GACAl0B,KAAAxJ,IAAmB04B,GAAY,CAAApR,EAAAE,IAE/B,GAAAurB,EAAAM,kBAAAN,EAAAO,iBAAA,CACA,IAAAtW,EAAA,IAAAgb,EACAjF,EAAAO,iBACAP,EAAAM,iBAAA2E,GAAAjF,EAAAO,iBAAAP,EAAAM,kBACAN,EAAAlJ,QACArgC,KAAAxJ,IAAqB04B,GACrBlvB,KAAAyuC,oBAAAjb,EAAA+V,EAAAlJ,SAEArgC,KAAAxJ,IAAmB04B,GAAYsE,GAE/B,QAAAz7B,IAAAwxC,EAAAQ,qBAAAhyC,IAAAwxC,EAAAS,eAAA,CACA,IAAAlb,EAAA,IAAA0f,EACY9f,GAAM6a,EAAAS,eAAA9pC,KAAAuuB,GAAA,EAAAvuB,KAAAuuB,IAAAvuB,KAAAuuB,GAClB8a,EAAAQ,eAAAyE,GAAAjF,EAAAS,eAAAT,EAAAQ,gBACAR,EAAAlJ,QACArgC,KAAAxJ,IAAqB04B,GACrBlvB,KAAA0uC,sBAAA5f,EAAAya,EAAAlJ,SAEArgC,KAAAxJ,IAAmB04B,GAAYJ,GAG/B,GADAsf,GAAA,GACA7E,EAAAqE,SACA,OAGA,GAAAS,EAAA,CACAruC,KAAAoqC,YAAApyC,GAAA,KACAgI,KAAA+tC,QAAqB9e,IAAQ,GAC7B,IAAAn3B,EAAA61C,EAAA,GAAA71C,SACAA,GACAsxC,GAAAtxC,GAAA,IAKAkI,KAAAoqC,YAAApqC,KAAAoqC,YAAAr+B,OAAAC,SACAoiC,QAAAr2C,IAAAiI,KAAAqqC,sBACArqC,KAAAqqC,oBAAAsE,sBAAA3uC,KAAAsqC,sBASAJ,EAAA51C,UAAAo6C,sBAAA,SAAA5f,EAAAuR,GACA,IAAAhyB,EACAugC,EAAA5uC,KAAAgtC,YAMA,YALAj1C,IAAA62C,IAEMxf,GADN/gB,EAAA,CAAAugC,EAAA,GAAAvO,EAAA,GAAAuO,EAAA,GAAAvO,EAAA,IACsBvR,EAAA9uB,KAAAitC,eAChB9d,GAAa9gB,EAAAgyB,IAEnBhyB,GAQA67B,EAAA51C,UAAAm6C,oBAAA,SAAAjb,EAAA6M,GACA,IAAAhyB,EACAugC,EAAA5uC,KAAAgtC,YACA6B,EAAA7uC,KAAA2sC,qBACA50C,IAAA62C,QAAA72C,IAAA82C,IAGAxgC,EAAA,CAFAgyB,EAAA,GAAA7M,GAAA6M,EAAA,GAAAuO,EAAA,IAAAC,EACAxO,EAAA,GAAA7M,GAAA6M,EAAA,GAAAuO,EAAA,IAAAC,IAGA,OAAAxgC,GAOA67B,EAAA51C,UAAAw6C,qBAAA,WACA,IAAArb,EAAA,UACAsb,EAAA,2BAAgDv/B,EAAMxP,MAAA,KACtDyX,EAAA7c,SAAAkN,cAAAinC,GACA,GAAAt3B,EAAA,CACA,IAAAu3B,EAAAC,iBAAAx3B,GACAgc,EAAA,GAAAyb,SAAAF,EAAA7sB,MAAA,IACAsR,EAAA,GAAAyb,SAAAF,EAAAhtC,OAAA,IAEA,OAAAyxB,GASAyW,EAAA51C,UAAA66C,gBAAA,SAAA9gC,GACA,OAAArO,KAAAysC,aAAAp+B,WAWA67B,EAAA51C,UAAAo4C,oBAAA,SAAAlZ,EAAA4b,EAAAC,GACA,IAAAtgB,EAAAqgB,GAAA,EACAxsB,EAAAysB,GAAA,EACA,OAAArvC,KAAAysC,aAAAjZ,aAAAzE,EAAAnM,IAUAsnB,EAAA51C,UAAA+3C,kBAAA,SAAAvd,EAAAsgB,GACA,IAAArgB,EAAAqgB,GAAA,EACA,OAAApvC,KAAAysC,aAAA3d,WAAAC,IASAmb,EAAA51C,UAAA04C,UAAA,WACA,OACgEhtC,KAAAzJ,IAAc24B,KAO9Egb,EAAA51C,UAAAg7C,eAAA,WACA,OAAAtvC,KAAAysC,cAOAvC,EAAA51C,UAAAi7C,SAAA,SAAAC,GACA,YAAAz3C,IAAAy3C,GACAA,EAAA,GAAAxvC,KAAAmqC,OAAA,GACAqF,EAAA,GAAAxvC,KAAAmqC,OAAA,GACAqF,GAEAxvC,KAAAmqC,OAAAruC,SAcAouC,EAAA51C,UAAAm7C,gBAAA,SAAAC,GACA,IAAAjc,EAAAic,GAAA1vC,KAAA8uC,uBACAzgC,EAAkErO,KAAAgtC,YAC9DziB,GAAMlc,EAAA,GACV,IAAAmlB,EAAwCxzB,KAAA2sC,gBACpCpiB,QAAMxyB,IAAAy7B,EAAA,GACV,IAAA1E,EAAsC9uB,KAAAitC,cAGtC,OAFI1iB,QAAMxyB,IAAA+2B,EAAA,GAECyE,GAAiBllB,EAAAmlB,EAAA1E,EAAA2E,IAQ5ByW,EAAA51C,UAAAq7C,iBAAA,WACA,OAAA3vC,KAAA4rC,gBAQA1B,EAAA51C,UAAAs7C,iBAAA,WACA,OAAA5vC,KAAA6rC,gBAQA3B,EAAA51C,UAAAu7C,WAAA,WACA,OAA6B7vC,KAAA8vC,qBAAA9vC,KAAA6rC,iBAQ7B3B,EAAA51C,UAAAy7C,WAAA,SAAAxhC,GACAvO,KAAAwqC,cAAAxqC,KAAA6sC,mBAAA,CAAgD9B,QAAAx8B,MAQhD27B,EAAA51C,UAAA07C,WAAA,WACA,OAA6BhwC,KAAA8vC,qBAAA9vC,KAAA4rC,iBAQ7B1B,EAAA51C,UAAA27C,WAAA,SAAA1hC,GACAvO,KAAAwqC,cAAAxqC,KAAA6sC,mBAAA,CAAgD/B,QAAAv8B,MAQhD27B,EAAA51C,UAAA47C,cAAA,WACA,OAAAlwC,KAAAuqC,aASAL,EAAA51C,UAAAq4C,cAAA,WACA,OAAuC3sC,KAAAzJ,IAAc24B,KASrDgb,EAAA51C,UAAA67C,eAAA,WACA,OAAAnwC,KAAA+rC,cAWA7B,EAAA51C,UAAA87C,uBAAA,SAAAnf,EAAAye,GACA,IAAAjc,EAAAic,GAAA1vC,KAAA8uC,uBACAuB,EAAsBnd,GAAQjC,GAAAwC,EAAA,GAC9B6c,EAAsBnd,GAASlC,GAAAwC,EAAA,GAC/B,OAAAvzB,KAAAC,IAAAkwC,EAAAC,IASApG,EAAA51C,UAAAi8C,8BAAA,SAAAC,GACA,IAAAtF,EAAAsF,GAAA,EACA5F,EAAA5qC,KAAA4rC,eACAf,EAAA7qC,KAAA6rC,eACA1rC,EAAAD,KAAAgE,IAAA0mC,EAAAC,GAAA3qC,KAAAgE,IAAAgnC,GACA,gBAKAz0C,GAEA,OADAm0C,EAAA1qC,KAAAiE,IAAA+mC,EAAAz0C,EAAA0J,KAWA+pC,EAAA51C,UAAA24C,YAAA,WACA,OAA6BjtC,KAAAzJ,IAAc24B,KAS3Cgb,EAAA51C,UAAAm8C,8BAAA,SAAAD,GACA,IAAAtF,EAAAsF,GAAA,EACA5F,EAAA5qC,KAAA4rC,eACAf,EAAA7qC,KAAA6rC,eACA1rC,EAAAD,KAAAgE,IAAA0mC,EAAAC,GAAA3qC,KAAAgE,IAAAgnC,GACA,gBAKA1X,GAEA,OADAtzB,KAAAgE,IAAA0mC,EAAApX,GAAAtzB,KAAAgE,IAAAgnC,GAAA/qC,IASA+pC,EAAA51C,UAAAg5B,SAAA,SAAAojB,GACA,IAAAriC,EAAiErO,KAAAgtC,YACjE1+B,EAAAtO,KAAAkwC,gBACA1c,EAAuCxzB,KAAA2sC,gBACvCgE,EAAAnd,EAAAkd,EACA5hB,EAAA9uB,KAAAitC,cACA,OAEA5+B,OAAA,CACAnO,KAAAykC,MAAAt2B,EAAA,GAAAsiC,KACAzwC,KAAAykC,MAAAt2B,EAAA,GAAAsiC,MAEAriC,gBAAAvW,IAAAuW,IAAA,KACAklB,aACA1E,WACAvgB,KAAAvO,KAAA+sC,YAYA7C,EAAA51C,UAAAy4C,QAAA,WACA,IAAAx+B,EACAilB,EAAAxzB,KAAA2sC,gBAIA,YAHA50C,IAAAy7B,IACAjlB,EAAAvO,KAAA8vC,qBAAAtc,IAEAjlB,GASA27B,EAAA51C,UAAAw7C,qBAAA,SAAAtc,GACA,IACArzB,EAAA6qC,EADA7Y,EAAAnyB,KAAAgsC,UAAA,EAEA,GAAAhsC,KAAA+rC,aAAA,CACA,IAAA6E,EAAoBjuB,GAAiB3iB,KAAA+rC,aAAAvY,EAAA,GACrCrB,EAAAye,EACAzwC,EAAAH,KAAA+rC,aAAA6E,GAEA5F,EADA4F,GAAA5wC,KAAA+rC,aAAA9zC,OAAA,EACA,EAEAkI,EAAAH,KAAA+rC,aAAA6E,EAAA,QAGAzwC,EAAAH,KAAA4rC,eACAZ,EAAAhrC,KAAA8rC,YAEA,OAAA3Z,EAAAjyB,KAAAgE,IAAA/D,EAAAqzB,GAAAtzB,KAAAgE,IAAA8mC,IASAd,EAAA51C,UAAAu8C,qBAAA,SAAAtiC,GACA,OAA6BvO,KAAA0sC,oBAC7B1sC,KAAA4rC,eAAAr9B,EAAAvO,KAAAgsC,SAAA,IAaA9B,EAAA51C,UAAAw8C,IAAA,SAAAC,EAAAl5B,GACA,IAMAm5B,EANA11C,EAAAuc,GAAA,GACA4b,EAAAn4B,EAAAm4B,KACAA,IACAA,EAAAzzB,KAAA8uC,wBAIIvkB,GAAMpU,MAAAC,QAAA26B,IAAwD,qBAAA1R,sBAClE,IACAlpB,MAAAC,QAAA26B,IACMxmB,IAAQ0I,GAAO8d,GACrB,IACAC,EAAiBnI,GAAiBkI,IAC7BA,EAAApP,YAAyCjN,GAAYS,QAE1D6b,EAAiBnI,GADjBkI,IAAA7Y,cAEAkI,OAAApgC,KAAAitC,cAA0C7Z,GAAS2d,IAEnDC,EAAAD,EAGA,IAIAlG,EAJAoG,OAAAl5C,IAAAuD,EAAA21C,QAAA31C,EAAA21C,QAAA,UACAvE,OAAA30C,IAAAuD,EAAAoxC,qBACApxC,EAAAoxC,oBACAkE,OAAA74C,IAAAuD,EAAAs1C,SAAAt1C,EAAAs1C,QAGA/F,OADA9yC,IAAAuD,EAAAuvC,cACAvvC,EAAAuvC,mBACK9yC,IAAAuD,EAAAyvC,QACL/qC,KAAA0sC,oBACA1sC,KAAA4rC,eAAAtwC,EAAAyvC,QAAA/qC,KAAAgsC,SAAA,GAEA,EAaA,IAXA,IAAAkF,EAAAF,EAAA9R,qBAGApQ,EAAA9uB,KAAAitC,cACA3d,EAAApvB,KAAAqvB,KAAAT,GACAU,EAAAtvB,KAAAuvB,KAAAX,GACAqiB,EAAAhwC,IACAiwC,EAAAjwC,IACAkwC,GAAAlwC,IACAmwC,GAAAnwC,IACAixB,EAAA4e,EAAApR,YACA5nC,EAAA,EAAA4Y,EAAAsgC,EAAAj5C,OAAuCD,EAAA4Y,EAAQ5Y,GAAAo6B,EAAA,CAC/C,IAAAmf,EAAAL,EAAAl5C,GAAAs3B,EAAA4hB,EAAAl5C,EAAA,GAAAw3B,EACAgiB,EAAAN,EAAAl5C,GAAAw3B,EAAA0hB,EAAAl5C,EAAA,GAAAs3B,EACA6hB,EAAAjxC,KAAAuB,IAAA0vC,EAAAI,GACAH,EAAAlxC,KAAAuB,IAAA2vC,EAAAI,GACAH,EAAAnxC,KAAAC,IAAAkxC,EAAAE,GACAD,EAAApxC,KAAAC,IAAAmxC,EAAAE,GAIA,IAAAhe,EAAAxzB,KAAAowC,uBACA,CAAAe,EAAAC,EAAAC,EAAAC,GACA,CAAA7d,EAAA,GAAAwd,EAAA,GAAAA,EAAA,GAAAxd,EAAA,GAAAwd,EAAA,GAAAA,EAAA,KAGA,GAFAzd,EAAAyS,MAAAzS,GAAAqX,EACA3qC,KAAAC,IAAAqzB,EAAAqX,GACA6B,EAAA,CACA,IAAA+E,EAAAzxC,KAAA0sC,oBAAAlZ,EAAA,MACAod,GAAAa,EAAAje,IACAie,EAAAzxC,KAAA0sC,oBACA+E,GAAA,MAEAje,EAAAie,EAIAjiB,KACA,IAAAkiB,GAAAP,EAAAE,GAAA,EACAM,GAAAP,EAAAE,GAAA,EAKAjjC,EAAA,EAJAqjC,IAAAT,EAAA,GAAAA,EAAA,MAAAzd,GAEAlE,GADAqiB,IAAAV,EAAA,GAAAA,EAAA,MAAAzd,GACAhE,EACAmiB,EAAAriB,EAAAoiB,EAAAliB,GAEA13B,EAAAwD,EAAAxD,SAAAwD,EAAAxD,SAAyDmb,OAEzDlb,IAAAuD,EAAAuyC,SACA7tC,KAAAktC,QAAA,CACA1Z,aACAnlB,SACAw/B,SAAAvyC,EAAAuyC,SACAC,OAAAxyC,EAAAwyC,QACOh2C,IAEPkI,KAAA4xC,cAAApe,GACAxzB,KAAAstC,UAAAj/B,GACA+6B,GAAAtxC,GAAA,KAWAoyC,EAAA51C,UAAAu9C,SAAA,SAAAt4B,EAAAka,EAAAqe,GAEA,IAAAhjB,EAAA9uB,KAAAitC,cACA3d,EAAApvB,KAAAqvB,KAAAT,GACAU,EAAAtvB,KAAAuvB,KAAAX,GACAyiB,EAAAh4B,EAAA,GAAA+V,EAAA/V,EAAA,GAAAiW,EACAgiB,EAAAj4B,EAAA,GAAA+V,EAAA/V,EAAA,GAAAiW,EACAgE,EAAAxzB,KAAA2sC,gBAMAoF,GALAR,IAAA9d,EAAA,KAAAqe,EAAA,IAAAte,GAKAlE,GAJAkiB,IAAAM,EAAA,GAAAre,EAAA,MAAAD,IAGAhE,MAEAwiB,EAAAR,EAAAliB,EAAAiiB,EAAA/hB,EAEAxvB,KAAAstC,UAAA,CAAAyE,EAAAC,KAMA9H,EAAA51C,UAAA+4C,MAAA,WACA,QAAArtC,KAAAgtC,kBAAAj1C,IAAAiI,KAAA2sC,iBASAzC,EAAA51C,UAAA8rC,OAAA,SAAAtR,EAAA4R,GACA,QAAA3oC,IAAA2oC,EAAA,CACA,IAAAryB,EAAArO,KAAA0uC,sBAAA5f,EAAA4R,GACA1gC,KAAAstC,UAAAj/B,GAEArO,KAAAwtC,YAAA1e,IASAob,EAAA51C,UAAAg5C,UAAA,SAAAj/B,GACArO,KAAAxJ,IAAa04B,GAAY7gB,GACzBrO,KAAAguC,gBACAhuC,KAAAkuC,oBASAhE,EAAA51C,UAAAy5C,QAAA,SAAAkE,EAAAljB,GAGA,OAFA/uB,KAAAmqC,OAAA8H,IAAAljB,EACA/uB,KAAAgW,UACAhW,KAAAmqC,OAAA8H,IASA/H,EAAA51C,UAAAs9C,cAAA,SAAApe,GACAxzB,KAAAxJ,IAAa04B,GAAYsE,GACzBxzB,KAAAguC,gBACAhuC,KAAAkuC,oBAUAhE,EAAA51C,UAAAk5C,YAAA,SAAA1e,GACA9uB,KAAAxJ,IAAa04B,GAAYJ,GACzB9uB,KAAAguC,gBACAhuC,KAAAkuC,oBASAhE,EAAA51C,UAAAi5C,QAAA,SAAAh/B,GACAvO,KAAA4xC,cAAA5xC,KAAA6wC,qBAAAtiC,KAGA27B,EA57BQ,CA67BNvzB,GErpCK,SAAAu7B,GAAAC,EAAAC,GACP,IAAAC,EAA4Cz3C,SAAAC,cAAA,UAO5C,OANAs3C,IACAE,EAAAlwB,MAAAgwB,GAEAC,IACAC,EAAArwC,OAAAowC,GAE6CC,EAAA/3B,WAAA,MAWtC,SAASg4B,GAAU76B,GAC1B,IAAA0K,EAAA1K,EAAA86B,YACArpC,EAAA+lC,iBAAAx3B,GAGA,OAFA0K,GAAA+sB,SAAAhmC,EAAAspC,WAAA,IAAAtD,SAAAhmC,EAAAupC,YAAA,IAaO,SAASC,GAAWj7B,GAC3B,IAAAzV,EAAAyV,EAAAk7B,aACAzpC,EAAA+lC,iBAAAx3B,GAGA,OAFAzV,GAAAktC,SAAAhmC,EAAA0pC,UAAA,IAAA1D,SAAAhmC,EAAA2pC,aAAA,IASO,SAAAC,GAAAvtC,EAAAwtC,GACP,IAAA12C,EAAA02C,EAAAppC,WACAtN,GACAA,EAAA22C,aAAAztC,EAAAwtC,GAQO,SAAAE,GAAAryC,GACP,OAAAA,KAAA+I,WAAA/I,EAAA+I,WAAAC,YAAAhJ,GAAA,KAMO,SAAAsyC,GAAAtyC,GACP,KAAAA,EAAAuyC,WACAvyC,EAAAgJ,YAAAhJ,EAAAuyC,WCvEe,IAAAC,GAAA,CACfC,QAAA,UACAC,QAAA,UACAla,OAAA,SACAma,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAC,OAAA,UC0PeC,GAnOF,SAAA/8B,GACb,SAAAg9B,EAAAt4C,GAEAsb,EAAApiB,KAAAwL,MAKA,IAAAyqC,EAAqBn6B,EAAM,GAAGhV,GAC9BmvC,EAAe2I,GAAaC,cAC5Bt7C,IAAAuD,EAAAu4C,QAAAv4C,EAAAu4C,QAAA,EACApJ,EAAe2I,GAAaE,cAC5Bv7C,IAAAuD,EAAAw4C,SAAAx4C,EAAAw4C,QACArJ,EAAe2I,GAAaG,SAAAj4C,EAAAy4C,OAC5BtJ,EAAe2I,GAAaI,qBAC5Bz7C,IAAAuD,EAAAsvC,cAAAtvC,EAAAsvC,cAAAzpC,IACAspC,EAAe2I,GAAaK,qBAC5B17C,IAAAuD,EAAAuvC,cAAAvvC,EAAAuvC,cAAA,EAEA7qC,KAAA+W,cAAA0zB,GAMAzqC,KAAAg0C,OAAA,KAOAh0C,KAAA7D,KA+LA,OA3LAya,IAAAg9B,EAAA5jC,UAAA4G,GACAg9B,EAAAt/C,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACAs/C,EAAAt/C,UAAA2b,YAAA2jC,EAMAA,EAAAt/C,UAAAqtC,QAAA,WACA,OAAA3hC,KAAA7D,MAMAy3C,EAAAt/C,UAAA2/C,cAAA,WAEA,IAAA5mB,EAAArtB,KAAAg0C,QAA4C,CAC5CE,MAAAl0C,KACAm0C,SAAA,GAWA,OATA9mB,EAAAwmB,QAAoB9lB,GAAK/tB,KAAAo0C,aAAA,KACzB/mB,EAAAgnB,YAAAr0C,KAAAs0C,iBACAjnB,EAAAymB,QAAA9zC,KAAAu0C,aACAlnB,EAAA4D,OAAAjxB,KAAAk4B,YACA7K,EAAA0mB,OAAA/zC,KAAAw0C,aAAA,EACAnnB,EAAAud,cAAA5qC,KAAA2vC,mBACAtiB,EAAAwd,cAAA3qC,KAAAC,IAAAH,KAAA4vC,mBAAA,GACA5vC,KAAAg0C,OAAA3mB,EAEAA,GASAumB,EAAAt/C,UAAAmgD,eAAA,SAAA78B,GACA,OAAWtI,KASXskC,EAAAt/C,UAAAogD,oBAAA,SAAAC,GACA,OAAWrlC,KAUXskC,EAAAt/C,UAAA4jC,UAAA,WACA,OACyDl4B,KAAAzJ,IAAc68C,GAAaha,SAUpFwa,EAAAt/C,UAAAq7C,iBAAA,WACA,OAA6B3vC,KAAAzJ,IAAc68C,GAAaI,iBASxDI,EAAAt/C,UAAAs7C,iBAAA,WACA,OAA6B5vC,KAAAzJ,IAAc68C,GAAaK,iBASxDG,EAAAt/C,UAAA8/C,WAAA,WACA,OAA6Bp0C,KAAAzJ,IAAc68C,GAAaC,UAOxDO,EAAAt/C,UAAAggD,eAAA,WACA,OAAWhlC,KASXskC,EAAAt/C,UAAAigD,WAAA,WACA,OAA8Bv0C,KAAAzJ,IAAc68C,GAAaE,UAUzDM,EAAAt/C,UAAAkgD,UAAA,WACA,OAA6Bx0C,KAAAzJ,IAAc68C,GAAaG,UAUxDK,EAAAt/C,UAAAskC,UAAA,SAAA3H,GACAjxB,KAAAxJ,IAAa48C,GAAaha,OAAAnI,IAS1B2iB,EAAAt/C,UAAAsgD,iBAAA,SAAAhK,GACA5qC,KAAAxJ,IAAa48C,GAAaI,eAAA5I,IAS1BgJ,EAAAt/C,UAAAugD,iBAAA,SAAAhK,GACA7qC,KAAAxJ,IAAa48C,GAAaK,eAAA5I,IAS1B+I,EAAAt/C,UAAAwgD,WAAA,SAAAjB,GACA7zC,KAAAxJ,IAAa48C,GAAaC,QAAAQ,IAS1BD,EAAAt/C,UAAAygD,WAAA,SAAAjB,GACA9zC,KAAAxJ,IAAa48C,GAAaE,QAAAQ,IAU1BF,EAAAt/C,UAAA0gD,UAAA,SAAAC,GACAj1C,KAAAxJ,IAAa48C,GAAaG,QAAA0B,IAG1BrB,EA/Na,CAgOXj9B,GC7Pau+B,GAAA,CACfC,UAAA,YACAhrB,QAAA,UACAirB,MAAA,QACAvgC,MAAA,SC2BIwgC,GAAQ,CACZxmC,OAAA,UAyMeymC,GA7LD,SAAA1B,GACd,SAAA2B,EAAA19B,GAEA,IAAAvc,EAAAuc,GAAA,GACA29B,EAA8CllC,EAAM,GAAGhV,UACvDk6C,EAAAC,OAEA,IAAAA,EAAAn6C,EAAAm6C,OAEA7B,EAAAp/C,KAAAwL,KAAAw1C,GAMAx1C,KAAA01C,oBAAA,GAMA11C,KAAA21C,cAAA,GAEIzjC,EAAMlS,KACJ0W,EAAmB2+B,GAAQxmC,QACjC7O,KAAA41C,qBAAA51C,MAEAy1C,EACAt/B,MAAAC,QAAAq/B,GACAA,EAAA,IAAqB/9B,EAAU+9B,EAAA35C,QAAA,CAAkBic,QAAA,IAEzCwS,GAA2B,qBAAAjS,SACnC,IAGAm9B,EAAA,IAAmB/9B,OAAU3f,EAAA,CAAaggB,QAAA,IAG1C/X,KAAA61C,UAAAJ,GAmJA,OA/IA7B,IAAA2B,EAAAvlC,UAAA4jC,GACA2B,EAAAjhD,UAAAD,OAAA+K,OAAAw0C,KAAAt/C,WACAihD,EAAAjhD,UAAA2b,YAAAslC,EAKAA,EAAAjhD,UAAAwhD,mBAAA,WACA91C,KAAAgW,WAMAu/B,EAAAjhD,UAAAshD,qBAAA,WACA51C,KAAA01C,oBAAA/3C,QAAqC4U,GACrCvS,KAAA01C,oBAAAz9C,OAAA,EAEA,IAAAw9C,EAAAz1C,KAAA+1C,YAMA,QAAAz8C,KALA0G,KAAA01C,oBAAA3/C,KACMmc,EAAMujC,EAASvlC,EAAmBC,IAAAnQ,KAAAg2C,iBAAAh2C,MAClCkS,EAAMujC,EAASvlC,EAAmBE,OAAApQ,KAAAi2C,oBAAAj2C,OAGxCA,KAAA21C,cACA31C,KAAA21C,cAAAr8C,GAAAqE,QAAqC4U,GAEjC1B,EAAK7Q,KAAA21C,eAGT,IADA,IAAAO,EAAAT,EAAAn9B,WACAtgB,EAAA,EAAA4Y,EAAAslC,EAAAj+C,OAA4CD,EAAA4Y,EAAQ5Y,IAAA,CACpD,IAAAk8C,EAAAgC,EAAAl+C,GACAgI,KAAA21C,cAAyBnmC,EAAM0kC,IAAA,CACvBhiC,EAAMgiC,EAAQ7jC,EAAerQ,KAAA81C,mBAAA91C,MAC7BkS,EAAMgiC,EAAQ9/B,EAASC,OAAArU,KAAA81C,mBAAA91C,OAI/BA,KAAAgW,WAOAu/B,EAAAjhD,UAAA0hD,iBAAA,SAAAG,GACA,IAAAjC,EAAuDiC,EAAA,QACvDn2C,KAAA21C,cAAuBnmC,EAAM0kC,IAAA,CACvBhiC,EAAMgiC,EAAQ7jC,EAAerQ,KAAA81C,mBAAA91C,MAC7BkS,EAAMgiC,EAAQ9/B,EAASC,OAAArU,KAAA81C,mBAAA91C,OAE7BA,KAAAgW,WAOAu/B,EAAAjhD,UAAA2hD,oBAAA,SAAAE,GACA,IACA92C,EAAcmQ,EADyC2mC,EAAA,SAEvDn2C,KAAA21C,cAAAt2C,GAAA1B,QAAoC4U,UACpCvS,KAAA21C,cAAAt2C,GACAW,KAAAgW,WAWAu/B,EAAAjhD,UAAAyhD,UAAA,WACA,OACkF/1C,KAAAzJ,IAAc8+C,GAAQxmC,SAYxG0mC,EAAAjhD,UAAAuhD,UAAA,SAAAJ,GACAz1C,KAAAxJ,IAAa6+C,GAAQxmC,OAAA4mC,IAMrBF,EAAAjhD,UAAAmgD,eAAA,SAAA78B,GACA,IAAAS,OAAAtgB,IAAA6f,IAAA,GAIA,OAHA5X,KAAA+1C,YAAAp4C,QAAA,SAAAu2C,GACAA,EAAAO,eAAAp8B,KAEAA,GAMAk9B,EAAAjhD,UAAAogD,oBAAA,SAAAC,GACA,IAAAyB,OAAAr+C,IAAA48C,IAAA,GAEA0B,EAAAD,EAAAn+C,OAEA+H,KAAA+1C,YAAAp4C,QAAA,SAAAu2C,GACAA,EAAAQ,oBAAA0B,KAIA,IADA,IAAAE,EAAAt2C,KAAAi0C,gBACAj8C,EAAAq+C,EAAAzlC,EAAAwlC,EAAAn+C,OAAyCD,EAAA4Y,EAAQ5Y,IAAA,CACjD,IAAAu+C,EAAAH,EAAAp+C,GACAu+C,EAAA1C,SAAAyC,EAAAzC,QACA0C,EAAAzC,QAAAyC,EAAAzC,SAAAwC,EAAAxC,QACAyC,EAAA3L,cAAA1qC,KAAAuB,IACA80C,EAAA3L,cAAA0L,EAAA1L,eACA2L,EAAA1L,cAAA3qC,KAAAC,IACAo2C,EAAA1L,cAAAyL,EAAAzL,oBACA9yC,IAAAu+C,EAAArlB,cACAl5B,IAAAw+C,EAAAtlB,OACAslB,EAAAtlB,OAA8BmD,GAAemiB,EAAAtlB,OAAAqlB,EAAArlB,QAE7CslB,EAAAtlB,OAAAqlB,EAAArlB,QAKA,OAAAmlB,GAMAb,EAAAjhD,UAAAggD,eAAA,WACA,OAAWY,GAAWE,OAGtBG,EAzLc,CA0LZ5B,IC7KK,SAAA6C,GAAA/iB,EAAAic,GACP,OAAAv5B,MAAAC,QAAAqd,GACAA,QAEA17B,IAAA23C,EACAA,EAAA,CAAAjc,KAEAic,EAAA,GAAAA,EAAA,GAAoD,EAEpDA,GCq0Ce,IAAA+G,GAlwCC,SAAA7/B,GAChB,SAAA8/B,EAAAp7C,GAEAsb,EAAApiB,KAAAwL,MAEA,IAAA22C,EAurCA,SAAAr7C,GAKA,IAAAs7C,EAAA,UACA7+C,IAAAuD,EAAAs7C,sBACAA,EAAA,iBAAAt7C,EAAAs7C,oBACAh8C,SAAAi8C,eAAAv7C,EAAAs7C,qBACAt7C,EAAAs7C,qBAMA,IAWAE,EAWAC,EAWAC,EAjCAjmC,EAAA,GAEAkmC,EAAA37C,EAAAm6C,QAAyD,mBAAAn6C,EAAA,OAAAy6C,UAC/Bz6C,EAAA,WAA2Bg6C,GAAU,CAAEG,OAA8Bn6C,EAAA,SAC/FyV,EAAS4Y,GAAWC,YAAAqtB,EAEpBlmC,EAAS4Y,GAAWG,QAAAxuB,EAAAsM,OAEpBmJ,EAAS4Y,GAAWI,WAAAhyB,IAAAuD,EAAAomB,KACpBpmB,EAAAomB,KAAA,IAAuBuoB,QAGvBlyC,IAAAuD,EAAAw7C,WACA3gC,MAAAC,QAAA9a,EAAAw7C,UACAA,EAAA,IAAqBp/B,EAAUpc,EAAAw7C,SAAAh7C,UAEzByuB,GAA2B,mBAAAjvB,EAAA,SAAAgd,SACjC,IACAw+B,EAAuCx7C,EAAA,gBAKvCvD,IAAAuD,EAAAy7C,eACA5gC,MAAAC,QAAA9a,EAAAy7C,cACAA,EAAA,IAAyBr/B,EAAUpc,EAAAy7C,aAAAj7C,UAE7ByuB,GAA2B,mBAAAjvB,EAAA,aAAAgd,SACjC,IACAy+B,EAA2Cz7C,EAAA,oBAK3CvD,IAAAuD,EAAA07C,SACA7gC,MAAAC,QAAA9a,EAAA07C,UACAA,EAAA,IAAqBt/B,EAAUpc,EAAA07C,SAAAl7C,UAEzByuB,GAA2B,mBAAAjvB,EAAA,SAAAgd,SACjC,IACA0+B,EAAA17C,EAAA07C,UAGAA,EAAA,IAAmBt/B,EAGnB,OACAo/B,WACAC,eACAH,sBACAI,WACAjmC,UAzvCAmmC,CAAA57C,GAMA0E,KAAAm3C,sBAAAp/C,IAAAuD,EAAA87C,gBAAA97C,EAAA87C,gBAAA,GAMAp3C,KAAAq3C,8BACAt/C,IAAAuD,EAAAg8C,yBACAh8C,EAAAg8C,wBAMAt3C,KAAAu3C,gCACAx/C,IAAAuD,EAAAk8C,2BACAl8C,EAAAk8C,0BAMAx3C,KAAAy3C,iBAAA1/C,IAAAuD,EAAAo1C,WACAp1C,EAAAo1C,WAA2Bx2B,EAM3Bla,KAAA03C,mBAKA13C,KAAA23C,gBAAA,WACA33C,KAAA03C,wBAAA3/C,EACAiI,KAAA43C,aAAApjD,KAAAwL,KAAAytC,KAAAC,QACKpuC,KAAAU,MAMLA,KAAA63C,4BzB7JA,cyBmKA73C,KAAA83C,4BzBnKA,cyByKA93C,KAAA+3C,YAAA,EAMA/3C,KAAAg4C,YAAA,KAOAh4C,KAAAi4C,gBAAA,KAMAj4C,KAAAk4C,yBAAA,KAMAl4C,KAAAm4C,uBAAA,KAMAn4C,KAAAo4C,gCAAA,KAMAp4C,KAAAq4C,UAAAz9C,SAAAC,cAAA,OACAmF,KAAAq4C,UAAAC,UAAA,eAAgD99B,EAAK,gBACrDxa,KAAAq4C,UAAAnvC,MAAA4oC,SAAA,WACA9xC,KAAAq4C,UAAAnvC,MAAAqvC,SAAA,SACAv4C,KAAAq4C,UAAAnvC,MAAAiZ,MAAA,OACAniB,KAAAq4C,UAAAnvC,MAAAlH,OAAA,OAEAhC,KAAAq4C,UAAAnvC,MAAAsvC,cAAA,OACAx4C,KAAAq4C,UAAAnvC,MAAAuvC,YAAA,OAMAz4C,KAAA04C,kBAAA99C,SAAAC,cAAA,OACAmF,KAAA04C,kBAAAJ,UAAA,sBACAt4C,KAAAq4C,UAAAp9C,YAAA+E,KAAA04C,mBAMA14C,KAAA24C,2BAAA/9C,SAAAC,cAAA,OACAmF,KAAA24C,2BAAAL,UAAA,gCAWA,IAVA,IAAAM,EAAA,CACMxkC,EAASI,MACTJ,EAASK,SACTL,EAASa,UACTb,EAASoB,WACTpB,EAASkB,cACTqF,EAAmBI,YACnB3G,EAASiB,WACTjB,EAASuB,OAEf3d,EAAA,EAAA4Y,EAAAgoC,EAAA3gD,OAA8CD,EAAA4Y,IAAQ5Y,EAChDka,EAAMlS,KAAA24C,2BAAAC,EAAA5gD,GAAoDob,GAShE,QAAA/T,KAPAW,KAAAq4C,UAAAp9C,YAAA+E,KAAA24C,4BAMA34C,KAAA64C,wBAAA,IAAuC5wB,GAAsBjoB,KAAA1E,EAAA6sB,eACzCxN,EACdzI,EAAMlS,KAAA64C,wBAA+Bl+B,EAAmBtb,GAC9DW,KAAA84C,sBAAA94C,MAOAA,KAAA+4C,qBAAApC,EAAAC,oBAMA52C,KAAAg5C,gBAAA,KAEI9mC,EAAMlS,KAAAq4C,UAAiBjkC,EAASG,YAAAvU,KAAAi5C,mBAAAj5C,MAChCkS,EAAMlS,KAAAq4C,UAAiBjkC,EAASuB,MAAA3V,KAAAi5C,mBAAAj5C,MAChCkS,EAAMlS,KAAAq4C,UAAiBjkC,EAASiB,WAAArV,KAAAi5C,mBAAAj5C,MAMpCA,KAAA82C,SAAAH,EAAAG,UAAA,IAAoDp/B,EAMpD1X,KAAA+2C,aAAAJ,EAAAI,cAAA,IAA4Dr/B,EAM5D1X,KAAAk5C,UAAAvC,EAAAK,SAOAh3C,KAAAm5C,gBAAA,GAMAn5C,KAAAo5C,UAAAp5C,KAAAq5C,iBAMAr5C,KAAAs5C,cAMAt5C,KAAAu5C,OAAA,KAMAv5C,KAAAw5C,qBAAA,GAMAx5C,KAAAy5C,WAAA,IAA0BjtB,GAC1BxsB,KAAA05C,gBAAAp6C,KAAAU,MACAA,KAAA25C,kBAAAr6C,KAAAU,OAOAA,KAAA45C,oBAAA,GAEI1nC,EACJlS,KAAY0W,EAAmBiT,GAAWC,YAC1C5pB,KAAA65C,yBAAA75C,MACIkS,EAAMlS,KAAO0W,EAAmBiT,GAAWI,MAC/C/pB,KAAA85C,mBAAA95C,MACIkS,EAAMlS,KAAO0W,EAAmBiT,GAAWE,MAC/C7pB,KAAA+5C,mBAAA/5C,MACIkS,EAAMlS,KAAO0W,EAAmBiT,GAAWG,QAC/C9pB,KAAAg6C,qBAAAh6C,MAIAA,KAAA+W,cAAA4/B,EAAA5lC,QAEA/Q,KAAA82C,SAAAn5C,QAKA,SAAAs8C,GACAA,EAAAC,OAAAl6C,OACOV,KAAAU,OAEHkS,EAAMlS,KAAA82C,SAAgB5mC,EAAmBC,IAI7C,SAAA2D,GACAA,EAAA2D,QAAAyiC,OAAAl6C,OACOA,MAEHkS,EAAMlS,KAAA82C,SAAgB5mC,EAAmBE,OAI7C,SAAA0D,GACAA,EAAA2D,QAAAyiC,OAAA,OACOl6C,MAEPA,KAAA+2C,aAAAp5C,QAKA,SAAAw8C,GACAA,EAAAD,OAAAl6C,OACOV,KAAAU,OAEHkS,EAAMlS,KAAA+2C,aAAoB7mC,EAAmBC,IAIjD,SAAA2D,GACAA,EAAA2D,QAAAyiC,OAAAl6C,OACOA,MAEHkS,EAAMlS,KAAA+2C,aAAoB7mC,EAAmBE,OAIjD,SAAA0D,GACAA,EAAA2D,QAAAyiC,OAAA,OACOl6C,MAEPA,KAAAk5C,UAAAv7C,QAAAqC,KAAAo6C,oBAAA96C,KAAAU,OAEIkS,EAAMlS,KAAAk5C,UAAiBhpC,EAAmBC,IAI9C,SAAA2D,GACA9T,KAAAo6C,oBAA2EtmC,EAAA,UACpE9T,MAEHkS,EAAMlS,KAAAk5C,UAAiBhpC,EAAmBE,OAI9C,SAAA0D,GACA,IACAxa,EADgEwa,EAAA,QAChEumC,aACAtiD,IAAAuB,UACA0G,KAAAm5C,gBAAA7/C,EAAAgN,YAEAwN,EAAA2D,QAAAyiC,OAAA,OACOl6C,MAu3BP,OAn3BA4W,IAAA8/B,EAAA1mC,UAAA4G,GACA8/B,EAAApiD,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACAoiD,EAAApiD,UAAA2b,YAAAymC,EAMAA,EAAApiD,UAAA+kD,eAAA,WACA,UAAA9/C,MAAA,oDAQAm9C,EAAApiD,UAAAgmD,WAAA,SAAAL,GACAj6C,KAAAu6C,cAAAxkD,KAAAkkD,IAQAvD,EAAApiD,UAAAkmD,eAAA,SAAAL,GACAn6C,KAAAy6C,kBAAA1kD,KAAAokD,IAUAzD,EAAApiD,UAAAomD,SAAA,SAAAxG,GACAl0C,KAAA26C,gBAAA5E,YACAhgD,KAAAm+C,IAQAwC,EAAApiD,UAAAsmD,WAAA,SAAAC,GACA76C,KAAA86C,cAAA/kD,KAAA8kD,IAQAnE,EAAApiD,UAAA8lD,oBAAA,SAAAS,GACA,IAAAvhD,EAAAuhD,EAAAR,aACAtiD,IAAAuB,IACA0G,KAAAm5C,gBAAA7/C,EAAAgN,YAAAu0C,GAEAA,EAAAX,OAAAl6C,OAOA02C,EAAApiD,UAAAue,gBAAA,WACA7S,KAAA64C,wBAAA1gD,UACIua,EAAQ1S,KAAAq4C,UAAiBjkC,EAASG,YAAAvU,KAAAi5C,mBAAAj5C,MAClC0S,EAAQ1S,KAAAq4C,UAAiBjkC,EAASuB,MAAA3V,KAAAi5C,mBAAAj5C,MAClC0S,EAAQ1S,KAAAq4C,UAAiBjkC,EAASiB,WAAArV,KAAAi5C,mBAAAj5C,WACtCjI,IAAAiI,KAAAs5C,gBACAvnC,oBAA0BqC,EAASmB,OAAAvV,KAAAs5C,eAAA,GACnCt5C,KAAAs5C,mBAAAvhD,GAEAiI,KAAA03C,qBACAvJ,qBAAAnuC,KAAA03C,oBACA13C,KAAA03C,wBAAA3/C,GAEAiI,KAAA+6C,UAAA,MACAnkC,EAAAtiB,UAAAue,gBAAAre,KAAAwL,OAsBA02C,EAAApiD,UAAA0mD,sBAAA,SAAA3hC,EAAAvhB,EAAA+f,GACA,GAAA7X,KAAAg4C,YAAA,CAGA,IAAAz+B,EAAAvZ,KAAAwZ,uBAAAH,GAGA4hC,OAAAljD,KAFA8f,OAAA9f,IAAA8f,IACgC,IAChCojC,aACApjC,EAAAojC,aAAAj7C,KAAAg4C,YAAAtH,WAAA,EACAwK,OAAAnjD,IAAA8f,EAAAqjC,YACArjC,EAAAqjC,YAAgCnoC,EAChC,OAAA/S,KAAAo5C,UAAA+B,2BACA5hC,EAAAvZ,KAAAg4C,YAAAiD,EAAAnjD,EAAA,KACAojD,EAAA,QAWAxE,EAAApiD,UAAA8mD,mBAAA,SAAA/hC,EAAAxB,GACA,IAAAwjC,EAAA,KAOA,OANAr7C,KAAAg7C,sBAAA3hC,EAAA,SAAAiiC,GACAD,IACAA,EAAA,IAEAA,EAAAtlD,KAAAulD,IACKzjC,GACLwjC,GAoBA3E,EAAApiD,UAAAinD,oBAAA,SAAAliC,EAAAvhB,EAAA+f,GACA,GAAA7X,KAAAg4C,YAAA,CAGA,IAAA18C,EAAAuc,GAA2D,GAC3DojC,OAAAljD,IAAAuD,EAAA2/C,aACApjC,EAAAojC,aAAAj7C,KAAAg4C,YAAAtH,WAAA,EACAwK,EAAA5/C,EAAA4/C,aAA6CnoC,EAC7C,OAAA/S,KAAAo5C,UAAAmC,oBACAliC,EAAArZ,KAAAg4C,YAAAiD,EAAAnjD,EAAA,KAAAojD,EAAA,QAYAxE,EAAApiD,UAAAknD,kBAAA,SAAAniC,EAAAxB,GACA,IAAA7X,KAAAg4C,YACA,SAEA,IAAAz+B,EAAAvZ,KAAAwZ,uBAAAH,GAGA6hC,OAAAnjD,KAFA8f,OAAA9f,IAAA8f,IACgC,IAChCqjC,YAAArjC,EAAAqjC,YAAwFnoC,EACxFkoC,OAAAljD,IAAA8f,EAAAojC,aACApjC,EAAAojC,aAAAj7C,KAAAg4C,YAAAtH,WAAA,EACA,OAAA1wC,KAAAo5C,UAAAqC,uBACAliC,EAAAvZ,KAAAg4C,YAAAiD,EAAAC,EAAA,OASAxE,EAAApiD,UAAAonD,mBAAA,SAAA5nC,GACA,OAAA9T,KAAAwZ,uBAAAxZ,KAAAsZ,cAAAxF,KASA4iC,EAAApiD,UAAAglB,cAAA,SAAAxF,GACA,IAAA6nC,EAAA37C,KAAAq4C,UAAAuD,wBACAC,EAAA,mBAAA/nC,EAC4B,EAAA0P,eAAA,GACA,EAE5B,OACAq4B,EAAA99B,QAAA49B,EAAAx5C,KACA05C,EAAA59B,QAAA09B,EAAAG,MAaApF,EAAApiD,UAAAynD,UAAA,WACA,OAAmD/7C,KAAAzJ,IAAcozB,GAAWG,SAU5E4sB,EAAApiD,UAAA0nD,iBAAA,WACA,IAAAp0C,EAAA5H,KAAA+7C,YACA,YAAAhkD,IAAA6P,EACA,iBAAAA,EAAAhN,SAAAi8C,eAAAjvC,KAEA,MAWA8uC,EAAApiD,UAAAklB,uBAAA,SAAAH,GACA,IAAAN,EAAA/Y,KAAAg4C,YACA,OAAAj/B,EAGargB,GAAcqgB,EAAAkjC,2BAAA5iC,EAAAvd,SAF3B,MAYA46C,EAAApiD,UAAAimD,YAAA,WACA,OAAAv6C,KAAA82C,UASAJ,EAAApiD,UAAAwmD,YAAA,WACA,OAAA96C,KAAAk5C,WAWAxC,EAAApiD,UAAA4nD,eAAA,SAAA5iD,GACA,IAAAuhD,EAAA76C,KAAAm5C,gBAAA7/C,EAAAgN,YACA,YAAAvO,IAAA8iD,IAAA,MAWAnE,EAAApiD,UAAAmmD,gBAAA,WACA,OAAAz6C,KAAA+2C,cASAL,EAAApiD,UAAAqmD,cAAA,WACA,OAC4B36C,KAAAzJ,IAAcozB,GAAWC,aASrD8sB,EAAApiD,UAAAyhD,UAAA,WAEA,OADA/1C,KAAA26C,gBAAA5E,aAWAW,EAAApiD,UAAA6nD,uBAAA,SAAA5iC,GACA,IAAAR,EAAA/Y,KAAAg4C,YACA,OAAAj/B,EAGargB,GAAcqgB,EAAAqjC,2BAAA7iC,EAAAzd,MAAA,MAF3B,MAUA46C,EAAApiD,UAAA+nD,YAAA,WACA,OAAAr8C,KAAAo5C,WASA1C,EAAApiD,UAAAgoD,QAAA,WACA,OACoDt8C,KAAAzJ,IAAcozB,GAAWE,OAW7E6sB,EAAApiD,UAAAioD,QAAA,WACA,OACsBv8C,KAAAzJ,IAAcozB,GAAWI,OAS/C2sB,EAAApiD,UAAAo0B,YAAA,WACA,OAAA1oB,KAAAq4C,WAUA3B,EAAApiD,UAAAkoD,oBAAA,WACA,OAAAx8C,KAAA04C,mBAUAhC,EAAApiD,UAAAmoD,6BAAA,WACA,OAAAz8C,KAAA24C,4BAUAjC,EAAApiD,UAAAolD,gBAAA,SAAAtsB,EAAAsvB,EAAAC,EAAAC,GAGA,IAAA7jC,EAAA/Y,KAAAg4C,YACA,KAAAj/B,GAAA2jC,KAAA3jC,EAAA8jC,aACA,OjD32BO17C,IiD62BP,IAAA4X,EAAA8jC,YAAAH,GAAAtvB,EAAAP,UACA,OjD92BO1rB,IiDs3BP,IAAAqzB,EAAAmoB,EAAA,GAAA5jC,EAAA+jC,MAAA,GACAroB,EAAAkoB,EAAA,GAAA5jC,EAAA+jC,MAAA,GACA,aAAA58C,KAAAgE,IAAA04C,GACA18C,KAAAsE,KAAAgwB,IAAAC,KAAAmoB,GAOAlG,EAAApiD,UAAA2kD,mBAAA,SAAA//B,EAAA/E,GACA,IAAAhY,EAAAgY,GAAA+E,EAAA/c,KACA4gD,EAAA,IAA8B/jC,EAAe7c,EAAA6D,KAAAkZ,GAC7ClZ,KAAA84C,sBAAAiE,IAMArG,EAAApiD,UAAAwkD,sBAAA,SAAAiE,GACA,GAAA/8C,KAAAg4C,YAAA,CAKAh4C,KAAAu5C,OAAAwD,EAAAxjC,WACAwjC,EAAAhkC,WAAA/Y,KAAAg4C,YACA,IAAAgF,EAAAh9C,KAAAy6C,kBAAAniC,WACA,QAAAtY,KAAA6T,cAAAkpC,GACA,QAAA/kD,EAAAglD,EAAA/kD,OAAA,EAAgDD,GAAA,EAAQA,IAAA,CACxD,IAAAmiD,EAAA6C,EAAAhlD,GACA,GAAAmiD,EAAA8C,YAIA,IADA9C,EAAA+C,YAAAH,GAEA,SASArG,EAAApiD,UAAA6oD,iBAAA,WAEA,IAAApkC,EAAA/Y,KAAAg4C,YAWAoF,EAAAp9C,KAAAy5C,WACA,IAAA2D,EAAArxB,UAAA,CACA,IAAA0B,EAAAztB,KAAAm3C,iBACAzpB,EAAAD,EACA,GAAA1U,EAAA,CACA,IAAAskC,EAAAtkC,EAAAukC,UACAD,EAAkBpuB,MAClBxB,EAAAztB,KAAAq3C,yBAAA,IACA3pB,EAAA,GAEA2vB,EAAkBpuB,MAClBxB,EAAAztB,KAAAu3C,2BAAA,IACA7pB,EAAA,GAGA0vB,EAAAjwB,kBAAAM,IACA2vB,EAAA7wB,eACA6wB,EAAA5vB,cAAAC,EAAAC,KAGA3U,IAAA/Y,KAAAkU,YAAuC8V,KAAejR,EAAAm0B,SACtDltC,KAAAy5C,WAAAtsB,mBAscA,SAAAowB,EAAA9H,GACA,QAAAz9C,EAAA,EAAA4Y,EAAA6kC,EAAAx9C,OAAqCD,EAAA4Y,IAAQ5Y,EAAA,CAC7C,IAAAk8C,EAAAuB,EAAAz9C,GACA,GAA4B,qBAAA+9C,UAC5B,OAAAwH,EAA8C,EAAAxH,YAAAz9B,YAE9C,IAAArR,EAAiE,EACjEu2C,YACA,GAAAv2C,KAAAw2C,QACA,SAIA,SAndAF,CAAAv9C,KAAA+1C,YAAAz9B,aACAtY,KAAAo5C,UAAAsE,oBAAyC1zB,GAAejR,GAIxD,IADA,IAAA4kC,EAAA39C,KAAAw5C,qBACAxhD,EAAA,EAAA4Y,EAAA+sC,EAAA1lD,OAAoDD,EAAA4Y,IAAQ5Y,EAC5D2lD,EAAA3lD,GAAAgI,KAAA+Y,GAEA4kC,EAAA1lD,OAAA,GAMAy+C,EAAApiD,UAAAylD,mBAAA,WACA/5C,KAAA49C,UAMAlH,EAAApiD,UAAA0lD,qBAAA,WAMA,IAAA6D,EAKA,GAJA79C,KAAA+7C,cACA8B,EAAA79C,KAAAg8C,oBAGAh8C,KAAAg5C,gBAAA,CACA,QAAAhhD,EAAA,EAAA4Y,EAAA5Q,KAAAg5C,gBAAA/gD,OAAuDD,EAAA4Y,IAAQ5Y,EACvDua,EAAavS,KAAAg5C,gBAAAhhD,IAErBgI,KAAAg5C,gBAAA,KAGA,GAAA6E,EAOK,CACLA,EAAA5iD,YAAA+E,KAAAq4C,WAEA,IAAAzB,EAAA52C,KAAA+4C,qBACA/4C,KAAA+4C,qBAAA8E,EACA79C,KAAAg5C,gBAAA,CACQ9mC,EAAM0kC,EAAsBxiC,EAASU,QAAA9U,KAAAi5C,mBAAAj5C,MACrCkS,EAAM0kC,EAAsBxiC,EAASW,SAAA/U,KAAAi5C,mBAAAj5C,OAG7CA,KAAAs5C,gBACAt5C,KAAAs5C,cAAAt5C,KAAA89C,WAAAx+C,KAAAU,MACAqS,iBAAyB+B,EAASmB,OAAAvV,KAAAs5C,eAAA,SAlBlCt5C,KAAAo5C,UAAA2E,uBACM9K,GAAUjzC,KAAAq4C,gBAChBtgD,IAAAiI,KAAAs5C,gBACAvnC,oBAA4BqC,EAASmB,OAAAvV,KAAAs5C,eAAA,GACrCt5C,KAAAs5C,mBAAAvhD,GAkBAiI,KAAA89C,cAQApH,EAAApiD,UAAAqlD,kBAAA,WACA35C,KAAA49C,UAMAlH,EAAApiD,UAAA0pD,2BAAA,WACAh+C,KAAA49C,UAMAlH,EAAApiD,UAAAwlD,mBAAA,WACA95C,KAAAk4C,2BACM3lC,EAAavS,KAAAk4C,0BACnBl4C,KAAAk4C,yBAAA,MAEAl4C,KAAAm4C,yBACM5lC,EAAavS,KAAAm4C,wBACnBn4C,KAAAm4C,uBAAA,MAEA,IAAAz2B,EAAA1hB,KAAAu8C,UACA76B,IACA1hB,KAAAq4C,UAAAjuC,aAAA,YAA+CoF,EAAMkS,IACrD1hB,KAAAk4C,yBAAsChmC,EACtCwP,EAAcrR,EACdrQ,KAAAg+C,2BAAAh+C,MACAA,KAAAm4C,uBAAoCjmC,EACpCwP,EAActN,EAASC,OACvBrU,KAAAg+C,2BAAAh+C,OAEAA,KAAA49C,UAMAlH,EAAApiD,UAAAulD,yBAAA,WACA75C,KAAAo4C,kCACAp4C,KAAAo4C,gCAAAz6C,QAAmD4U,GACnDvS,KAAAo4C,gCAAA,MAEA,IAAAnB,EAAAj3C,KAAA26C,gBACA1D,IACAj3C,KAAAo4C,gCAAA,CACQlmC,EACR+kC,EAAsB5mC,EACtBrQ,KAAA49C,OAAA59C,MACQkS,EACR+kC,EAAsB7iC,EAASC,OAC/BrU,KAAA49C,OAAA59C,QAGAA,KAAA49C,UAMAlH,EAAApiD,UAAA2pD,WAAA,WACA,QAAAj+C,KAAAg4C,aAOAtB,EAAApiD,UAAA4pD,WAAA,WACAl+C,KAAA03C,oBACAvJ,qBAAAnuC,KAAA03C,oBAEA13C,KAAA23C,mBAOAjB,EAAApiD,UAAAspD,OAAA,gBACA7lD,IAAAiI,KAAA03C,qBACA13C,KAAA03C,mBAAA/I,sBAAA3uC,KAAA23C,mBAWAjB,EAAApiD,UAAA6pD,cAAA,SAAAlE,GACA,OAAAj6C,KAAAu6C,cAAAj3C,OAAA22C,IAUAvD,EAAApiD,UAAA8pD,kBAAA,SAAAjE,GACA,OAAAn6C,KAAAy6C,kBAAAn3C,OAAA62C,IAUAzD,EAAApiD,UAAA+pD,YAAA,SAAAnK,GAEA,OADAl0C,KAAA26C,gBAAA5E,YACAzyC,OAAA4wC,IAUAwC,EAAApiD,UAAAgqD,cAAA,SAAAzD,GACA,OAAA76C,KAAA86C,cAAAx3C,OAAAu3C,IAOAnE,EAAApiD,UAAAsjD,aAAA,SAAA2G,GACA,IAAAC,EAEA/qB,EAAAzzB,KAAAs8C,UACA56B,EAAA1hB,KAAAu8C,UACAtrB,ErCx9BA,CAAA9vB,SAAA,UqCy9BAs9C,EAAAz+C,KAAAg4C,YAEAj/B,EAAA,KACA,QAAAhhB,IAAA07B,GDnoCO,SAAAA,GACP,OAAAA,EAAA,MAAAA,EAAA,KCkoC8BirB,CAAOjrB,IAAA/R,KAAA2rB,QAAA,CAIrC,IAHA,IAAAiQ,EAAA57B,EAAA6tB,SAAAvvC,KAAAg4C,YAAAh4C,KAAAg4C,YAAAsF,eAAAvlD,GACA4mD,EAAA3+C,KAAA26C,gBAAAjG,sBACAkK,EAAA,GACA5mD,EAAA,EAAA4Y,EAAA+tC,EAAA1mD,OAAmDD,EAAA4Y,IAAQ5Y,EAC3D4mD,EAAoBpvC,EAAMmvC,EAAA3mD,GAAAk8C,QAAAyK,EAAA3mD,GAE1BwmD,EAAA98B,EAAA4L,SAAAttB,KAAAy3C,aACA1+B,EAAyC,CACzCm0B,SAAA,EACAkP,2BAAAp8C,KAAA63C,4BACA5mB,SACA6rB,MAAA98C,KAAAu5C,OAAAv5C,KAAAu5C,OAAAiF,EAAAnwC,OACA9K,MAAAvD,KAAA+3C,cACA6G,cACAD,mBACAjO,WAAA1wC,KAAAy3C,YACAwE,2BAAAj8C,KAAA83C,4BACA6F,oBAAA,GACAlqB,OACAorB,mBAAA7+C,KAAA45C,oBACAwD,UAAAp9C,KAAAy5C,WACA8E,OACAO,UAAA,GACAN,YACAlB,YACAT,YAAA,IAYA,GARA9jC,IACAA,EAAAkY,OAA0BsC,GAAiBirB,EAAAnwC,OAC3CmwC,EAAAhrB,WAAAgrB,EAAA1vB,SAAA/V,EAAA0a,KAAAxC,IAGAjxB,KAAAg4C,YAAAj/B,EACA/Y,KAAAo5C,UAAA2F,YAAAhmC,GAEAA,EAAA,CAMA,GALAA,EAAAm0B,SACAltC,KAAA49C,SAEAznC,MAAA7hB,UAAAyB,KAAA2C,MAAAsH,KAAAw5C,qBAAAzgC,EAAA4kC,qBAEAc,IACAz+C,KAAAi4C,kBACsBhlB,GAAOjzB,KAAAi4C,mBACR3lB,GAAMvZ,EAAAkY,OAAAjxB,KAAAi4C,oBAE3Bj4C,KAAA6T,cACA,IAAgB+E,EAAS8Q,GAAY1pB,KAAAy+C,IACrCz+C,KAAAi4C,gBAAiCjmB,GAAmBhyB,KAAAi4C,kBAIpDj4C,KAAAi4C,kBACAl/B,EAAAukC,UAAgCruB,MAChClW,EAAAukC,UAAgCruB,MACrBqD,GAAMvZ,EAAAkY,OAAAjxB,KAAAi4C,mBAGjBj4C,KAAA6T,cAAA,IAA+B+E,EAAS8Q,GAAY1pB,KAAA+Y,IAC5CuY,GAAKvY,EAAAkY,OAAAjxB,KAAAi4C,kBAIbj4C,KAAA6T,cAAA,IAA2B+E,EAAS8Q,GAAY1pB,KAAA+Y,IAEhDkM,WAAAjlB,KAAAm9C,iBAAA79C,KAAAU,MAAA,IAUA02C,EAAApiD,UAAA0qD,cAAA,SAAA/H,GACAj3C,KAAAxJ,IAAamzB,GAAWC,WAAAqtB,IASxBP,EAAApiD,UAAA2qD,QAAA,SAAAxrB,GACAzzB,KAAAxJ,IAAamzB,GAAWE,KAAA4J,IAUxBijB,EAAApiD,UAAAymD,UAAA,SAAAnzC,GACA5H,KAAAxJ,IAAamzB,GAAWG,OAAAliB,IASxB8uC,EAAApiD,UAAA4qD,QAAA,SAAAx9B,GACA1hB,KAAAxJ,IAAamzB,GAAWI,KAAArI,IAMxBg1B,EAAApiD,UAAA6qD,YAAA,SAAA7D,GACAt7C,KAAA45C,oBAA6BpqC,EAAM8rC,KAAA,EACnCt7C,KAAA49C,UAQAlH,EAAApiD,UAAAwpD,WAAA,WACA,IAAAD,EAAA79C,KAAAg8C,mBAEA,GAAA6B,EAEK,CACL,IAAAuB,EAAAnQ,iBAAA4O,GACA79C,KAAAi/C,QAAA,CACApB,EAAAtL,YACA8M,WAAAD,EAAA,iBACAC,WAAAD,EAAA,aACAC,WAAAD,EAAA,cACAC,WAAAD,EAAA,kBACAvB,EAAAlL,aACA0M,WAAAD,EAAA,gBACAC,WAAAD,EAAA,YACAC,WAAAD,EAAA,eACAC,WAAAD,EAAA,0BAbAp/C,KAAAi/C,aAAAlnD,IAqBA2+C,EAAApiD,UAAAgrD,cAAA,SAAAhE,UACAt7C,KAAA45C,oBAAoCpqC,EAAM8rC,IAC1Ct7C,KAAA49C,UAGAlH,EAprCgB,CAqrCd//B,GCnxCF,ICoBAzN,GACAq2C,GDuFeC,GA5GJ,SAAA5oC,GACX,SAAA6oC,EAAAnkD,GAEAsb,EAAApiB,KAAAwL,MAMAA,KAAAyX,QAAAnc,EAAAmc,QAAAnc,EAAAmc,QAAA,KAMAzX,KAAA0/C,QAAA,KAMA1/C,KAAAooB,KAAA,KAMApoB,KAAA2/C,aAAA,GAKA3/C,KAAA49C,OAAAtiD,EAAAsiD,OAAAtiD,EAAAsiD,OAAoD3qC,EAEpD3X,EAAAsM,QACA5H,KAAA+6C,UAAAz/C,EAAAsM,QAqEA,OAhEAgP,IAAA6oC,EAAAzvC,UAAA4G,GACA6oC,EAAAnrD,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACAmrD,EAAAnrD,UAAA2b,YAAAwvC,EAKAA,EAAAnrD,UAAAue,gBAAA,WACIogC,GAAUjzC,KAAAyX,SACdb,EAAAtiB,UAAAue,gBAAAre,KAAAwL,OAQAy/C,EAAAnrD,UAAAsrD,OAAA,WACA,OAAA5/C,KAAAooB,MAUAq3B,EAAAnrD,UAAA4lD,OAAA,SAAAn+C,GACAiE,KAAAooB,MACM6qB,GAAUjzC,KAAAyX,SAEhB,QAAAzf,EAAA,EAAA4Y,EAAA5Q,KAAA2/C,aAAA1nD,OAAkDD,EAAA4Y,IAAQ5Y,EACpDua,EAAavS,KAAA2/C,aAAA3nD,KAEnBgI,KAAA2/C,aAAA1nD,OAAA,EACA+H,KAAAooB,KAAArsB,EACAiE,KAAAooB,SACApoB,KAAA0/C,QACA1/C,KAAA0/C,QAAA3jD,EAAA0gD,gCACAxhD,YAAA+E,KAAAyX,SACAzX,KAAA49C,SAA0B3qC,GAC1BjT,KAAA2/C,aAAA5pD,KAA+Bmc,EAAMnW,EAC3B2tB,GAAY1pB,KAAA49C,OAAA59C,OAEtBjE,EAAA6hD,WAaA6B,EAAAnrD,UAAAymD,UAAA,SAAAnzC,GACA5H,KAAA0/C,QAAA,iBAAA93C,EACAhN,SAAAi8C,eAAAjvC,GACAA,GAGA63C,EAxGW,CAyGT9oC,GC7IKkpC,GAAA,YASAC,GAAA,gBASAC,GAAA,kBAkBAC,GAAA,aAUAC,GAAA,eASAC,IAEPX,GAAA,GACA,SAAAY,GAIA,GAHAj3C,KACAA,GAAAtO,SAAAC,cAAA,OAAAqO,SAEAi3C,KAAAZ,IAAA,CACAr2C,GAAAi3C,OACA,IAAAC,EAAAl3C,GAAAm3C,WAEA,GADAn3C,GAAAi3C,KAAA,IACAC,EACA,YAEAb,GAAAY,GAAAC,EAAArwC,MAAA,QAEA,OAAAwvC,GAAAY,KCqJO,SAAAG,GAAA/J,EAAA/iB,GACP,OAAA+iB,EAAAzC,SAAAtgB,GAAA+iB,EAAA1L,eACArX,EAAA+iB,EAAA3L,cAIe,IAAA2V,GA5KN,SAAA3M,GACT,SAAA4M,EAAAllD,GAEA,IAAAk6C,EAAsBllC,EAAM,GAAGhV,UAC/Bk6C,EAAAvuC,OAEA2sC,EAAAp/C,KAAAwL,KAAAw1C,GAMAx1C,KAAAygD,kBAAA,KAMAzgD,KAAA0gD,cAAA,KAMA1gD,KAAA2gD,iBAAA,KAEArlD,EAAAS,KACAiE,KAAAk6C,OAAA5+C,EAAAS,KAGImW,EAAMlS,KACJ0W,EAAmB08B,GAAaM,QACtC1zC,KAAA4gD,4BAAA5gD,MAEA,IAAAiH,EAAA3L,EAAA2L,OAAA3L,EAAA2L,OAAA,KACAjH,KAAA6gD,UAAA55C,GAuHA,OApHA2sC,IAAA4M,EAAAxwC,UAAA4jC,GACA4M,EAAAlsD,UAAAD,OAAA+K,OAAAw0C,KAAAt/C,WACAksD,EAAAlsD,UAAA2b,YAAAuwC,EAKAA,EAAAlsD,UAAAmgD,eAAA,SAAA78B,GACA,IAAAS,EAAAT,GAAA,GAEA,OADAS,EAAAtiB,KAAAiK,MACAqY,GAMAmoC,EAAAlsD,UAAAogD,oBAAA,SAAAC,GACA,IAAAyB,EAAAzB,GAAA,GAEA,OADAyB,EAAArgD,KAAAiK,KAAAi0C,iBACAmC,GASAoK,EAAAlsD,UAAAkpD,UAAA,WAEA,OADAx9C,KAAAzJ,IAA0B68C,GAAaM,SAEgB,MAOvD8M,EAAAlsD,UAAAggD,eAAA,WACA,IAAArtC,EAAAjH,KAAAw9C,YACA,OAAAv2C,EAAgCA,EAAAqmB,WAAX4nB,GAAWC,WAMhCqL,EAAAlsD,UAAAwsD,oBAAA,WACA9gD,KAAAgW,WAMAwqC,EAAAlsD,UAAAssD,4BAAA,WACA5gD,KAAA2gD,mBACMpuC,EAAavS,KAAA2gD,kBACnB3gD,KAAA2gD,iBAAA,MAEA,IAAA15C,EAAAjH,KAAAw9C,YACAv2C,IACAjH,KAAA2gD,iBAA8BzuC,EAAMjL,EAC5BmN,EAASC,OAAArU,KAAA8gD,oBAAA9gD,OAEjBA,KAAAgW,WAeAwqC,EAAAlsD,UAAA4lD,OAAA,SAAAn+C,GACAiE,KAAAygD,oBACMluC,EAAavS,KAAAygD,mBACnBzgD,KAAAygD,kBAAA,MAEA1kD,GACAiE,KAAAgW,UAEAhW,KAAA0gD,gBACMnuC,EAAavS,KAAA0gD,eACnB1gD,KAAA0gD,cAAA,MAEA3kD,IACAiE,KAAAygD,kBAA+BvuC,EAAMnW,EAAMiuB,GAAe,SAAA1X,GAC1D,IAAAyuC,EAA0E,EAC1ExK,EAAAv2C,KAAAi0C,gBACAsC,EAAApC,SAAA,OACAp8C,IAAAiI,KAAAw0C,cACA+B,EAAAxC,OAAA5yC,KAEA4/C,EAAAhoC,WAAA4lC,iBAAA5oD,KAAAwgD,GACAwK,EAAAhoC,WAAA6lC,YAA2CpvC,EAAMxP,OAAAu2C,GAC1Cv2C,MACPA,KAAA0gD,cAA2BxuC,EAAMlS,KAAOoU,EAASC,OAAAtY,EAAA6hD,OAAA7hD,GACjDiE,KAAAgW,YAUAwqC,EAAAlsD,UAAAusD,UAAA,SAAA55C,GACAjH,KAAAxJ,IAAa48C,GAAaM,OAAAzsC,IAG1Bu5C,EA1JS,CA2JP7M,ICiHK,SAASqN,GAAMC,GACtBjhD,KAAAkhD,eAAAD,EAAAloC,YAIe,IAAAooC,GArSA,SAAA1B,GACf,SAAA2B,EAAAvpC,GAEA,IAAAvc,EAAAuc,GAAA,GAEA4nC,EAAAjrD,KAAAwL,KAAA,CACAyX,QAAA7c,SAAAC,cAAA,OACA+iD,OAAAtiD,EAAAsiD,QAAgCoD,GAChCp5C,OAAAtM,EAAAsM,SAOA5H,KAAAqhD,WAAAzmD,SAAAC,cAAA,MAMAmF,KAAAshD,gBAAAvpD,IAAAuD,EAAAimD,WAAAjmD,EAAAimD,UAMAvhD,KAAAwhD,0BAAAzpD,IAAAuD,EAAAmmD,YAMAzhD,KAAA0hD,kBAAA3pD,IAAAuD,EAAAmmD,aACAnmD,EAAAmmD,YAEAzhD,KAAA0hD,eACA1hD,KAAAshD,YAAA,GAGA,IAAAhJ,OAAAvgD,IAAAuD,EAAAg9C,UAAAh9C,EAAAg9C,UAAA,iBAEAqJ,OAAA5pD,IAAAuD,EAAAqmD,SAAArmD,EAAAqmD,SAAA,eAEAC,OAAA7pD,IAAAuD,EAAAsmD,cAAAtmD,EAAAsmD,cAAA,IAEA,iBAAAA,GAKA5hD,KAAA6hD,eAAAjnD,SAAAC,cAAA,QACAmF,KAAA6hD,eAAAC,YAAAF,GAEA5hD,KAAA6hD,eAAAD,EAGA,IAAAG,OAAAhqD,IAAAuD,EAAAymD,MAAAzmD,EAAAymD,MAAA,IAEA,iBAAAA,GAKA/hD,KAAAgiD,OAAApnD,SAAAC,cAAA,QACAmF,KAAAgiD,OAAAF,YAAAC,GAEA/hD,KAAAgiD,OAAAD,EAIA,IAAAE,EAAAjiD,KAAA0hD,eAAA1hD,KAAAshD,WACAthD,KAAA6hD,eAAA7hD,KAAAgiD,OACAnlC,EAAAjiB,SAAAC,cAAA,UACAgiB,EAAAzS,aAAA,iBACAyS,EAAAqlC,MAAAP,EACA9kC,EAAA5hB,YAAAgnD,GAEI/vC,EAAM2K,EAASzI,EAASI,MAAAxU,KAAAmiD,aAAAniD,MAE5B,IAAAoiD,EAAA9J,EAAA,IAAuCyH,GAAkB,IAASC,IAClEhgD,KAAAshD,YAAAthD,KAAA0hD,aAAA,IAAsDzB,GAAe,KACrEjgD,KAAA0hD,aAAA,wBACAjqC,EAAAzX,KAAAyX,QACAA,EAAA6gC,UAAA8J,EACA3qC,EAAAxc,YAAA+E,KAAAqhD,YACA5pC,EAAAxc,YAAA4hB,GAOA7c,KAAAqiD,sBAAA,GAMAriD,KAAAsiD,kBAAA,EAmLA,OA/KA7C,IAAA2B,EAAApxC,UAAAyvC,GACA2B,EAAA9sD,UAAAD,OAAA+K,OAAAqgD,KAAAnrD,WACA8sD,EAAA9sD,UAAA2b,YAAAmxC,EAQAA,EAAA9sD,UAAAiuD,2BAAA,SAAAxpC,GAeA,IAVA,IAAAypC,EAAA,GAMAC,EAAA,GAEA9D,EAAA5lC,EAAA4lC,iBACAnrB,EAAAza,EAAAylC,UAAAhrB,WACAx7B,EAAA,EAAA4Y,EAAA+tC,EAAA1mD,OAAiDD,EAAA4Y,IAAQ5Y,EAAA,CACzD,IAAAu+C,EAAAoI,EAAA3mD,GACA,GAAWsoD,GAAmB/J,EAAA/iB,GAA9B,CAIA,IAAAvsB,EAAkEsvC,EAAA,MAAAiH,YAClE,GAAAv2C,EAAA,CAIA,IAAAy7C,EAAAz7C,EAAA07C,kBACA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAA3pC,GACA,GAAA6pC,EAQA,GAJA5iD,KAAAwhD,uBAAA,IAAAv6C,EAAA47C,8BACA7iD,KAAA8iD,gBAAA,GAGA3sC,MAAAC,QAAAwsC,GACA,QAAApnD,EAAA,EAAAgoC,EAAAof,EAAA3qD,OAAiDuD,EAAAgoC,IAAQhoC,EACzDonD,EAAApnD,KAAAgnD,IACAC,EAAA1sD,KAAA6sD,EAAApnD,IACAgnD,EAAAI,EAAApnD,KAAA,QAIAonD,KAAAJ,IACAC,EAAA1sD,KAAA6sD,GACAJ,EAAAI,IAAA,MAIA,OAAAH,GAOArB,EAAA9sD,UAAA4sD,eAAA,SAAAnoC,GACA,GAAAA,EAAA,CAQA,IAAA6pC,EAAA5iD,KAAAuiD,2BAAAxpC,GAEA+6B,EAAA8O,EAAA3qD,OAAA,EAMA,GALA+H,KAAAsiD,kBAAAxO,IACA9zC,KAAAyX,QAAAvO,MAAA65C,QAAAjP,EAAA,UACA9zC,KAAAsiD,iBAAAxO,IAGQ7wB,GAAM2/B,EAAA5iD,KAAAqiD,uBAAd,CAIInP,GAAclzC,KAAAqhD,YAGlB,QAAArpD,EAAA,EAAA4Y,EAAAgyC,EAAA3qD,OAA6CD,EAAA4Y,IAAQ5Y,EAAA,CACrD,IAAAyf,EAAA7c,SAAAC,cAAA,MACA4c,EAAAurC,UAAAJ,EAAA5qD,GACAgI,KAAAqhD,WAAApmD,YAAAwc,GAGAzX,KAAAqiD,sBAAAO,QA5BA5iD,KAAAsiD,mBACAtiD,KAAAyX,QAAAvO,MAAA65C,QAAA,OACA/iD,KAAAsiD,kBAAA,IAiCAlB,EAAA9sD,UAAA6tD,aAAA,SAAAruC,GACAA,EAAAT,iBACArT,KAAAijD,iBAMA7B,EAAA9sD,UAAA2uD,cAAA,WACAjjD,KAAAyX,QAAAyrC,UAAAC,OAAkClD,IAClCjgD,KAAAshD,WACMxO,GAAW9yC,KAAA6hD,eAAA7hD,KAAAgiD,QAEXlP,GAAW9yC,KAAAgiD,OAAAhiD,KAAA6hD,gBAEjB7hD,KAAAshD,YAAAthD,KAAAshD,YAQAF,EAAA9sD,UAAA8uD,eAAA,WACA,OAAApjD,KAAA0hD,cAQAN,EAAA9sD,UAAAwuD,eAAA,SAAArB,GACAzhD,KAAA0hD,eAAAD,IAGAzhD,KAAA0hD,aAAAD,EACAzhD,KAAAyX,QAAAyrC,UAAAC,OAAA,qBACA1B,GAAAzhD,KAAAshD,YACAthD,KAAAijD,kBAWA7B,EAAA9sD,UAAA+uD,aAAA,SAAA9B,GACAvhD,KAAA0hD,cAAA1hD,KAAAshD,aAAAC,GAGAvhD,KAAAijD,iBASA7B,EAAA9sD,UAAAgvD,aAAA,WACA,OAAAtjD,KAAAshD,YAGAF,EAtRe,CAuRb5B,ICvKK,SAAS+D,GAAMtC,GACtB,IAAAloC,EAAAkoC,EAAAloC,WACA,GAAAA,EAAA,CAGA,IAAA+V,EAAA/V,EAAAylC,UAAA1vB,SACA,GAAAA,GAAA9uB,KAAAwjD,UAAA,CACA,IAAAl5C,EAAA,UAAAwkB,EAAA,OACA,GAAA9uB,KAAAyjD,UAAA,CACA,IAAA3hD,EAAA9B,KAAAyX,QAAAyrC,UAAAphD,SAAqD+9C,IACrD/9C,GAAA,IAAAgtB,EAEOhtB,GAAA,IAAAgtB,GACP9uB,KAAAyX,QAAAyrC,UAAA5/C,OAAsCu8C,IAFtC7/C,KAAAyX,QAAAyrC,UAAA/zB,IAAmC0wB,IAKnC7/C,KAAAgiD,OAAA94C,MAAAw6C,YAAAp5C,EACAtK,KAAAgiD,OAAA94C,MAAAy6C,gBAAAr5C,EACAtK,KAAAgiD,OAAA94C,MAAAoB,YAEAtK,KAAAwjD,UAAA10B,GAGe,IAAA80B,GAjJL,SAAAnE,GACV,SAAAoE,EAAAhsC,GAEA,IAAAvc,EAAAuc,GAAA,GAEA4nC,EAAAjrD,KAAAwL,KAAA,CACAyX,QAAA7c,SAAAC,cAAA,OACA+iD,OAAAtiD,EAAAsiD,QAAgC2F,GAChC37C,OAAAtM,EAAAsM,SAGA,IAAA0wC,OAAAvgD,IAAAuD,EAAAg9C,UAAAh9C,EAAAg9C,UAAA,YAEAyJ,OAAAhqD,IAAAuD,EAAAymD,MAAAzmD,EAAAymD,MAAA,IAMA/hD,KAAAgiD,OAAA,KAEA,iBAAAD,GACA/hD,KAAAgiD,OAAApnD,SAAAC,cAAA,QACAmF,KAAAgiD,OAAA1J,UAAA,aACAt4C,KAAAgiD,OAAAF,YAAAC,IAEA/hD,KAAAgiD,OAAAD,EACA/hD,KAAAgiD,OAAAkB,UAAA/zB,IAAA,eAGA,IAAAwyB,EAAArmD,EAAAqmD,SAAArmD,EAAAqmD,SAAA,iBAEA9kC,EAAAjiB,SAAAC,cAAA,UACAgiB,EAAAy7B,YAAA,SACAz7B,EAAAzS,aAAA,iBACAyS,EAAAqlC,MAAAP,EACA9kC,EAAA5hB,YAAA+E,KAAAgiD,QAEI9vC,EAAM2K,EAASzI,EAASI,MAAAxU,KAAAmiD,aAAAniD,MAE5B,IAAAoiD,EAAA9J,EAAA,IAAuCyH,GAAkB,IAASC,GAClEvoC,EAAAzX,KAAAyX,QACAA,EAAA6gC,UAAA8J,EACA3qC,EAAAxc,YAAA4hB,GAEA7c,KAAA8jD,gBAAAxoD,EAAAyoD,WAAAzoD,EAAAyoD,gBAAAhsD,EAMAiI,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAMA7tC,KAAAyjD,eAAA1rD,IAAAuD,EAAA2oD,UAAA3oD,EAAA2oD,SAMAjkD,KAAAwjD,eAAAzrD,EAEAiI,KAAAyjD,WACAzjD,KAAAyX,QAAAyrC,UAAA/zB,IAAiC0wB,IA8CjC,OAzCAJ,IAAAoE,EAAA7zC,UAAAyvC,GACAoE,EAAAvvD,UAAAD,OAAA+K,OAAAqgD,KAAAnrD,WACAuvD,EAAAvvD,UAAA2b,YAAA4zC,EAMAA,EAAAvvD,UAAA6tD,aAAA,SAAAruC,GACAA,EAAAT,sBACAtb,IAAAiI,KAAA8jD,gBACA9jD,KAAA8jD,kBAEA9jD,KAAAkkD,eAOAL,EAAAvvD,UAAA4vD,YAAA,WACA,IACAxiC,EADA1hB,KAAA4/C,SACArD,UACA76B,QAKA3pB,IAAA2pB,EAAAurB,gBACAjtC,KAAAgkD,UAAA,EACAtiC,EAAAwrB,QAAA,CACApe,SAAA,EACA+e,SAAA7tC,KAAAgkD,UACAlW,OAAkB9d,KAGlBtO,EAAA8rB,YAAA,KAKAqW,EAhHU,CAiHRrE,ICVa2E,GAxGP,SAAA1E,GACR,SAAA2E,EAAAvsC,GAEA,IAAAvc,EAAAuc,GAAA,GAEA4nC,EAAAjrD,KAAAwL,KAAA,CACAyX,QAAA7c,SAAAC,cAAA,OACA+M,OAAAtM,EAAAsM,SAGA,IAAA0wC,OAAAvgD,IAAAuD,EAAAg9C,UAAAh9C,EAAAg9C,UAAA,UAEAvpB,OAAAh3B,IAAAuD,EAAAyzB,MAAAzzB,EAAAyzB,MAAA,EAEAs1B,OAAAtsD,IAAAuD,EAAA+oD,YAAA/oD,EAAA+oD,YAAA,IACAC,OAAAvsD,IAAAuD,EAAAgpD,aAAAhpD,EAAAgpD,aAAA,IAEAC,OAAAxsD,IAAAuD,EAAAipD,eACAjpD,EAAAipD,eAAA,UACAC,OAAAzsD,IAAAuD,EAAAkpD,gBACAlpD,EAAAkpD,gBAAA,WAEAC,EAAA7pD,SAAAC,cAAA,UACA4pD,EAAAnM,YAAA,MACAmM,EAAAr6C,aAAA,iBACAq6C,EAAAvC,MAAAqC,EACAE,EAAAxpD,YACA,iBAAAopD,EAAAzpD,SAAA2Q,eAAA84C,MAGInyC,EAAMuyC,EAAYrwC,EAASI,MAAAxU,KAAAmiD,aAAA7iD,KAAAU,KAAA+uB,IAE/B,IAAA21B,EAAA9pD,SAAAC,cAAA,UACA6pD,EAAApM,YAAA,OACAoM,EAAAt6C,aAAA,iBACAs6C,EAAAxC,MAAAsC,EACAE,EAAAzpD,YACA,iBAAAqpD,EAAA1pD,SAAA2Q,eAAA+4C,MAGIpyC,EAAMwyC,EAAatwC,EAASI,MAAAxU,KAAAmiD,aAAA7iD,KAAAU,MAAA+uB,IAEhC,IAAAqzB,EAAA9J,EAAA,IAAuCyH,GAAkB,IAASC,GAClEvoC,EAAAzX,KAAAyX,QACAA,EAAA6gC,UAAA8J,EACA3qC,EAAAxc,YAAAwpD,GACAhtC,EAAAxc,YAAAypD,GAMA1kD,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAgDA,OA5CA4R,IAAA2E,EAAAp0C,UAAAyvC,GACA2E,EAAA9vD,UAAAD,OAAA+K,OAAAqgD,KAAAnrD,WACA8vD,EAAA9vD,UAAA2b,YAAAm0C,EAOAA,EAAA9vD,UAAA6tD,aAAA,SAAApzB,EAAAjb,GACAA,EAAAT,iBACArT,KAAA2kD,aAAA51B,IAOAq1B,EAAA9vD,UAAAqwD,aAAA,SAAA51B,GACA,IACArN,EADA1hB,KAAA4/C,SACArD,UACA,GAAA76B,EAAA,CAKA,IAAAmtB,EAAAntB,EAAAirB,gBACA,GAAAkC,EAAA,CACA,IAAA+V,EAAAljC,EAAAgrB,oBAAAmC,EAAA9f,GACA/uB,KAAAgkD,UAAA,GACAtiC,EAAAssB,gBACAtsB,EAAAwsB,mBAEAxsB,EAAAwrB,QAAA,CACA1Z,WAAAoxB,EACA/W,SAAA7tC,KAAAgkD,UACAlW,OAAkB9d,MAGlBtO,EAAAkwB,cAAAgT,MAKAR,EApGQ,CAqGN5E,IC7HF,IAAAqF,GAAA,SAAAC,EAAAC,EAAAC,GAMAhlD,KAAAilD,OAAAH,EAMA9kD,KAAAklD,aAAAH,EAMA/kD,KAAAmlD,OAAAH,EAMAhlD,KAAAolD,QAAA,GAMAplD,KAAAqlD,OAAA,EAMArlD,KAAAslD,iBAAA,GAMAT,GAAAvwD,UAAAwuB,MAAA,WACA9iB,KAAAolD,QAAAntD,OAAA,EACA+H,KAAAqlD,OAAA,EACArlD,KAAAslD,iBAAA,GAOAT,GAAAvwD,UAAA8F,OAAA,SAAA0jB,EAAAE,GACAhe,KAAAolD,QAAArvD,KAAA+nB,EAAAE,EAAAyvB,KAAAC,QAMAmX,GAAAvwD,UAAAyuB,IAAA,WACA,GAAA/iB,KAAAolD,QAAAntD,OAAA,EAGA,SAEA,IAAA+sD,EAAAvX,KAAAC,MAAA1tC,KAAAmlD,OACAI,EAAAvlD,KAAAolD,QAAAntD,OAAA,EACA,GAAA+H,KAAAolD,QAAAG,EAAA,GAAAP,EAGA,SAKA,IADA,IAAAQ,EAAAD,EAAA,EACAC,EAAA,GAAAxlD,KAAAolD,QAAAI,EAAA,GAAAR,GACAQ,GAAA,EAGA,IAAA3X,EAAA7tC,KAAAolD,QAAAG,EAAA,GAAAvlD,KAAAolD,QAAAI,EAAA,GAIA,GAAA3X,EAAA,OACA,SAGA,IAAA3vB,EAAAle,KAAAolD,QAAAG,GAAAvlD,KAAAolD,QAAAI,GACApnC,EAAApe,KAAAolD,QAAAG,EAAA,GAAAvlD,KAAAolD,QAAAI,EAAA,GAGA,OAFAxlD,KAAAqlD,OAAAnlD,KAAAo2B,MAAAlY,EAAAF,GACAle,KAAAslD,iBAAAplD,KAAAsE,KAAA0Z,IAAAE,KAAAyvB,EACA7tC,KAAAslD,iBAAAtlD,KAAAklD,cAMAL,GAAAvwD,UAAAuhC,YAAA,WACA,OAAA71B,KAAAklD,aAAAllD,KAAAslD,kBAAAtlD,KAAAilD,QAMAJ,GAAAvwD,UAAAmxD,SAAA,WACA,OAAAzlD,KAAAqlD,QAGe,IAAAK,GAAA,GC/GAC,GAAA,CACfC,OAAA,UCgIO,SAASC,GAAMnkC,EAAAoN,EAAA4R,EAAAolB,GACtBh3B,EAAApN,EAAA2qB,kBAAAvd,EAAA,GACAi3B,GAAArkC,EAAAoN,EAAA4R,EAAAolB,GAUO,SAAAC,GAAArkC,EAAAoN,EAAA4R,EAAAolB,GACP,QAAA/tD,IAAA+2B,EAAA,CACA,IAAAk3B,EAAAtkC,EAAAurB,cACA2B,EAAAltB,EAAAsrB,iBACAj1C,IAAAiuD,GAAApX,GAAAkX,EAAA,EACApkC,EAAAwrB,QAAA,CACApe,WACAuR,OAAAK,EACAmN,SAAAiY,EACAhY,OAAgB9d,KAGhBtO,EAAA0e,OAAAtR,EAAA4R,IAgCO,SAAAulB,GAAAvkC,EAAAqN,EAAA2R,EAAAolB,GACP,IAAAjX,EAAAntB,EAAAirB,gBACAnZ,EAAA9R,EAAAgrB,oBAAAmC,EAAA9f,EAAA,GAEA,QAAAh3B,IAAAy7B,EAAA,CACA,IAAAyX,EAAAvpB,EAAAyuB,iBACA3c,EAAiBzF,GACjByF,EACA9R,EAAAkuB,oBAAA3E,IAAAhzC,OAAA,GACAypB,EAAAiuB,oBAAA1E,EAAA,IAMA,GAAAvK,QAAA3oC,IAAAy7B,OAAAqb,EAAA,CACA,IAAAD,EAAAltB,EAAAsrB,YACA3+B,EAAAqT,EAAA+sB,oBAAAjb,EAAAkN,GACAryB,EAAAqT,EAAAytB,gBAAA9gC,GAEAqyB,EAAA,EACAlN,EAAAob,EAAA,GAAAC,EAAAxgC,EAAA,KACAmlB,EAAAqb,IACArb,EAAAob,EAAA,GAAAC,EAAAxgC,EAAA,KACAmlB,EAAAqb,IAIAqX,GAAAxkC,EAAA8R,EAAAkN,EAAAolB,GAUO,SAAAI,GAAAxkC,EAAA8R,EAAAkN,EAAAolB,GACP,GAAAtyB,EAAA,CACA,IAAAqb,EAAAntB,EAAAirB,gBACAiC,EAAAltB,EAAAsrB,YACA,QAAAj1C,IAAA82C,GAAAD,GACApb,IAAAqb,GAAAiX,EACApkC,EAAAwrB,QAAA,CACA1Z,aACA6M,OAAAK,EACAmN,SAAAiY,EACAhY,OAAgB9d,SAEX,CACL,GAAA0Q,EAAA,CACA,IAAAryB,EAAAqT,EAAA+sB,oBAAAjb,EAAAkN,GACAhf,EAAA4rB,UAAAj/B,GAEAqT,EAAAkwB,cAAApe,KAKe,IAAA2yB,GA3NA,SAAAvvC,GACf,SAAAwvC,EAAA9qD,GACAsb,EAAApiB,KAAAwL,MAEA1E,EAAA4hD,cACAl9C,KAAAk9C,YAAA5hD,EAAA4hD,aAOAl9C,KAAAooB,KAAA,KAEApoB,KAAAqmD,WAAA,GAwDA,OArDAzvC,IAAAwvC,EAAAp2C,UAAA4G,GACAwvC,EAAA9xD,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACA8xD,EAAA9xD,UAAA2b,YAAAm2C,EAQAA,EAAA9xD,UAAA2oD,UAAA,WACA,OAA8Bj9C,KAAAzJ,IAAcovD,GAAmBC,SAQ/DQ,EAAA9xD,UAAAsrD,OAAA,WACA,OAAA5/C,KAAAooB,MASAg+B,EAAA9xD,UAAA4oD,YAAA,SAAAH,GACA,UASAqJ,EAAA9xD,UAAA+xD,UAAA,SAAAzwD,GACAoK,KAAAxJ,IAAamvD,GAAmBC,OAAAhwD,IAShCwwD,EAAA9xD,UAAA4lD,OAAA,SAAAn+C,GACAiE,KAAAooB,KAAArsB,GAGAqqD,EAtEe,CAuEbzvC,GChDF,SAAS2vC,GAAWvJ,GACpB,IAAAwJ,GAAA,EACA,GAAAxJ,EAAA5gD,MAA8Bwe,EAAmBlG,SAAA,CACjD,IAAAyE,EAA6C6jC,EAAA,cAC7ChhD,EAAAghD,EAAAhhD,IACAskC,EAAA0c,EAAAxjC,WACAwV,EAAA7V,EAAA8I,UAAAhiB,KAAAwmD,OAAAxmD,KAAAwmD,OAEIP,GADJlqD,EAAAwgD,UACextB,EAAAsR,EAAArgC,KAAAgkD,WACfjH,EAAA1pC,iBACAkzC,GAAA,EAEA,OAAAA,EAGe,IAAAE,GApDf,SAAAL,GACA,SAAAM,EAAA7uC,GACAuuC,EAAA5xD,KAAAwL,KAAA,CACAk9C,YAAmBoJ,KAGnB,IAAAhrD,EAAAuc,GAAA,GAMA7X,KAAAwmD,OAAAlrD,EAAAyzB,MAAAzzB,EAAAyzB,MAAA,EAMA/uB,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAQA,OAJAuY,IAAAM,EAAA12C,UAAAo2C,GACAM,EAAApyD,UAAAD,OAAA+K,OAAAgnD,KAAA9xD,WACAoyD,EAAApyD,UAAA2b,YAAAy2C,EAEAA,EA1BA,CA2BEP,ICJKQ,GAAA,SAAA5J,GACP,IAAA3jC,EAAqE2jC,EAAA,cACrE,OACA3jC,EAAA2I,UACA3I,EAAA6I,SAAA7I,EAAA0I,UACA1I,EAAA4I,UAYW4kC,GAAK,SAAA9yC,GAChB,OAAAA,EAAAlM,OAAAo0C,qBAAAphD,SAAAisD,eAWOC,GAAa/zC,EAwBbg0C,GAAA,SAAAhK,GACP,IAAA3jC,EAA4C2jC,EAAA,cAC5C,UAAA3jC,EAAAyD,UACQ7C,GAAUC,GAAGb,EAAA0I,UA2DdklC,GAAA,SAAAjK,GACP,IAAA3jC,EAAqE2jC,EAAA,cACrE,OACA3jC,EAAA2I,UACA3I,EAAA6I,SAAA7I,EAAA0I,WACA1I,EAAA4I,UA6BOilC,GAAA,SAAAlK,GACP,IAAA3jC,EAAqE2jC,EAAA,cACrE,OACA3jC,EAAA2I,UACA3I,EAAA6I,SAAA7I,EAAA0I,UACA1I,EAAA4I,UAYOklC,GAAA,SAAAnK,GACP,IACAoK,EADApK,EAAA3jC,cAAAxR,OACmCu/C,QACnC,MACA,UAAAA,GACA,WAAAA,GACA,aAAAA,GAWOC,GAAA,SAAArK,GACP,IAAAvhC,EAA4E,EAAAA,aAG5E,OAFE+O,QAAMxyB,IAAAyjB,EAAA,IAER,SAAAA,EAAAgC,aCvBO,SAAS6pC,GAAQC,GAIxB,IAHA,IAAArvD,EAAAqvD,EAAArvD,OACA8lB,EAAA,EACAE,EAAA,EACAjmB,EAAA,EAAiBA,EAAAC,EAAYD,IAC7B+lB,GAAAupC,EAAAtvD,GAAA+lB,QACAE,GAAAqpC,EAAAtvD,GAAAimB,QAEA,OAAAF,EAAA9lB,EAAAgmB,EAAAhmB,GAiBe,IAAAsvD,GA1LO,SAAAnB,GACtB,SAAAoB,EAAA3vC,GAEA,IAAAvc,EAAAuc,GAAA,GAEAuuC,EAAA5xD,KAA8EwL,KAAA,GAE9E1E,EAAAmsD,kBACAznD,KAAAynD,gBAAAnsD,EAAAmsD,iBAGAnsD,EAAAosD,kBACA1nD,KAAA0nD,gBAAApsD,EAAAosD,iBAGApsD,EAAAqsD,kBACA3nD,KAAA2nD,gBAAArsD,EAAAqsD,iBAGArsD,EAAAssD,gBACA5nD,KAAA4nD,cAAAtsD,EAAAssD,eAGAtsD,EAAAusD,WACA7nD,KAAA6nD,SAAAvsD,EAAAusD,UAOA7nD,KAAA8nD,wBAAA,EAMA9nD,KAAA+nD,iBAAA,GAMA/nD,KAAAgoD,eAAA,GA8GA,OA1GA5B,IAAAoB,EAAAx3C,UAAAo2C,GACAoB,EAAAlzD,UAAAD,OAAA+K,OAAAgnD,KAAA9xD,WACAkzD,EAAAlzD,UAAA2b,YAAAu3C,EAQAA,EAAAlzD,UAAAmzD,gBAAA,SAAA1K,GACA,UAQAyK,EAAAlzD,UAAAozD,gBAAA,SAAA3K,KASAyK,EAAAlzD,UAAA4oD,YAAA,SAAAH,GACA,IAAoE,eACpE,SAGA,IAAAwJ,GAAA,EAEA,GADAvmD,KAAAioD,uBAAAlL,GACA/8C,KAAA8nD,wBACA,GAAA/K,EAAA5gD,MAAkCwe,EAAmBE,YACrD7a,KAAA0nD,gBAAA3K,QACO,GAAAA,EAAA5gD,MAAkCwe,EAAmBK,UAAA,CAC5D,IAAAktC,EAAAloD,KAAA4nD,cAAA7K,GACA/8C,KAAA8nD,uBAAAI,GAAAloD,KAAAgoD,eAAA/vD,OAAA,QAGA,GAAA8kD,EAAA5gD,MAAkCwe,EAAmBI,YAAA,CACrD,IAAAotC,EAAAnoD,KAAAynD,gBAAA1K,GACAoL,GACApL,EAAA1pC,iBAEArT,KAAA8nD,uBAAAK,EACA5B,EAAAvmD,KAAA6nD,SAAAM,QACOpL,EAAA5gD,MAAkCwe,EAAmBG,aAC5D9a,KAAA2nD,gBAAA5K,GAGA,OAAAwJ,GAQAiB,EAAAlzD,UAAAqzD,gBAAA,SAAA5K,KAQAyK,EAAAlzD,UAAAszD,cAAA,SAAA7K,GACA,UASAyK,EAAAlzD,UAAAuzD,SAAA,SAAAM,GACA,OAAAA,GAOAX,EAAAlzD,UAAA2zD,uBAAA,SAAAlL,GACA,GA0CA,SAAAA,GACA,IAAA5gD,EAAA4gD,EAAA5gD,KACA,OAAAA,IAAkBwe,EAAmBI,aACrC5e,IAAawe,EAAmBE,aAChC1e,IAAawe,EAAmBK,UA9ChCotC,CAAArL,GAAA,CACA,IAAAjpC,EAAAipC,EAAAvhC,aAEAliB,EAAAwa,EAAAwJ,UAAAhX,WACAy2C,EAAA5gD,MAAkCwe,EAAmBK,iBACrDhb,KAAA+nD,iBAAAzuD,GACOyjD,EAAA5gD,MACGwe,EAAmBI,YAC7B/a,KAAA+nD,iBAAAzuD,GAAAwa,EACOxa,KAAA0G,KAAA+nD,mBAEP/nD,KAAA+nD,iBAAAzuD,GAAAwa,GAEA9T,KAAAgoD,eAA4Bl3C,EAAS9Q,KAAA+nD,oBAIrCP,EAzJsB,CA0JpBrB,IC1BakC,GApJJ,SAAAb,GACX,SAAAc,EAAAzwC,GAEA2vC,EAAAhzD,KAAAwL,KAAA,CACA6nD,SAAgB70C,IAGhB,IAAA1X,EAAAuc,GAAA,GAMA7X,KAAAuoD,SAAAjtD,EAAAktD,QAKAxoD,KAAAyoD,aAAA,KAKAzoD,KAAA0oD,mBAKA1oD,KAAA2oD,UAAA,EAMA3oD,KAAA4oD,WAAAttD,EAAAutD,UAAAvtD,EAAAutD,UAA8D7B,GAM9DhnD,KAAA8oD,YAAA,EAyGA,OArGAtB,IAAAc,EAAAt4C,UAAAw3C,GACAc,EAAAh0D,UAAAD,OAAA+K,OAAAooD,KAAAlzD,WACAg0D,EAAAh0D,UAAA2b,YAAAq4C,EAKAA,EAAAh0D,UAAAozD,gBAAA,SAAA3K,GACA/8C,KAAA2oD,WACA3oD,KAAA2oD,UAAA,EACA3oD,KAAA4/C,SAAArD,UAAAxO,QAAsC9e,GAAQ,IAE9C,IAAA+4B,EAAAhoD,KAAAgoD,eACAe,EAAmB1B,GAAoBW,GACvC,GAAAA,EAAA/vD,QAAA+H,KAAA0oD,oBAIA,GAHA1oD,KAAAuoD,UACAvoD,KAAAuoD,SAAAnuD,OAAA2uD,EAAA,GAAAA,EAAA,IAEA/oD,KAAAyoD,aAAA,CACA,IAAAj0B,EAAAx0B,KAAAyoD,aAAA,GAAAM,EAAA,GACAt0B,EAAAs0B,EAAA,GAAA/oD,KAAAyoD,aAAA,GAEA/mC,EADAq7B,EAAAhhD,IACAwgD,UACAluC,EAAA,CAAAmmB,EAAAC,GACQ/E,GAAerhB,EAAAqT,EAAAirB,iBACfvd,GAAgB/gB,EAAAqT,EAAAurB,eAChB9d,GAAa9gB,EAAAqT,EAAAsrB,aACrB3+B,EAAAqT,EAAAytB,gBAAA9gC,GACAqT,EAAA4rB,UAAAj/B,SAEKrO,KAAAuoD,UAGLvoD,KAAAuoD,SAAAzlC,QAEA9iB,KAAAyoD,aAAAM,EACA/oD,KAAA0oD,mBAAAV,EAAA/vD,QAMAqwD,EAAAh0D,UAAAszD,cAAA,SAAA7K,GACA,IAAAhhD,EAAAghD,EAAAhhD,IACA2lB,EAAA3lB,EAAAwgD,UACA,OAAAv8C,KAAAgoD,eAAA/vD,OAAA,CACA,IAAA+H,KAAA8oD,YAAA9oD,KAAAuoD,UAAAvoD,KAAAuoD,SAAAxlC,MAAA,CACA,IAAAimC,EAAAhpD,KAAAuoD,SAAA1yB,cACAxG,EAAArvB,KAAAuoD,SAAA9C,WACAp3C,EAAuEqT,EAAAsrB,YACvEic,EAAAltD,EAAAogD,uBAAA9tC,GACAsnB,EAAA55B,EAAAyd,uBAAA,CACAyvC,EAAA,GAAAD,EAAA9oD,KAAAqvB,IAAAF,GACA45B,EAAA,GAAAD,EAAA9oD,KAAAuvB,IAAAJ,KAEA3N,EAAAwrB,QAAA,CACA7+B,OAAAqT,EAAAytB,gBAAAxZ,GACAkY,SAAA,IACAC,OAAkB9d,KAOlB,OAJAhwB,KAAA2oD,WACA3oD,KAAA2oD,UAAA,EACAjnC,EAAAqsB,QAAqB9e,IAAQ,KAE7B,EAQA,OANAjvB,KAAAuoD,UAGAvoD,KAAAuoD,SAAAzlC,QAEA9iB,KAAAyoD,aAAA,MACA,GAOAH,EAAAh0D,UAAAmzD,gBAAA,SAAA1K,GACA,GAAA/8C,KAAAgoD,eAAA/vD,OAAA,GAAA+H,KAAA4oD,WAAA7L,GAAA,CACA,IACAr7B,EADAq7B,EAAAhhD,IACAwgD,UAYA,OAXAv8C,KAAAyoD,aAAA,KAEA/mC,EAAAssB,gBACAtsB,EAAA4rB,UAAAyP,EAAAhkC,WAAAylC,UAAAnwC,QAEArO,KAAAuoD,UACAvoD,KAAAuoD,SAAAzlC,QAIA9iB,KAAA8oD,WAAA9oD,KAAAgoD,eAAA/vD,OAAA,GACA,EAEA,UAIAqwD,EAjJW,CAkJTf,IC5Ca2B,GAjGD,SAAA1B,GACd,SAAA2B,EAAAtxC,GAEA,IAAAvc,EAAAuc,GAAA,GAEA2vC,EAAAhzD,KAAAwL,KAAA,CACA6nD,SAAgB70C,IAOhBhT,KAAA4oD,WAAAttD,EAAAutD,UAAAvtD,EAAAutD,UAA8DlC,GAM9D3mD,KAAAopD,gBAAArxD,EAMAiI,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAqEA,OAjEA2Z,IAAA2B,EAAAn5C,UAAAw3C,GACA2B,EAAA70D,UAAAD,OAAA+K,OAAAooD,KAAAlzD,WACA60D,EAAA70D,UAAA2b,YAAAk5C,EAKAA,EAAA70D,UAAAozD,gBAAA,SAAA3K,GACA,GAASqK,GAASrK,GAAlB,CAIA,IAAAhhD,EAAAghD,EAAAhhD,IACA2lB,EAAA3lB,EAAAwgD,UACA,GAAA76B,EAAA4tB,iBAAAxgB,WAA2CD,GAA3C,CAGA,IAAA4E,EAAA13B,EAAAugD,UACAnqB,EAAA4qB,EAAA1jC,MACAkzB,EACArsC,KAAAo2B,MAAA7C,EAAA,KAAAtB,EAAA,GAAAA,EAAA,GAAAsB,EAAA,MACA,QAAA17B,IAAAiI,KAAAopD,WAAA,CACA,IAAAr6B,EAAAwd,EAAAvsC,KAAAopD,WACAt6B,EAAApN,EAAAurB,cACM8Y,GAAwBrkC,EAAAoN,EAAAC,GAE9B/uB,KAAAopD,WAAA7c,KAOA4c,EAAA70D,UAAAszD,cAAA,SAAA7K,GACA,IAASqK,GAASrK,GAClB,SAGA,IACAr7B,EADAq7B,EAAAhhD,IACAwgD,UACA76B,EAAAqsB,QAAiB9e,IAAQ,GACzB,IAAAH,EAAApN,EAAAurB,cAEA,OADI4Y,GAAMnkC,EAAAoN,OAAA/2B,EAAAiI,KAAAgkD,YACV,GAOAmF,EAAA70D,UAAAmzD,gBAAA,SAAA1K,GACA,QAASqK,GAASrK,QAIVgK,GAAiBhK,KAAA/8C,KAAA4oD,WAAA7L,MACzBA,EAAAhhD,IACAwgD,UAAAxO,QAA4B9e,GAAQ,GACpCjvB,KAAAopD,gBAAArxD,GACA,KAMAoxD,EA9Fc,CA+FZ5B,ICIa8B,GA1HF,SAAA71C,GACb,SAAA81C,EAAAhR,GACA9kC,EAAAhf,KAAAwL,MAMAA,KAAAupD,UAAA,KAMAvpD,KAAA2mB,SAA8C/rB,SAAAC,cAAA,OAC9CmF,KAAA2mB,SAAAzd,MAAA4oC,SAAA,WACA9xC,KAAA2mB,SAAA2xB,UAAA,UAAAA,EAMAt4C,KAAAooB,KAAA,KAMApoB,KAAAwpD,YAAA,KAMAxpD,KAAAypD,UAAA,KAoFA,OAhFAj2C,IAAA81C,EAAAt5C,UAAAwD,GACA81C,EAAAh1D,UAAAD,OAAA+K,OAAAoU,KAAAlf,WACAg1D,EAAAh1D,UAAA2b,YAAAq5C,EAKAA,EAAAh1D,UAAAue,gBAAA,WACA7S,KAAAk6C,OAAA,OAMAoP,EAAAh1D,UAAAo1D,QAAA,WACA,IAAAC,EAAA3pD,KAAAwpD,YACAI,EAAA5pD,KAAAypD,UAEAvgD,EAAAlJ,KAAA2mB,SAAAzd,MACAA,EAAA/G,KAAAjC,KAAAuB,IAAAkoD,EAAA,GAAAC,EAAA,IAFA,KAGA1gD,EAAA4yC,IAAA57C,KAAAuB,IAAAkoD,EAAA,GAAAC,EAAA,IAHA,KAIA1gD,EAAAiZ,MAAAjiB,KAAAie,IAAAyrC,EAAA,GAAAD,EAAA,IAJA,KAKAzgD,EAAAlH,OAAA9B,KAAAie,IAAAyrC,EAAA,GAAAD,EAAA,IALA,MAWAL,EAAAh1D,UAAA4lD,OAAA,SAAAn+C,GACA,GAAAiE,KAAAooB,KAAA,CACApoB,KAAAooB,KAAAo0B,sBAAA5yC,YAAA5J,KAAA2mB,UACA,IAAAzd,EAAAlJ,KAAA2mB,SAAAzd,MACAA,EAAA/G,KAAA+G,EAAA4yC,IAAA5yC,EAAAiZ,MAAAjZ,EAAAlH,OAAA,UAEAhC,KAAAooB,KAAArsB,EACAiE,KAAAooB,MACApoB,KAAAooB,KAAAo0B,sBAAAvhD,YAAA+E,KAAA2mB,WAQA2iC,EAAAh1D,UAAAu1D,UAAA,SAAAF,EAAAC,GACA5pD,KAAAwpD,YAAAG,EACA3pD,KAAAypD,UAAAG,EACA5pD,KAAA8pD,yBACA9pD,KAAA0pD,WAMAJ,EAAAh1D,UAAAw1D,uBAAA,WACA,IAAAH,EAAA3pD,KAAAwpD,YACAI,EAAA5pD,KAAAypD,UAOAz4B,EANA,CACA24B,EACA,CAAAA,EAAA,GAAAC,EAAA,IACAA,EACA,CAAAA,EAAA,GAAAD,EAAA,KAEA5tD,IAAAiE,KAAAooB,KAAA5O,uBAAAxZ,KAAAooB,MAEA4I,EAAA,GAAAA,EAAA,GAAAl1B,QACAkE,KAAAupD,UAGAvpD,KAAAupD,UAAAzpB,eAAA,CAAA9O,IAFAhxB,KAAAupD,UAAA,IAA2B3gB,GAAO,CAAA5X,KASlCs4B,EAAAh1D,UAAAy1D,YAAA,WACA,OAAA/pD,KAAAupD,WAGAD,EAtHa,CAuHXx2C,GCxFFk3C,GAMA,WANAA,GAaA,UAbAA,GAoBA,SASAC,GAAA,SAAA/2C,GACA,SAAA+2C,EAAA9tD,EAAAod,EAAAwjC,GACA7pC,EAAA1e,KAAAwL,KAAA7D,GAQA6D,KAAAuZ,aAOAvZ,KAAA+8C,kBAQA,OAJA7pC,IAAA+2C,EAAAj6C,UAAAkD,GACA+2C,EAAA31D,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACA21D,EAAA31D,UAAA2b,YAAAg6C,EAEAA,EAzBA,CA0BE32C,GCzBF,SAAA42C,KACA,ItD0LOl5B,EAAAK,EsD1LPt1B,EAAAiE,KAAA4/C,SACAl+B,EAAsD3lB,EAAAwgD,UACtD9oB,EAAmD13B,EAAAugD,UACnDrrB,EAAAjxB,KAAA+pD,cAAA7xB,YAEA,GAAAl4B,KAAAmqD,KAAA,CACA,IAAAC,EAAA1oC,EAAA+tB,gBAAAhc,GACA42B,GtDmLOr5B,EsDnL+C,CACtDj1B,EAAAogD,uBAAiCvpB,GAAa3B,IAC9Cl1B,EAAAogD,uBAAiCrpB,GAAW7B,KtDmL5CuB,GADAR,GAAAX,GACAL,IsDhLIuD,GAAe61B,EAAA,EAFnB1oC,EAAA0uB,uBAAAia,EAAA52B,IAGAxC,EAAAm5B,EAGA,IAAA52B,EAAA9R,EAAAgrB,oBACAhrB,EAAA0uB,uBAAAnf,EAAAwC,IAEAplB,EAAe+kB,GAASnC,GACxB5iB,EAAAqT,EAAAytB,gBAAA9gC,GAEAqT,EAAAwrB,QAAA,CACA1Z,aACAnlB,SACAw/B,SAAA7tC,KAAAgkD,UACAlW,OAAY9d,KAKG,IAAAs6B,GApEH,SAAAC,GACZ,SAAAC,EAAA3yC,GACA,IAAAvc,EAAAuc,GAAA,GAEAgxC,EAAAvtD,EAAAutD,UAAAvtD,EAAAutD,UAA4D5B,GAE5DsD,EAAA/1D,KAAAwL,KAAA,CACA6oD,YACAvQ,UAAAh9C,EAAAg9C,WAAA,cACA4R,cAOAlqD,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAMA7tC,KAAAmqD,UAAApyD,IAAAuD,EAAAyqB,KAAAzqB,EAAAyqB,IAOA,OAJAwkC,IAAAC,EAAAx6C,UAAAu6C,GACAC,EAAAl2D,UAAAD,OAAA+K,OAAAmrD,KAAAj2D,WACAk2D,EAAAl2D,UAAA2b,YAAAu6C,EAEAA,EA7BY,CD8ED,SAAAhD,GACX,SAAA+C,EAAA1yC,GAEA2vC,EAAAhzD,KAAAwL,MAEA,IAAA1E,EAAAuc,GAAA,GAMA7X,KAAAyqD,KAAA,IAAoBpB,GAAS/tD,EAAAg9C,WAAA,cAM7Bt4C,KAAA0qD,cAAA3yD,IAAAuD,EAAAwJ,QAAAxJ,EAAAwJ,QAAA,GAOA9E,KAAA2qD,UAAArvD,EAAA4uD,SAAA5uD,EAAA4uD,SAA2Dj3C,EAM3DjT,KAAAwpD,YAAA,KAMAxpD,KAAA4oD,WAAAttD,EAAAutD,UAAAvtD,EAAAutD,UAA8D/B,GAM9D9mD,KAAA4qD,iBAAAtvD,EAAAuvD,gBACAvvD,EAAAuvD,gBAAA7qD,KAAA8qD,uBAoFA,OAjFAtD,IAAA+C,EAAAv6C,UAAAw3C,GACA+C,EAAAj2D,UAAAD,OAAA+K,OAAAooD,KAAAlzD,WACAi2D,EAAAj2D,UAAA2b,YAAAs6C,EAWAA,EAAAj2D,UAAAw2D,uBAAA,SAAA/N,EAAA4M,EAAAC,GACA,IAAAznC,EAAAynC,EAAA,GAAAD,EAAA,GACA3nD,EAAA4nD,EAAA,GAAAD,EAAA,GACA,OAAAxnC,IAAAngB,KAAAhC,KAAA0qD,UAQAH,EAAAj2D,UAAAy1D,YAAA,WACA,OAAA/pD,KAAAyqD,KAAAV,eAMAQ,EAAAj2D,UAAAozD,gBAAA,SAAA3K,GACSqK,GAASrK,KAIlB/8C,KAAAyqD,KAAAZ,UAAA7pD,KAAAwpD,YAAAzM,EAAA1jC,OAEArZ,KAAA6T,cAAA,IAAAo2C,GAAAD,GACAjN,EAAAxjC,WAAAwjC,MAMAwN,EAAAj2D,UAAAszD,cAAA,SAAA7K,GACA,OAASqK,GAASrK,KAIlB/8C,KAAAyqD,KAAAvQ,OAAA,MAEAl6C,KAAA4qD,iBAAA7N,EAAA/8C,KAAAwpD,YAAAzM,EAAA1jC,SACArZ,KAAA2qD,UAAA5N,GACA/8C,KAAA6T,cAAA,IAAAo2C,GAAAD,GACAjN,EAAAxjC,WAAAwjC,MAEA,IAMAwN,EAAAj2D,UAAAmzD,gBAAA,SAAA1K,GACA,QAASqK,GAASrK,QAIVgK,GAAiBhK,KACzB/8C,KAAA4oD,WAAA7L,MACA/8C,KAAAwpD,YAAAzM,EAAA1jC,MACArZ,KAAAyqD,KAAAvQ,OAAA6C,EAAAhhD,KACAiE,KAAAyqD,KAAAZ,UAAA7pD,KAAAwpD,YAAAxpD,KAAAwpD,aACAxpD,KAAA6T,cAAA,IAAAo2C,GAAAD,GACAjN,EAAAxjC,WAAAwjC,KACA,KAMAwN,EA/HW,CAgIThD,KEtOawD,GAAA,CACfj6B,KAAA,GACAk6B,GAAA,GACAp6B,MAAA,GACAq6B,KAAA,ICiFA,SAASC,GAAWnO,GACpB,IAAAwJ,GAAA,EACA,GAAAxJ,EAAA5gD,MAA8BiY,EAASU,QAAA,CACvC,IACAq2C,EAD4CpO,EAAA,cAC5CoO,QACA,GAAAnrD,KAAA4oD,WAAA7L,KACAoO,GAAoBJ,GAAOE,MAC3BE,GAAmBJ,GAAOj6B,MAC1Bq6B,GAAmBJ,GAAOn6B,OAC1Bu6B,GAAmBJ,GAAOC,IAAA,CAC1B,IACAtpC,EADAq7B,EAAAhhD,IACAwgD,UACA6O,EAAA1pC,EAAAirB,gBAAA3sC,KAAAqrD,YACA72B,EAAA,EAAAC,EAAA,EACA02B,GAAqBJ,GAAOE,KAC5Bx2B,GAAA22B,EACOD,GAAqBJ,GAAOj6B,KACnC0D,GAAA42B,EACOD,GAAqBJ,GAAOn6B,MACnC4D,EAAA42B,EAEA32B,EAAA22B,EAEA,IAAAr8B,EAAA,CAAAyF,EAAAC,GACMrF,GAAgBL,EAAArN,EAAAurB,eVLf,SAAAvrB,EAAAqN,EAAA+2B,GACP,IAAAlX,EAAAltB,EAAAsrB,YACA,GAAA4B,EAAA,CACA,IAAAvgC,EAAAqT,EAAAytB,gBACA,CAAAP,EAAA,GAAA7f,EAAA,GAAA6f,EAAA,GAAA7f,EAAA,KACA+2B,EACApkC,EAAAwrB,QAAA,CACAW,SAAAiY,EACAhY,OAAgB5d,GAChB7hB,WAGAqT,EAAA4rB,UAAAj/B,IUNMi9C,CAAG5pC,EAAAqN,EAAA/uB,KAAAgkD,WACTjH,EAAA1pC,iBACAkzC,GAAA,GAGA,OAAAA,EAGe,IAAAgF,GA1FA,SAAAnF,GACf,SAAAoF,EAAA3zC,GAEAuuC,EAAA5xD,KAAAwL,KAAA,CACAk9C,YAAmBgO,KAGnB,IAAA5vD,EAAAuc,GAAA,GAOA7X,KAAAyrD,kBAAA,SAAA1O,GACA,OAAaiK,GAAcjK,IACnBmK,GAAiBnK,IAOzB/8C,KAAA4oD,gBAAA7wD,IAAAuD,EAAAutD,UACAvtD,EAAAutD,UAAA7oD,KAAAyrD,kBAMAzrD,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAMA7tC,KAAAqrD,iBAAAtzD,IAAAuD,EAAAowD,WACApwD,EAAAowD,WAAA,IAQA,OAJAtF,IAAAoF,EAAAx7C,UAAAo2C,GACAoF,EAAAl3D,UAAAD,OAAA+K,OAAAgnD,KAAA9xD,WACAk3D,EAAAl3D,UAAA2b,YAAAu7C,EAEAA,EA7Ce,CA8CbrF,ICLF,SAASwF,GAAW5O,GACpB,IAAAwJ,GAAA,EACA,GAAAxJ,EAAA5gD,MAA8BiY,EAASU,SACvCioC,EAAA5gD,MAA8BiY,EAASW,SAAA,CACvC,IACA62C,EAD4C7O,EAAA,cAC5C6O,SACA,GAAA5rD,KAAA4oD,WAAA7L,KACA6O,GAAA,IAAAC,WAAA,IAAAD,GAAA,IAAAC,WAAA,KACA,IAAA9vD,EAAAghD,EAAAhhD,IACAgzB,EAAA68B,GAAA,IAAAC,WAAA,GAAA7rD,KAAAwmD,QAAAxmD,KAAAwmD,OAEMP,GADNlqD,EAAAwgD,UACiBxtB,OAAAh3B,EAAAiI,KAAAgkD,WACjBjH,EAAA1pC,iBACAkzC,GAAA,GAGA,OAAAA,EAGe,IAAAuF,GAhEC,SAAA1F,GAChB,SAAA2F,EAAAl0C,GAEAuuC,EAAA5xD,KAAAwL,KAAA,CACAk9C,YAAmByO,KAGnB,IAAArwD,EAAAuc,GAAA,GAMA7X,KAAA4oD,WAAAttD,EAAAutD,UAAAvtD,EAAAutD,UAA8D3B,GAM9DlnD,KAAAwmD,OAAAlrD,EAAAyzB,MAAAzzB,EAAAyzB,MAAA,EAMA/uB,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAQA,OAJAuY,IAAA2F,EAAA/7C,UAAAo2C,GACA2F,EAAAz3D,UAAAD,OAAA+K,OAAAgnD,KAAA9xD,WACAy3D,EAAAz3D,UAAA2b,YAAA87C,EAEAA,EAjCgB,CAkCd5F,IC5CK6F,GACP,WADOA,GAEP,QAkSeC,GAxQG,SAAA7F,GAClB,SAAA8F,EAAAr0C,GAEA,IAAAvc,EAAAuc,GAAA,GAEAuuC,EAAA5xD,KAA8EwL,KAAA,GAM9EA,KAAAwmD,OAAA,EAMAxmD,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAMA7tC,KAAAmsD,cAAAp0D,IAAAuD,EAAAtB,QAAAsB,EAAAtB,QAAA,GAMAgG,KAAAosD,gBAAAr0D,IAAAuD,EAAA+wD,WAAA/wD,EAAA+wD,UAMArsD,KAAAssD,qBAAAhxD,EAAAoxC,sBAAA,EAMA1sC,KAAA4oD,WAAAttD,EAAAutD,UAAAvtD,EAAAutD,UAA8D/B,GAM9D9mD,KAAAusD,YAAA,KAMAvsD,KAAAwsD,gBAAAz0D,EAMAiI,KAAAysD,WAMAzsD,KAAA0sD,WAAA30D,EAOAiI,KAAA2sD,kBAAA,IAKA3sD,KAAA4sD,mBAOA5sD,KAAA6sD,sBAAA,IAOA7sD,KAAA8sD,oBAAA,IA0KA,OAtKA1G,IAAA8F,EAAAl8C,UAAAo2C,GACA8F,EAAA53D,UAAAD,OAAA+K,OAAAgnD,KAAA9xD,WACA43D,EAAA53D,UAAA2b,YAAAi8C,EAKAA,EAAA53D,UAAAy4D,0BAAA,WACA/sD,KAAA4sD,wBAAA70D,EACAiI,KAAA4/C,SAAArD,UACAxO,QAAiB9e,IAAQ,IAQzBi9B,EAAA53D,UAAA4oD,YAAA,SAAAH,GACA,IAAA/8C,KAAA4oD,WAAA7L,GACA,SAEA,IAAA5gD,EAAA4gD,EAAA5gD,KACA,GAAAA,IAAiBiY,EAASuB,OAAAxZ,IAAmBiY,EAASiB,WACtD,SAGA0nC,EAAA1pC,iBAEA,IASA0b,EATAhzB,EAAAghD,EAAAhhD,IACAixD,EAA2CjQ,EAAA,cAyB3C,GAvBA/8C,KAAAosD,aACApsD,KAAAusD,YAAAxP,EAAAxjC,YAMAwjC,EAAA5gD,MAAgCiY,EAASuB,OACzCoZ,EAAAi+B,EAAAv4B,OACU3a,GACVkzC,EAAAC,YAAAC,WAAAC,kBACAp+B,GAAiB7U,GAEjB8yC,EAAAC,YAAAC,WAAAE,iBACAr+B,GAAA,KAEKguB,EAAA5gD,MAAkCiY,EAASiB,aAChD0Z,GAAAi+B,EAAAK,YACUtzC,IACVgV,GAAA,IAIA,IAAAA,EACA,SAGA,IAAA2e,EAAAD,KAAAC,MAYA,QAVA31C,IAAAiI,KAAAwsD,aACAxsD,KAAAwsD,WAAA9e,KAGA1tC,KAAA0sD,OAAAhf,EAAA1tC,KAAAwsD,WAAAxsD,KAAA2sD,qBACA3sD,KAAA0sD,MAAAxsD,KAAAie,IAAA4Q,GAAA,EACAi9B,GACAA,IAGAhsD,KAAA0sD,QAAAV,GAAA,CACA,IAAAtqC,EAAA3lB,EAAAwgD,UACAv8C,KAAA4sD,mBACAznC,aAAAnlB,KAAA4sD,oBAEAlrC,EAAAqsB,QAAqB9e,GAAQ,GAE7BjvB,KAAA4sD,mBAAA3nC,WAAAjlB,KAAA+sD,0BAAAztD,KAAAU,WAAA2sD,mBACA,IAAAn5B,EAAA9R,EAAAirB,gBAAAzsC,KAAAiE,IAAA,EAAA4qB,EAAA/uB,KAAA6sD,uBACAhiB,EAAAnpB,EAAAkuB,mBACAhF,EAAAlpB,EAAAiuB,mBACA2d,EAAA,EAQA,GAPA95B,EAAAqX,GACArX,EAAAtzB,KAAAC,IAAAqzB,EAAAqX,EAAA7qC,KAAA8sD,qBACAQ,EAAA,GACO95B,EAAAoX,IACPpX,EAAAtzB,KAAAuB,IAAA+xB,EAAAoX,EAAA5qC,KAAA8sD,qBACAQ,GAAA,GAEAttD,KAAAusD,YAAA,CACA,IAAAl+C,EAAAqT,EAAA+sB,oBAAAjb,EAAAxzB,KAAAusD,aACA7qC,EAAA4rB,UAAA5rB,EAAAytB,gBAAA9gC,IA6BA,OA3BAqT,EAAAkwB,cAAApe,GAEA,IAAA85B,GAAAttD,KAAAssD,sBACA5qC,EAAAwrB,QAAA,CACA1Z,WAAA9R,EAAAgrB,oBAAAlZ,EAAAzE,EAAA,QACA+e,OAAkB9d,GAClBqQ,OAAArgC,KAAAusD,YACA1e,SAAA7tC,KAAAgkD,YAIAsJ,EAAA,EACA5rC,EAAAwrB,QAAA,CACA1Z,WAAAqX,EACAiD,OAAkB9d,GAClBqQ,OAAArgC,KAAAusD,YACA1e,SAAA,MAEOyf,EAAA,GACP5rC,EAAAwrB,QAAA,CACA1Z,WAAAoX,EACAkD,OAAkB9d,GAClBqQ,OAAArgC,KAAAusD,YACA1e,SAAA,MAGA7tC,KAAAwsD,WAAA9e,GACA,EAGA1tC,KAAAwmD,QAAAz3B,EAEA,IAAAw+B,EAAArtD,KAAAC,IAAAH,KAAAmsD,UAAAze,EAAA1tC,KAAAwsD,YAAA,GAKA,OAHArnC,aAAAnlB,KAAAysD,YACAzsD,KAAAysD,WAAAxnC,WAAAjlB,KAAAwtD,iBAAAluD,KAAAU,KAAAjE,GAAAwxD,IAEA,GAOArB,EAAA53D,UAAAk5D,iBAAA,SAAAzxD,GACA,IAAA2lB,EAAA3lB,EAAAwgD,UACA76B,EAAAssB,gBACAtsB,EAAAwsB,mBAII+X,GAAWvkC,GADCqM,GAAK/tB,KAAAwmD,QAjRrB,KAkRexmD,KAAAusD,YAAAvsD,KAAAgkD,WACfhkD,KAAA0sD,WAAA30D,EACAiI,KAAAwmD,OAAA,EACAxmD,KAAAusD,YAAA,KACAvsD,KAAAwsD,gBAAAz0D,EACAiI,KAAAysD,gBAAA10D,GASAm0D,EAAA53D,UAAAm5D,eAAA,SAAApB,GACArsD,KAAAosD,WAAAC,EACAA,IACArsD,KAAAusD,YAAA,OAIAL,EArQkB,CAsQhB/F,ICjJauH,GA/IA,SAAAlG,GACf,SAAAmG,EAAA91C,GAEA,IAAAvc,EAAAuc,GAAA,GAEA+1C,EAAmE,EAEnEA,EAAA/F,WACA+F,EAAA/F,SAAgC70C,GAGhCw0C,EAAAhzD,KAAAwL,KAAA4tD,GAMA5tD,KAAA6tD,QAAA,KAMA7tD,KAAAopD,gBAAArxD,EAMAiI,KAAA8tD,WAAA,EAMA9tD,KAAA+tD,eAAA,EAMA/tD,KAAAguD,gBAAAj2D,IAAAuD,EAAA2yD,UAAA3yD,EAAA2yD,UAAA,GAMAjuD,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IA6FA,OAzFA2Z,IAAAmG,EAAA39C,UAAAw3C,GACAmG,EAAAr5D,UAAAD,OAAA+K,OAAAooD,KAAAlzD,WACAq5D,EAAAr5D,UAAA2b,YAAA09C,EAKAA,EAAAr5D,UAAAozD,gBAAA,SAAA3K,GACA,IAAAmR,EAAA,EAEAC,EAAAnuD,KAAAgoD,eAAA,GACAoG,EAAApuD,KAAAgoD,eAAA,GAGA34B,EAAAnvB,KAAAo2B,MACA83B,EAAAnwC,QAAAkwC,EAAAlwC,QACAmwC,EAAArwC,QAAAowC,EAAApwC,SAEA,QAAAhmB,IAAAiI,KAAAopD,WAAA,CACA,IAAAr6B,EAAAM,EAAArvB,KAAAopD,WACAppD,KAAA+tD,gBAAAh/B,GACA/uB,KAAA8tD,WACA5tD,KAAAie,IAAAne,KAAA+tD,gBAAA/tD,KAAAguD,aACAhuD,KAAA8tD,WAAA,GAEAI,EAAAn/B,EAEA/uB,KAAAopD,WAAA/5B,EAEA,IAAAtzB,EAAAghD,EAAAhhD,IACA2lB,EAAA3lB,EAAAwgD,UACA,GAAA76B,EAAA4tB,iBAAAxgB,WAA2CD,GAA3C,CAOA,IAAA8sB,EAAA5/C,EAAA2sB,cAAAkzB,wBACAmN,EAAmB1B,GAAoBrnD,KAAAgoD,gBAMvC,GALAe,EAAA,IAAApN,EAAAx5C,KACA4mD,EAAA,IAAApN,EAAAG,IACA97C,KAAA6tD,QAAA9xD,EAAAyd,uBAAAuvC,GAGA/oD,KAAA8tD,UAAA,CACA,IAAAh/B,EAAApN,EAAAurB,cACAlxC,EAAA6hD,SACMmI,GAAwBrkC,EAAAoN,EAAAo/B,EAAAluD,KAAA6tD,YAO9BF,EAAAr5D,UAAAszD,cAAA,SAAA7K,GACA,GAAA/8C,KAAAgoD,eAAA/vD,OAAA,GACA,IACAypB,EADAq7B,EAAAhhD,IACAwgD,UAEA,GADA76B,EAAAqsB,QAAmB9e,IAAQ,GAC3BjvB,KAAA8tD,UAAA,CACA,IAAAh/B,EAAApN,EAAAurB,cACQ4Y,GAAMnkC,EAAAoN,EAAA9uB,KAAA6tD,QAAA7tD,KAAAgkD,WAEd,SAEA,UAOA2J,EAAAr5D,UAAAmzD,gBAAA,SAAA1K,GACA,GAAA/8C,KAAAgoD,eAAA/vD,QAAA,GACA,IAAA8D,EAAAghD,EAAAhhD,IAQA,OAPAiE,KAAA6tD,QAAA,KACA7tD,KAAAopD,gBAAArxD,EACAiI,KAAA8tD,WAAA,EACA9tD,KAAA+tD,eAAA,EACA/tD,KAAA8nD,wBACA/rD,EAAAwgD,UAAAxO,QAA8B9e,GAAQ,IAEtC,EAEA,UAIA0+B,EA5Ie,CA6IbpG,ICEa8G,GAhJF,SAAA7G,GACb,SAAA8G,EAAAz2C,GAEA,IAAAvc,EAAAuc,GAAA,GAEA+1C,EAAmE,EAEnEA,EAAA/F,WACA+F,EAAA/F,SAAgC70C,GAGhCw0C,EAAAhzD,KAAAwL,KAAA4tD,GAMA5tD,KAAAssD,qBAAAhxD,EAAAoxC,sBAAA,EAMA1sC,KAAA6tD,QAAA,KAMA7tD,KAAAgkD,eAAAjsD,IAAAuD,EAAAuyC,SAAAvyC,EAAAuyC,SAAA,IAMA7tC,KAAAuuD,mBAAAx2D,EAMAiI,KAAAwuD,gBAAA,EAoGA,OAhGAhH,IAAA8G,EAAAt+C,UAAAw3C,GACA8G,EAAAh6D,UAAAD,OAAA+K,OAAAooD,KAAAlzD,WACAg6D,EAAAh6D,UAAA2b,YAAAq+C,EAKAA,EAAAh6D,UAAAozD,gBAAA,SAAA3K,GACA,IAAA0R,EAAA,EAEAN,EAAAnuD,KAAAgoD,eAAA,GACAoG,EAAApuD,KAAAgoD,eAAA,GACA9pC,EAAAiwC,EAAApwC,QAAAqwC,EAAArwC,QACAK,EAAA+vC,EAAAlwC,QAAAmwC,EAAAnwC,QAGA+qC,EAAA9oD,KAAAsE,KAAA0Z,IAAAE,UAEArmB,IAAAiI,KAAAuuD,gBACAE,EAAAzuD,KAAAuuD,cAAAvF,GAEAhpD,KAAAuuD,cAAAvF,EAGA,IAAAjtD,EAAAghD,EAAAhhD,IACA2lB,EAAA3lB,EAAAwgD,UACA/oB,EAAA9R,EAAAirB,gBACA/B,EAAAlpB,EAAAiuB,mBACA9E,EAAAnpB,EAAAkuB,mBACAgV,EAAApxB,EAAAi7B,EACA7J,EAAAha,GACA6jB,EAAA7jB,EAAApX,EACAoxB,EAAAha,GACKga,EAAA/Z,IACL4jB,EAAA5jB,EAAArX,EACAoxB,EAAA/Z,GAGA,GAAA4jB,IACAzuD,KAAAwuD,gBAAAC,GAIA,IAAA9S,EAAA5/C,EAAA2sB,cAAAkzB,wBACAmN,EAAmB1B,GAAoBrnD,KAAAgoD,gBACvCe,EAAA,IAAApN,EAAAx5C,KACA4mD,EAAA,IAAApN,EAAAG,IACA97C,KAAA6tD,QAAA9xD,EAAAyd,uBAAAuvC,GAGAhtD,EAAA6hD,SACIsI,GAAsBxkC,EAAAkjC,EAAA5kD,KAAA6tD,UAM1BS,EAAAh6D,UAAAszD,cAAA,SAAA7K,GACA,GAAA/8C,KAAAgoD,eAAA/vD,OAAA,GACA,IACAypB,EADAq7B,EAAAhhD,IACAwgD,UACA76B,EAAAqsB,QAAmB9e,IAAQ,GAC3B,IAAAuE,EAAA9R,EAAAirB,gBACA,GAAA3sC,KAAAssD,sBACA94B,EAAA9R,EAAAkuB,oBACApc,EAAA9R,EAAAiuB,mBAAA,CAIA,IAAA/sB,EAAA5iB,KAAAwuD,gBAAA,Gd2CO,SAAA9sC,EAAA8R,EAAAkN,EAAAolB,EAAAzW,GACP7b,EAAA9R,EAAAgrB,oBAAAlZ,EAAA,EAAA6b,GACA6W,GAAAxkC,EAAA8R,EAAAkN,EAAAolB,Gc5CQv3C,CAAImT,EAAA8R,EAAAxzB,KAAA6tD,QAAA7tD,KAAAgkD,UAAAphC,GAEZ,SAEA,UAOA0rC,EAAAh6D,UAAAmzD,gBAAA,SAAA1K,GACA,GAAA/8C,KAAAgoD,eAAA/vD,QAAA,GACA,IAAA8D,EAAAghD,EAAAhhD,IAOA,OANAiE,KAAA6tD,QAAA,KACA7tD,KAAAuuD,mBAAAx2D,EACAiI,KAAAwuD,gBAAA,EACAxuD,KAAA8nD,wBACA/rD,EAAAwgD,UAAAxO,QAA8B9e,GAAQ,IAEtC,EAEA,UAIAq/B,EA7Ia,CA8IX/G,IC5JK,IAAAmH,GAAA,GCFQC,GAAA,CACfzkC,KAAA,EACAC,QAAA,EACAC,OAAA,EACAvV,MAAA,GCmFe+5C,GA7EA,SAAAC,GACf,SAAAC,EAAA79B,EAAAuC,EAAAkd,EAAA2B,EAAA0c,GAEA,IAAA1hC,OAAAt1B,IAAAg3D,EAA2CJ,GAAUzkC,KAAQykC,GAAUvkC,OAEvEykC,EAAAr6D,KAAAwL,KAAAixB,EAAAuC,EAAAkd,EAAArjB,GAOArtB,KAAAgvD,aAAAj3D,IAAAg3D,IAAA,KAMA/uD,KAAAivD,QAAA5c,EAMAryC,KAAAkvD,OAAA,KAiDA,OA7CAL,IAAAC,EAAA9+C,UAAA6+C,GACAC,EAAAx6D,UAAAD,OAAA+K,OAAAyvD,KAAAv6D,WACAw6D,EAAAx6D,UAAA2b,YAAA6+C,EAMAA,EAAAx6D,UAAA66D,SAAA,WACA,OAAAnvD,KAAAkvD,QAQAJ,EAAAx6D,UAAA86D,YAAA,SAAAp4D,GACAA,GACAgJ,KAAAkvD,OAAAl4D,EACAgJ,KAAAqtB,MAAmBshC,GAAU95C,OAE7B7U,KAAAqtB,MAAmBshC,GAAUvkC,OAE7BpqB,KAAAgW,WAMA84C,EAAAx6D,UAAA0O,KAAA,WACAhD,KAAAqtB,OAAsBshC,GAAUzkC,OAChClqB,KAAAqtB,MAAmBshC,GAAUxkC,QAC7BnqB,KAAAgW,UACAhW,KAAAgvD,QAAAhvD,KAAAovD,YAAA9vD,KAAAU,SAOA8uD,EAAAx6D,UAAA+6D,SAAA,WACA,OAAArvD,KAAAivD,SAGAH,EAzEe,CCPF,SAAAj5C,GACb,SAAAg5C,EAAA59B,EAAAuC,EAAAkd,EAAArjB,GAEAxX,EAAArhB,KAAAwL,MAMAA,KAAAixB,SAMAjxB,KAAAy3C,YAAA/G,EAMA1wC,KAAAwzB,aAMAxzB,KAAAqtB,QA2DA,OAvDAxX,IAAAg5C,EAAA7+C,UAAA6F,GACAg5C,EAAAv6D,UAAAD,OAAA+K,OAAAyW,KAAAvhB,WACAu6D,EAAAv6D,UAAA2b,YAAA4+C,EAKAA,EAAAv6D,UAAA0hB,QAAA,WACAhW,KAAA6T,cAAuBO,EAASC,SAMhCw6C,EAAAv6D,UAAA4jC,UAAA,WACA,OAAAl4B,KAAAixB,QAOA49B,EAAAv6D,UAAA+6D,SAAA,WACA,OAAW//C,KAMXu/C,EAAAv6D,UAAAg7D,cAAA,WACA,OAAAtvD,KAAAy3C,aAMAoX,EAAAv6D,UAAAq4C,cAAA,WACA,OAA6B3sC,KAAA,YAM7B6uD,EAAAv6D,UAAAg5B,SAAA,WACA,OAAAttB,KAAAqtB,OAOAwhC,EAAAv6D,UAAA0O,KAAA,WACIsM,KAGJu/C,EAtFa,CAuFXt7C,ICzFag8C,GAAA,CACfC,MAAA,QACAC,KAAA,OACAC,YAAA,cACAC,OAAA,UCEeC,GAAA,CACfJ,MAAA,QACAG,OAAA,UCkCeE,GA5Cf,SAAA38C,GACA,SAAA48C,EAAA3zD,EAAA4zD,EAAAj3C,EAAAk3C,EAAAC,GAEA/8C,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAkwD,cAAAH,EAOA/vD,KAAA+Y,WAAAD,EAQA9Y,KAAAmwD,QAAAH,EAQAhwD,KAAAowD,UAAAH,EAQA,OAJA/8C,IAAA48C,EAAA9/C,UAAAkD,GACA48C,EAAAx7D,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACAw7D,EAAAx7D,UAAA2b,YAAA6/C,EAEAA,EAzCA,CA0CEx8C,GC8Pa+8C,GAnRH,SAAAx6C,GACZ,SAAAy6C,EAAAC,GAEA16C,EAAArhB,KAAAwL,MAKAA,KAAAwwD,mBAAAz4D,IAAAw4D,IAAA,KAMAvwD,KAAAywD,OAAA,EAMAzwD,KAAA0wD,SAAA,GAMA1wD,KAAA2wD,QAAA,KAMA3wD,KAAA4wD,QAAA,KAgPA,OA5OA/6C,IAAAy6C,EAAAtgD,UAAA6F,GACAy6C,EAAAh8D,UAAAD,OAAA+K,OAAAyW,KAAAvhB,WACAg8D,EAAAh8D,UAAA2b,YAAAqgD,EAMAA,EAAAh8D,UAAAu8D,eAAA,WACA,OAAA7wD,KAAA0rB,WAAA1rB,KAAAwwD,eAOAF,EAAAh8D,UAAAiM,MAAA,WACAP,KAAAywD,OAAA,EACAzwD,KAAA0wD,SAAA,GACA1wD,KAAA2wD,QAAA,KACA3wD,KAAA4wD,QAAA,KACA5wD,KAAA6T,cAAuBO,EAASE,QAQhCg8C,EAAAh8D,UAAAw8D,YAAA,SAAAzxD,GACA,OAAAW,KAAA0wD,SAAAn8D,eAAA8K,IAYAixD,EAAAh8D,UAAAqJ,QAAA,SAAAya,EAAAhH,GAEA,IADA,IAAA2/C,EAAA/wD,KAAA2wD,QACAI,GACA34C,EAAA5jB,KAAA4c,EAAA2/C,EAAAC,OAAAD,EAAAE,KAAAjxD,MACA+wD,IAAAG,OASAZ,EAAAh8D,UAAAiC,IAAA,SAAA8I,GACA,IAAA0xD,EAAA/wD,KAAA0wD,SAAArxD,GAGA,OAFIkrB,QAAMxyB,IAAAg5D,EACV,IACAA,IAAA/wD,KAAA4wD,QACAG,EAAAC,QACKD,IAAA/wD,KAAA2wD,SACL3wD,KAAA2wD,QAAsC3wD,KAAA2wD,QAAA,MACtC3wD,KAAA2wD,QAAAQ,MAAA,OAEAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAI,MAAAnxD,KAAA4wD,QACA5wD,KAAA4wD,QAAAM,MAAAH,EACA/wD,KAAA4wD,QAAAG,EACAA,EAAAC,SASAV,EAAAh8D,UAAAgP,OAAA,SAAAjE,GACA,IAAA0xD,EAAA/wD,KAAA0wD,SAAArxD,GAkBA,OAjBIkrB,QAAMxyB,IAAAg5D,EAAA,IACVA,IAAA/wD,KAAA4wD,SACA5wD,KAAA4wD,QAAsCG,EAAA,MACtC/wD,KAAA4wD,UACA5wD,KAAA4wD,QAAAM,MAAA,OAEKH,IAAA/wD,KAAA2wD,SACL3wD,KAAA2wD,QAAsCI,EAAA,MACtC/wD,KAAA2wD,UACA3wD,KAAA2wD,QAAAQ,MAAA,QAGAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,cAEAlxD,KAAA0wD,SAAArxD,KACAW,KAAAywD,OACAM,EAAAC,QAOAV,EAAAh8D,UAAAo3B,SAAA,WACA,OAAA1rB,KAAAywD,QAOAH,EAAAh8D,UAAA0iB,QAAA,WACA,IAEA+5C,EAFArzD,EAAA,IAAAyY,MAAAnW,KAAAywD,QACAz4D,EAAA,EAEA,IAAA+4D,EAAA/wD,KAAA4wD,QAA8BG,EAAOA,IAAAI,MACrCzzD,EAAA1F,KAAA+4D,EAAAE,KAEA,OAAAvzD,GAOA4yD,EAAAh8D,UAAAwc,UAAA,WACA,IAEAigD,EAFAhgD,EAAA,IAAAoF,MAAAnW,KAAAywD,QACAz4D,EAAA,EAEA,IAAA+4D,EAAA/wD,KAAA4wD,QAA8BG,EAAOA,IAAAI,MACrCpgD,EAAA/Y,KAAA+4D,EAAAC,OAEA,OAAAjgD,GAOAu/C,EAAAh8D,UAAA88D,SAAA,WACA,OAAApxD,KAAA2wD,QAAAK,QAOAV,EAAAh8D,UAAA+8D,YAAA,WACA,OAAArxD,KAAA2wD,QAAAM,MAQAX,EAAAh8D,UAAAg9D,aAAA,WACA,OAAAtxD,KAAA4wD,QAAAK,MAOAX,EAAAh8D,UAAA4H,IAAA,WACA,IAAA60D,EAAA/wD,KAAA2wD,QAUA,cATA3wD,KAAA0wD,SAAAK,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAC,MAAA,MAEAnxD,KAAA2wD,QAAoCI,EAAA,MACpC/wD,KAAA2wD,UACA3wD,KAAA4wD,QAAA,QAEA5wD,KAAAywD,OACAM,EAAAC,QAQAV,EAAAh8D,UAAAwY,QAAA,SAAAzN,EAAA5I,GACAuJ,KAAAzJ,IAAA8I,GACAW,KAAA0wD,SAAArxD,GAAA2xD,OAAAv6D,GAQA65D,EAAAh8D,UAAAkC,IAAA,SAAA6I,EAAA5I,GACI8zB,KAAMlrB,KAAAW,KAAA0wD,UACV,IACA,IAAAK,EAAiC,CACjCE,KAAA5xD,EACA6xD,MAAA,KACAC,MAAAnxD,KAAA4wD,QACAI,OAAAv6D,GAEAuJ,KAAA4wD,QAGA5wD,KAAA4wD,QAAAM,MAAAH,EAFA/wD,KAAA2wD,QAAAI,EAIA/wD,KAAA4wD,QAAAG,EACA/wD,KAAA0wD,SAAArxD,GAAA0xD,IACA/wD,KAAAywD,QASAH,EAAAh8D,UAAA2qD,QAAA,SAAAxrB,GACAzzB,KAAAwwD,cAAA/8B,GAOA68B,EAAAh8D,UAAAi9D,MAAA,WACA,KAAAvxD,KAAA6wD,kBACA7wD,KAAA9D,OAIAo0D,EAhRY,CAiRV/8C,GCnNKi+C,GAAA,UAcAC,GAAA,GA4BAC,GAAA,UAqBAC,GAAA,UAgBAC,GAAA,IAAqBvB,GAMrBwB,GAAA,GAMPC,GAAA,KAMOC,GAAA,GAOAC,GAAA,WACP,IAMAC,EAAAC,EANAC,EAAA,GACAC,EAAAP,GACAp+B,EAAA,QACA4+B,EAAA,sBACAzvD,EAAAyvD,EAAAp6D,OACAq6D,EAAA,2BAGA,SAAAC,EAAApS,GAIA,IAHA,IAAAgQ,EAAAqC,KAGAC,EAAA,IAA0BA,GAAA,IAAeA,GAAA,KAGzC,IAFA,IAAAC,EAAAD,EAAA,IACAE,GAAA,EACA36D,EAAA,EAAqBA,EAAA4K,IAAS5K,EAAA,CAC9B,IAAA46D,EAAAP,EAAAr6D,GAGA,GAFAm4D,EAAAhQ,KAAAuS,EAAAj/B,EAAAm/B,EACAV,EAAA/B,EAAA0C,YAAAP,GAAAnwC,MACAg+B,GAAAyS,EAAA,CACAzC,EAAAhQ,KAAAuS,EAAAj/B,EAAA0sB,EAAA,IAAAyS,EACA,IAAAzwC,EAAAguC,EAAA0C,YAAAP,GAAAnwC,MAGAwwC,KAAAxwC,GAAA+vC,GAGA,GAAAS,EAIA,SAGA,SAGA,SAAAn6D,IACA,IAAAs6D,GAAA,EACA,QAAA3S,KAAAiS,EACAA,EAAAjS,GAAAgS,IACAI,EAAApS,IACAiS,EAAAjS,GAAAgS,EACUthD,EAAKkhD,IAEfD,GAAA,KACAF,GAAArxD,YAEA6xD,EAAAjS,GACA2S,GAAA,IAIAA,IACAC,cAAAd,GACAA,OAAAl6D,GAIA,gBAAAi7D,GACA,IAAAC,EAAuB/S,GAAe8S,GACtC,GAAAC,EAGA,QAAAj7D,EAAA,EAAA4Y,EAAAqiD,EAAAh7D,OAA6CD,EAAA4Y,IAAQ5Y,EAAA,CACrD,IAAAqoD,EAAA4S,EAAAj7D,GACAqoD,KAAA+R,IACAA,EAAA/R,GAAA8R,EACAI,EAAAlS,KACA+R,EAAA/R,GAAA,OACAtoD,IAAAk6D,IACAA,EAAAiB,YAAA16D,EAAA,SAxEO,GAoFP,SAAAg6D,KAIA,OAHAV,KACAA,GAAqB5f,GAAqB,MAE1C4f,GAQO,IACPqB,GACAC,GAFOC,IAEPD,GAAArB,GACA,SAAA5R,GACA,IAAAn+C,EAAAoxD,GAAAjT,GAcA,OAbApoD,MAAAiK,IACAmxD,MACAA,GAAAv4D,SAAAC,cAAA,SACAinD,YAAA,IACAqR,GAAAjqD,MAAAlD,OAAAmtD,GAAAjqD,MAAA+nC,QAAA,eACAkiB,GAAAjqD,MAAA4oC,SAAA,sBACAqhB,GAAAjqD,MAAA/G,KAAA,uBAEAgxD,GAAAjqD,MAAAi3C,OACAvlD,SAAA04D,KAAAr4D,YAAAk4D,IACAnxD,EAAAoxD,GAAAjT,GAAAgT,GAAAxgB,aACA/3C,SAAA04D,KAAA1pD,YAAAupD,KAEAnxD,IAUO,SAAAuxD,GAAApT,EAAAmS,GACP,IAAAR,EAAAU,KAIA,OAHArS,GAAA2R,EAAA3R,OACA2R,EAAA3R,QAEA2R,EAAAe,YAAAP,GAAAnwC,MAUO,SAAAqxC,GAAArD,EAAArhC,EAAA2kC,EAAAC,GACP,IAAA5kC,IACAqhC,EAAAvvB,UAAA6yB,EAAAC,GACAvD,EAAA/vB,OAAAtR,GACAqhC,EAAAvvB,WAAA6yB,GAAAC,IAKO,IAAAC,GzD/SP,cyD+TO,SAAAC,GAAAzD,EACP7lD,EAAAupC,EAAAggB,EAAAC,EAAAC,EAAAC,EAAAv5D,EAAAqjB,EAAAE,EAAA2R,GACA,IAAAskC,EACA,GAAApgB,IACAogB,EAAA9D,EAAA+D,YACA/D,EAAA+D,YAAAD,EAAApgB,GAEAvpC,GACA6lD,EAAAgE,aAAAz7D,MAAAy3D,EAAA7lD,GAGA6lD,EAAAyD,UAAAC,EAAAC,EAAAC,EAAAC,EAAAv5D,EAAAqjB,EAAAE,EAAAg2C,EAAArkC,EAAAl1B,EAAAk1B,GAEAskC,IACA9D,EAAA+D,YAAAD,GAEA3pD,GACA6lD,EAAAgE,aAAAz7D,MAAAy3D,EAAAwD,IC/VA,IAAAS,GAAA,oDASAC,GAAA,cASO,SAAAC,GAAAC,GACP,uBAAAA,EACAA,EAEWC,GAAQD,IA2BZ,WAWP,IAKAhV,EAAA,GAKAkV,EAAA,EArBO,GA4HA,SAAAC,GAAAH,GAKP,OAJAA,EAAA,GAAaxmC,GAAKwmC,EAAA,eAClBA,EAAA,GAAaxmC,GAAKwmC,EAAA,eAClBA,EAAA,GAAaxmC,GAAKwmC,EAAA,eAClBA,EAAA,GAAaxmC,GAAKwmC,EAAA,QAClBA,EAQO,SAASC,GAAQD,GACxB,IAAAx1D,EAAAw1D,EAAA,GACAx1D,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAA41D,EAAAJ,EAAA,GACAI,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAl4D,EAAA83D,EAAA,GAKA,OAJA93D,IAAA,EAAAA,KACAA,IAAA,MAGA,QAAAsC,EAAA,IAAA41D,EAAA,IAAAl4D,EAAA,UADA1E,IAAAw8D,EAAA,KAAAA,EAAA,IACA,ICvMO,SAAAK,GAAAL,GACP,OAAAp+C,MAAAC,QAAAm+C,GACWC,GAAQD,GAEnBA,EClBA,IAAIM,GAAa,aAEjBA,GAAavgE,UAAAwgE,WAAA,SAAA9jB,EAAAsK,EAAAyZ,KAObF,GAAavgE,UAAA0gE,aAAA,SAAAhkB,KAOb6jB,GAAavgE,UAAA2gE,SAAA,SAAA/rD,KAMb2rD,GAAavgE,UAAA4gE,WAAA,SAAAC,EAAA7Z,KAMbuZ,GAAavgE,UAAA8gE,YAAA,SAAA9Z,EAAApyC,KAMb2rD,GAAavgE,UAAA+gE,uBAAA,SAAAC,EAAAha,KAMbuZ,GAAavgE,UAAAihE,eAAA,SAAAC,EAAAla,KAMbuZ,GAAavgE,UAAAmhE,oBAAA,SAAAC,EAAApa,KAMbuZ,GAAavgE,UAAAqhE,eAAA,SAAAC,EAAAta,KAMbuZ,GAAavgE,UAAAuhE,iBAAA,SAAAC,EAAAxa,KAMbuZ,GAAavgE,UAAAyhE,UAAA,SAAAC,EAAA1a,KAMbuZ,GAAavgE,UAAA2hE,YAAA,SAAAC,EAAA5a,KAMbuZ,GAAavgE,UAAA6hE,SAAA,SAAAnlB,EAAAsK,KAMbuZ,GAAavgE,UAAA8hE,mBAAA,SAAAC,EAAAC,KAMbzB,GAAavgE,UAAAiiE,cAAA,SAAAC,EAAAC,KAMb5B,GAAavgE,UAAAoiE,aAAA,SAAAC,EAAAF,KAEE,IAAAG,GAAA,GCyzBAC,GAx4BY,SAAAC,GAC3B,SAAAC,EAAA5G,EAAAzf,EAAAzf,EAAA3mB,EAAA0sD,GACAF,EAAAtiE,KAAAwL,MAMAA,KAAAi3D,SAAA9G,EAMAnwD,KAAAy3C,YAAA/G,EAMA1wC,KAAAm3B,QAAAlG,EAMAjxB,KAAAk3D,WAAA5sD,EAMAtK,KAAAm3D,cAAAH,EAMAh3D,KAAAo3D,kBAAA,KAMAp3D,KAAAq3D,oBAAA,KAMAr3D,KAAAs3D,kBAAA,KAMAt3D,KAAAu3D,WAAA,KAMAv3D,KAAAw3D,aAAA,KAMAx3D,KAAAy3D,OAAA,KAMAz3D,KAAA03D,cAAA,EAMA13D,KAAA23D,cAAA,EAMA33D,KAAA43D,aAAA,EAMA53D,KAAA63D,cAAA,EAMA73D,KAAA83D,cAAA,EAMA93D,KAAA+3D,cAAA,EAMA/3D,KAAAg4D,sBAAA,EAMAh4D,KAAAi4D,eAAA,EAMAj4D,KAAAk4D,YAAA,EAMAl4D,KAAAm4D,YAAA,EAMAn4D,KAAAo4D,MAAA,GAMAp4D,KAAAq4D,aAAA,EAMAr4D,KAAAs4D,aAAA,EAMAt4D,KAAAu4D,qBAAA,EAMAv4D,KAAAw4D,cAAA,EAMAx4D,KAAAy4D,WAAA,EAMAz4D,KAAA04D,eAAA,KAMA14D,KAAA24D,iBAAA,KAMA34D,KAAA44D,WAAA,KAMA54D,KAAA64D,kBAAA,GAMA74D,KAAA84D,mB7DvLA,c6Dy3BA,OA9rBAhC,IAAAC,EAAA/mD,UAAA8mD,GACAC,EAAAziE,UAAAD,OAAA+K,OAAA03D,KAAAxiE,WACAyiE,EAAAziE,UAAA2b,YAAA8mD,EASAA,EAAAziE,UAAAykE,YAAA,SAAA7mC,EAAAC,EAAApP,EAAAqP,GACA,GAAApyB,KAAAy3D,OAAA,CAGA,IAAAuB,EAA2BvjC,GAC3BvD,EAAAC,EAAApP,EAAA,EAAA/iB,KAAAk3D,WACAl3D,KAAA64D,mBACA1I,EAAAnwD,KAAAi3D,SACAgC,EAAAj5D,KAAA84D,mBACA7E,EAAA9D,EAAA+D,YACA,GAAAl0D,KAAA63D,gBACA1H,EAAA+D,YAAAD,EAAAj0D,KAAA63D,eAEA,IAAA/oC,EAAA9uB,KAAAi4D,eACAj4D,KAAAg4D,uBACAlpC,GAAA9uB,KAAAm3D,eAEA,QAAAn/D,EAAA,EAAA4Y,EAAAooD,EAAA/gE,OAAiDD,EAAA4Y,EAAQ5Y,GAAA,GACzD,IAAA8lB,EAAAk7C,EAAAhhE,GAAAgI,KAAA03D,cACA15C,EAAAg7C,EAAAhhE,EAAA,GAAAgI,KAAA23D,cACA,OAAA7oC,GAAA,GAAA9uB,KAAAk4D,YAAA,CACA,IAAAnmB,EAAAj0B,EAAA9d,KAAA03D,cACA1lB,EAAAh0B,EAAAhe,KAAA23D,cACQz5B,GAAgB+6B,EACxBlnB,EAAAC,EACAhyC,KAAAk4D,YAAAl4D,KAAAk4D,YACAppC,GACAijB,GAAAC,GACAme,EAAAgE,aAAAz7D,MAAAy3D,EAAA8I,GAEA9I,EAAAyD,UAAA5zD,KAAAy3D,OAAAz3D,KAAA83D,cAAA93D,KAAA+3D,cACA/3D,KAAAm4D,YAAAn4D,KAAA43D,aAAA95C,EAAAE,EACAhe,KAAAm4D,YAAAn4D,KAAA43D,cAEA,IAAA9oC,GAAA,GAAA9uB,KAAAk4D,aACA/H,EAAAgE,aAAA,aAEA,GAAAn0D,KAAA63D,gBACA1H,EAAA+D,YAAAD,KAWA8C,EAAAziE,UAAA4kE,UAAA,SAAAhnC,EAAAC,EAAApP,EAAAqP,GACA,GAAApyB,KAAA44D,YAAA,KAAA54D,KAAAo4D,MAAA,CAGAp4D,KAAA04D,gBACA14D,KAAAm5D,qBAAAn5D,KAAA04D,gBAEA14D,KAAA24D,kBACA34D,KAAAo5D,uBAAAp5D,KAAA24D,kBAEA34D,KAAAq5D,qBAAAr5D,KAAA44D,YACA,IAAAI,EAA2BvjC,GAC3BvD,EAAAC,EAAApP,EAAAqP,EAAApyB,KAAAk3D,WACAl3D,KAAA64D,mBACA1I,EAAAnwD,KAAAi3D,SACAnoC,EAAA9uB,KAAAw4D,cAIA,IAHAx4D,KAAAu4D,sBACAzpC,GAAA9uB,KAAAm3D,eAEUhlC,EAAApP,EAAcoP,GAAAC,EAAA,CACxB,IAAAtU,EAAAk7C,EAAA7mC,GAAAnyB,KAAAq4D,aACAr6C,EAAAg7C,EAAA7mC,EAAA,GAAAnyB,KAAAs4D,aACA,OAAAxpC,GAAA,GAAA9uB,KAAAy4D,WAAA,CACA,IAAAQ,EAA6B/6B,GAAgBl+B,KAAA84D,mBAC7Ch7C,EAAAE,EACAhe,KAAAy4D,WAAAz4D,KAAAy4D,WACA3pC,GACAhR,GAAAE,GACAmyC,EAAAgE,aAAAz7D,MAAAy3D,EAAA8I,GAEAj5D,KAAA24D,kBACAxI,EAAAmJ,WAAAt5D,KAAAo4D,MAAAt6C,EAAAE,GAEAhe,KAAA04D,gBACAvI,EAAAoJ,SAAAv5D,KAAAo4D,MAAAt6C,EAAAE,GAGA,IAAA8Q,GAAA,GAAA9uB,KAAAy4D,YACAtI,EAAAgE,aAAA,eAaA4C,EAAAziE,UAAAklE,cAAA,SAAAtnC,EAAAC,EAAApP,EAAAqP,EAAAqnC,GACA,IAAAtJ,EAAAnwD,KAAAi3D,SACA+B,EAA2BvjC,GAC3BvD,EAAAC,EAAApP,EAAAqP,EAAApyB,KAAAk3D,WACAl3D,KAAA64D,mBACA1I,EAAAuJ,OAAAV,EAAA,GAAAA,EAAA,IACA,IAAA/gE,EAAA+gE,EAAA/gE,OACAwhE,IACAxhE,GAAA,GAEA,QAAAD,EAAA,EAAmBA,EAAAC,EAAYD,GAAA,EAC/Bm4D,EAAAwJ,OAAAX,EAAAhhE,GAAAghE,EAAAhhE,EAAA,IAKA,OAHAyhE,GACAtJ,EAAAyJ,YAEA72C,GAWAg0C,EAAAziE,UAAAulE,WAAA,SAAA3nC,EAAAC,EAAAkQ,EAAAjQ,GACA,QAAAp6B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAqCD,EAAA4Y,IAAQ5Y,EAC7Cm6B,EAAAnyB,KAAAw5D,cAAAtnC,EAAAC,EAAAkQ,EAAArqC,GAAAo6B,GAAA,GAEA,OAAAD,GAWA4kC,EAAAziE,UAAA4gE,WAAA,SAAAlkB,GACA,GAAS1c,GAAUt0B,KAAAm3B,QAAA6Z,EAAA9Y,aAAnB,CAGA,GAAAl4B,KAAAu3D,YAAAv3D,KAAAw3D,aAAA,CACAx3D,KAAAu3D,YACAv3D,KAAAm5D,qBAAAn5D,KAAAu3D,YAEAv3D,KAAAw3D,cACAx3D,KAAAo5D,uBAAAp5D,KAAAw3D,cAEA,IAAAwB,E3DhFO,SAAAc,EAAAxvD,EAAAorB,GACP,IAAAxD,EAAA4nC,EAAA56B,qBACA,GAAAhN,EAEG,CACH,IAAAE,EAAA0nC,EAAAl6B,YACA,OAAWnK,GACXvD,EAAA,EAAAA,EAAAj6B,OAAAm6B,EACA9nB,EAAAorB,GALA,Y2D6E6BqkC,CAC7B/oB,EAAAhxC,KAAAk3D,WAAAl3D,KAAA64D,mBACA36C,EAAA86C,EAAA,GAAAA,EAAA,GACA56C,EAAA46C,EAAA,GAAAA,EAAA,GACA/iC,EAAA/1B,KAAAsE,KAAA0Z,IAAAE,KACA+xC,EAAAnwD,KAAAi3D,SACA9G,EAAA6J,YACA7J,EAAA8J,IACAjB,EAAA,GAAAA,EAAA,GAAA/iC,EAAA,IAAA/1B,KAAAuuB,IACAzuB,KAAAu3D,YACApH,EAAA+J,OAEAl6D,KAAAw3D,cACArH,EAAAgK,SAGA,KAAAn6D,KAAAo4D,OACAp4D,KAAAk5D,UAAAloB,EAAAhE,YAAA,SAYA+pB,EAAAziE,UAAA2gE,SAAA,SAAA/rD,GACAlJ,KAAAo2D,mBAAAltD,EAAAkxD,UAAAlxD,EAAAmxD,aACAr6D,KAAAu2D,cAAArtD,EAAAmmD,YACArvD,KAAA02D,aAAAxtD,EAAAoxD,YAWAvD,EAAAziE,UAAA0gE,aAAA,SAAAhkB,GAEA,OADAA,EAAArP,WAEA,KAAWjN,GAAYC,MACvB30B,KAAA+1D,UAAwE,GACxE,MACA,KAAWrhC,GAAYE,YACvB50B,KAAAu1D,eAAkF,GAClF,MACA,KAAW7gC,GAAYI,QACvB90B,KAAAi2D,YAA4E,GAC5E,MACA,KAAWvhC,GAAYK,YACvB/0B,KAAA21D,eAAkF,GAClF,MACA,KAAWjhC,GAAYM,kBACvBh1B,KAAAy1D,oBAA4F,GAC5F,MACA,KAAW/gC,GAAYO,cACvBj1B,KAAA61D,iBAAsF,GACtF,MACA,KAAWnhC,GAAYQ,oBACvBl1B,KAAAq1D,uBAAkG,GAClG,MACA,KAAW3gC,GAAYS,OACvBn1B,KAAAk1D,WAA0E,KAiB1E6B,EAAAziE,UAAA8gE,YAAA,SAAA9Z,EAAApyC,GACA,IAAA8nC,EAAA9nC,EAAAqxD,qBAAArxD,CAAAoyC,GACAtK,GAAsB1c,GAAUt0B,KAAAm3B,QAAA6Z,EAAA9Y,eAGhCl4B,KAAAi1D,SAAA/rD,GACAlJ,KAAAg1D,aAAAhkB,KAUA+lB,EAAAziE,UAAA+gE,uBAAA,SAAArkB,GAEA,IADA,IAAAwpB,EAAAxpB,EAAAypB,qBACAziE,EAAA,EAAA4Y,EAAA4pD,EAAAviE,OAA2CD,EAAA4Y,IAAQ5Y,EACnDgI,KAAAg1D,aAAAwF,EAAAxiE,KAWA++D,EAAAziE,UAAAyhE,UAAA,SAAA/kB,GACA,IAAA9e,EAAA8e,EAAA9R,qBACA9M,EAAA4e,EAAApR,YACA5/B,KAAAy3D,QACAz3D,KAAA+4D,YAAA7mC,EAAA,EAAAA,EAAAj6B,OAAAm6B,GAEA,KAAApyB,KAAAo4D,OACAp4D,KAAAk5D,UAAAhnC,EAAA,EAAAA,EAAAj6B,OAAAm6B,IAWA2kC,EAAAziE,UAAAqhE,eAAA,SAAA3kB,GACA,IAAA9e,EAAA8e,EAAA9R,qBACA9M,EAAA4e,EAAApR,YACA5/B,KAAAy3D,QACAz3D,KAAA+4D,YAAA7mC,EAAA,EAAAA,EAAAj6B,OAAAm6B,GAEA,KAAApyB,KAAAo4D,OACAp4D,KAAAk5D,UAAAhnC,EAAA,EAAAA,EAAAj6B,OAAAm6B,IAWA2kC,EAAAziE,UAAAihE,eAAA,SAAAvkB,GACA,GAAS1c,GAAUt0B,KAAAm3B,QAAA6Z,EAAA9Y,aAAnB,CAGA,GAAAl4B,KAAAw3D,aAAA,CACAx3D,KAAAo5D,uBAAAp5D,KAAAw3D,cACA,IAAArH,EAAAnwD,KAAAi3D,SACA/kC,EAAA8e,EAAA9R,qBACAixB,EAAA6J,YACAh6D,KAAAw5D,cAAAtnC,EAAA,EAAAA,EAAAj6B,OACA+4C,EAAApR,aAAA,GACAuwB,EAAAgK,SAEA,QAAAn6D,KAAAo4D,MAAA,CACA,IAAAsC,EAAA1pB,EAAA2pB,kBACA36D,KAAAk5D,UAAAwB,EAAA,UAWA3D,EAAAziE,UAAAmhE,oBAAA,SAAAzkB,GACA,IAAA4pB,EAAA5pB,EAAA9Y,YACA,GAAS5D,GAAUt0B,KAAAm3B,QAAAyjC,GAAnB,CAGA,GAAA56D,KAAAw3D,aAAA,CACAx3D,KAAAo5D,uBAAAp5D,KAAAw3D,cACA,IAAArH,EAAAnwD,KAAAi3D,SACA/kC,EAAA8e,EAAA9R,qBACA/M,EAAA,EACAkQ,EAA0C2O,EAAA5I,UAC1ChW,EAAA4e,EAAApR,YACAuwB,EAAA6J,YACA,QAAAhiE,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAuCD,EAAA4Y,IAAQ5Y,EAC/Cm6B,EAAAnyB,KAAAw5D,cAAAtnC,EAAAC,EAAAkQ,EAAArqC,GAAAo6B,GAAA,GAEA+9B,EAAAgK,SAEA,QAAAn6D,KAAAo4D,MAAA,CACA,IAAAyC,EAAA7pB,EAAA8pB,mBACA96D,KAAAk5D,UAAA2B,EAAA,EAAAA,EAAA5iE,OAAA,MAWA8+D,EAAAziE,UAAA2hE,YAAA,SAAAjlB,GACA,GAAS1c,GAAUt0B,KAAAm3B,QAAA6Z,EAAA9Y,aAAnB,CAGA,GAAAl4B,KAAAw3D,cAAAx3D,KAAAu3D,WAAA,CACAv3D,KAAAu3D,YACAv3D,KAAAm5D,qBAAAn5D,KAAAu3D,YAEAv3D,KAAAw3D,cACAx3D,KAAAo5D,uBAAAp5D,KAAAw3D,cAEA,IAAArH,EAAAnwD,KAAAi3D,SACA9G,EAAA6J,YACAh6D,KAAA65D,WAAA7oB,EAAA7I,6BACA,EAAoC6I,EAAA5I,UAAA4I,EAAApR,aACpC5/B,KAAAu3D,YACApH,EAAA+J,OAEAl6D,KAAAw3D,cACArH,EAAAgK,SAGA,QAAAn6D,KAAAo4D,MAAA,CACA,IAAA2C,EAAA/pB,EAAA3I,uBACAroC,KAAAk5D,UAAA6B,EAAA,UAUAhE,EAAAziE,UAAAuhE,iBAAA,SAAA7kB,GACA,GAAS1c,GAAUt0B,KAAAm3B,QAAA6Z,EAAA9Y,aAAnB,CAGA,GAAAl4B,KAAAw3D,cAAAx3D,KAAAu3D,WAAA,CACAv3D,KAAAu3D,YACAv3D,KAAAm5D,qBAAAn5D,KAAAu3D,YAEAv3D,KAAAw3D,cACAx3D,KAAAo5D,uBAAAp5D,KAAAw3D,cAEA,IAAArH,EAAAnwD,KAAAi3D,SACA/kC,EAAA8e,EAAA7I,6BACAhW,EAAA,EACA2R,EAAAkN,EAAAgqB,WACA5oC,EAAA4e,EAAApR,YACAuwB,EAAA6J,YACA,QAAAhiE,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAwCD,EAAA4Y,IAAQ5Y,EAAA,CAChD,IAAAqqC,EAAAyB,EAAA9rC,GACAm6B,EAAAnyB,KAAA65D,WAAA3nC,EAAAC,EAAAkQ,EAAAjQ,GAEApyB,KAAAu3D,YACApH,EAAA+J,OAEAl6D,KAAAw3D,cACArH,EAAAgK,SAGA,QAAAn6D,KAAAo4D,MAAA,CACA,IAAA6C,EAAAjqB,EAAAkqB,wBACAl7D,KAAAk5D,UAAA+B,EAAA,EAAAA,EAAAhjE,OAAA,MAQA8+D,EAAAziE,UAAA6kE,qBAAA,SAAAgC,GACA,IAAAhL,EAAAnwD,KAAAi3D,SACAmE,EAAAp7D,KAAAo3D,kBACAgE,EAMAA,EAAA/E,WAAA8E,EAAA9E,YACA+E,EAAA/E,UAAAlG,EAAAkG,UAAA8E,EAAA9E,YANAlG,EAAAkG,UAAA8E,EAAA9E,UACAr2D,KAAAo3D,kBAAA,CACAf,UAAA8E,EAAA9E,aAaAU,EAAAziE,UAAA8kE,uBAAA,SAAAiC,GACA,IAAAlL,EAAAnwD,KAAAi3D,SACAqE,EAAAt7D,KAAAq3D,oBACAiE,GAoBAA,EAAAC,SAAAF,EAAAE,UACAD,EAAAC,QAAApL,EAAAoL,QAAgFF,EAAA,SAEtEjhD,IACG6I,GAAMq4C,EAAAE,SAAAH,EAAAG,WACnBrL,EAAA51C,YAAA+gD,EAAAE,SAAAH,EAAAG,UAEAF,EAAAG,gBAAAJ,EAAAI,iBACAH,EAAAG,eAAAtL,EAAAsL,eACAJ,EAAAI,iBAGAH,EAAAI,UAAAL,EAAAK,WACAJ,EAAAI,SAAAvL,EAAAuL,SAAmFL,EAAA,UAEnFC,EAAAK,WAAAN,EAAAM,YACAL,EAAAK,UAAAxL,EAAAwL,UAAAN,EAAAM,WAEAL,EAAAM,YAAAP,EAAAO,aACAN,EAAAM,WAAAzL,EAAAyL,WACAP,EAAAO,YAEAN,EAAAhF,aAAA+E,EAAA/E,cACAgF,EAAAhF,YAAAnG,EAAAmG,YACA+E,EAAA/E,eA3CAnG,EAAAoL,QAAiDF,EAAA,QACvCjhD,IACV+1C,EAAA51C,YAAA8gD,EAAAG,UACArL,EAAAsL,eAAAJ,EAAAI,gBAEAtL,EAAAuL,SAAmDL,EAAA,SACnDlL,EAAAwL,UAAAN,EAAAM,UACAxL,EAAAyL,WAAAP,EAAAO,WACAzL,EAAAmG,YAAA+E,EAAA/E,YACAt2D,KAAAq3D,oBAAA,CACAkE,QAAAF,EAAAE,QACAC,SAAAH,EAAAG,SACAC,eAAAJ,EAAAI,eACAC,SAAAL,EAAAK,SACAC,UAAAN,EAAAM,UACAC,WAAAP,EAAAO,WACAtF,YAAA+E,EAAA/E,eAoCAS,EAAAziE,UAAA+kE,qBAAA,SAAAwC,GACA,IAAA1L,EAAAnwD,KAAAi3D,SACA6E,EAAA97D,KAAAs3D,kBACAyE,EAAAF,EAAAE,UACAF,EAAAE,UJlmBO,SImmBPD,GAUAA,EAAA3b,MAAA0b,EAAA1b,OACA2b,EAAA3b,KAAAgQ,EAAAhQ,KAAA0b,EAAA1b,MAEA2b,EAAAC,eACAD,EAAAC,UAAA5L,EAAA4L,UAAoF,GAEpFD,EAAAE,cAAAH,EAAAG,eACAF,EAAAE,aAAA7L,EAAA6L,aACwCH,EAAA,gBAjBxC1L,EAAAhQ,KAAA0b,EAAA1b,KACAgQ,EAAA4L,UAAqD,EACrD5L,EAAA6L,aAA2DH,EAAA,aAC3D77D,KAAAs3D,kBAAA,CACAnX,KAAA0b,EAAA1b,KACA4b,YACAC,aAAAH,EAAAG,gBAwBAjF,EAAAziE,UAAA8hE,mBAAA,SAAAC,EAAAC,GACA,GAAAD,EAEK,CACL,IAAA4F,EAAA5F,EAAA6F,WACAl8D,KAAAu3D,WAAA,CACAlB,UAAmBzB,GAAWqH,GACHzK,UAL3BxxD,KAAAu3D,WAAA,KAQA,GAAAjB,EAEK,CACL,IAAA6F,EAAA7F,EAAA4F,WACAE,EAAA9F,EAAA+F,aACAC,EAAAhG,EAAAiG,cACAC,EAAAlG,EAAAmG,oBACAC,EAAApG,EAAAqG,cACAC,EAAAtG,EAAApjC,WACA2pC,EAAAvG,EAAAwG,gBACA98D,KAAAw3D,aAAA,CACA+D,aAAAxjE,IAAAqkE,EACAA,EJlsBO,QImsBPZ,SAAAc,GACgC7K,GAChCgK,eAAAe,GJvrBO,EIyrBPd,cAAA3jE,IAAA2kE,EACAA,EJnrBO,QIorBPf,UAAA37D,KAAAy3C,kBAAA1/C,IAAA6kE,EACAA,EJ3oBO,GI4oBPhB,gBAAA7jE,IAAA8kE,EACAA,EJhrBO,GIirBPvG,YAAqB1B,GAAWuH,GACHzK,UAvB7B1xD,KAAAw3D,aAAA,MAmCAT,EAAAziE,UAAAiiE,cAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAAuG,EAAAvG,EAAAwG,YAEAC,EAAAzG,EAAAnH,SAAA,GACA6N,EAAA1G,EAAA2G,YACAC,EAAA5G,EAAAla,UACAt8C,KAAA03D,cAAAqF,EAAA,GACA/8D,KAAA23D,cAAAoF,EAAA,GACA/8D,KAAA43D,aAAAwF,EAAA,GACAp9D,KAAAy3D,OAAAwF,EACAj9D,KAAA63D,cAAArB,EAAApiB,aACAp0C,KAAA83D,cAAAoF,EAAA,GACAl9D,KAAA+3D,cAAAmF,EAAA,GACAl9D,KAAAg4D,qBAAAxB,EAAA6G,oBACAr9D,KAAAi4D,eAAAzB,EAAAvpB,cACAjtC,KAAAk4D,YAAA1B,EAAA8G,WAAAt9D,KAAAy3C,YACAz3C,KAAAm4D,YAAAiF,EAAA,QAjBAp9D,KAAAy3D,OAAA,MA4BAV,EAAAziE,UAAAoiE,aAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAA4G,EAAA5G,EAAAyD,UACA,GAAAmD,EAEO,CACP,IAAAC,EAAAD,EAAArB,WACAl8D,KAAA04D,eAAA,CACArC,UAAqBzB,GAAW4I,GACChM,UALjCxxD,KAAA04D,eAAA,KAQA,IAAA+E,EAAA9G,EAAA0D,YACA,GAAAoD,EAEO,CACP,IAAAC,EAAAD,EAAAvB,WACAyB,EAAAF,EAAApB,aACAuB,EAAAH,EAAAlB,cACAsB,EAAAJ,EAAAhB,oBACAqB,EAAAL,EAAAd,cACAoB,EAAAN,EAAAvqC,WACA8qC,EAAAP,EAAAX,gBACA98D,KAAA24D,iBAAA,CACA4C,aAAAxjE,IAAA4lE,EACAA,EJnxBO,QIoxBPnC,SAAAoC,GACsCnM,GACtCgK,eAAAoC,GJxwBO,EI0wBPnC,cAAA3jE,IAAA+lE,EACAA,EJpwBO,QIqwBPnC,eAAA5jE,IAAAgmE,EACAA,EJ5tBO,EI6tBPnC,gBAAA7jE,IAAAimE,EACAA,EJjwBO,GIkwBP1H,YAAuB1B,GAAW8I,GACChM,UAvBnC1xD,KAAA24D,iBAAA,KA0BA,IAAAsF,EAAAtH,EAAAuH,UACAC,EAAAxH,EAAAyH,aACAC,EAAA1H,EAAA2H,aACAC,EAAA5H,EAAA0G,oBACAmB,EAAA7H,EAAA1pB,cACAwxB,EAAA9H,EAAA2G,WACAoB,EAAA/H,EAAA2D,UACAqE,EAAAhI,EAAAiI,eACAC,EAAAlI,EAAAmI,kBACA9+D,KAAA44D,WAAA,CACAzY,UAAApoD,IAAAkmE,EACAA,EJ3zBO,kBI4zBPlC,eAAAhkE,IAAA4mE,EACAA,EJrwBO,SIswBP3C,kBAAAjkE,IAAA8mE,EACAA,EJhwBO,UIkwBP7+D,KAAAo4D,WAAArgE,IAAA2mE,IAAA,GACA1+D,KAAAq4D,kBACAtgE,IAAAomE,EAAAn+D,KAAAy3C,YAAA0mB,EAAA,EACAn+D,KAAAs4D,kBACAvgE,IAAAsmE,EAAAr+D,KAAAy3C,YAAA4mB,EAAA,EACAr+D,KAAAu4D,yBAAAxgE,IAAAwmE,KACAv+D,KAAAw4D,mBAAAzgE,IAAAymE,IAAA,EACAx+D,KAAAy4D,WAAAz4D,KAAAy3C,kBAAA1/C,IAAA0mE,EACAA,EAAA,QAjEAz+D,KAAAo4D,MAAA,IAqEArB,EAp4B2B,CAq4BzBH,ICv5BFmI,GAAA,WAMA/+D,KAAAg/D,OAAA,GAMAh/D,KAAAi/D,WAAA,EAMAj/D,KAAAk/D,cAAA,IAqEA,SAAAryC,GAAA9xB,EAAAgU,EAAAwlD,GAEA,OAAAxlD,EAAA,IAAAhU,EAAA,KADAw5D,EAA4BD,GAAQC,GAAA,QAhEpCwK,GAAAzqE,UAAAiM,MAAA,WACAP,KAAAg/D,OAAA,GACAh/D,KAAAi/D,WAAA,GAMAF,GAAAzqE,UAAA6qE,OAAA,WACA,GAAAn/D,KAAAi/D,WAAAj/D,KAAAk/D,cAAA,CACA,IAAAlnE,EAAA,EACA,QAAAqH,KAAAW,KAAAg/D,OAAA,CACA,IAAAI,EAAAp/D,KAAAg/D,OAAA3/D,GACA,MAAArH,MAAAonE,EAAAlrD,uBACAlU,KAAAg/D,OAAA3/D,KACAW,KAAAi/D,eAYAF,GAAAzqE,UAAAiC,IAAA,SAAAwE,EAAAgU,EAAAwlD,GACA,IAAAl1D,EAAAwtB,GAAA9xB,EAAAgU,EAAAwlD,GACA,OAAAl1D,KAAAW,KAAAg/D,OAAAh/D,KAAAg/D,OAAA3/D,GAAA,MASA0/D,GAAAzqE,UAAAkC,IAAA,SAAAuE,EAAAgU,EAAAwlD,EAAA6K,GACA,IAAA//D,EAAAwtB,GAAA9xB,EAAAgU,EAAAwlD,GACAv0D,KAAAg/D,OAAA3/D,GAAA+/D,IACAp/D,KAAAi/D,YAUAF,GAAAzqE,UAAA2qD,QAAA,SAAAogB,GACAr/D,KAAAk/D,cAAAG,EACAr/D,KAAAm/D,UAgBe,IAQRG,GAAA,IAAAP,GCoOP,SAAAQ,GAAAxjE,EAAAgd,GACEumD,GAAcH,SAST,SAAAK,GAAAC,EAAAC,GACP,OAAAD,EAAA1rB,OAAA2rB,EAAA3rB,OAEe,IC5UR4rB,GAAA,GA4MQC,GArMM,SAAAC,GACrB,SAAAC,EAAA/jE,GACA8jE,EAAArrE,KAAAwL,KAAAjE,GAEA,IAAA8rB,EAAA9rB,EAAA2sB,cAMA1oB,KAAAi3D,SAAoB/kB,KAMpBlyC,KAAAivD,QAAAjvD,KAAAi3D,SAAA5kB,OAEAryC,KAAAivD,QAAA/lD,MAAAiZ,MAAA,OACAniB,KAAAivD,QAAA/lD,MAAAlH,OAAA,OACAhC,KAAAivD,QAAA/lD,MAAA65C,QAAA,QACA/iD,KAAAivD,QAAA3W,UAA6ByH,GAC7Bl4B,EAAAte,aAAAvJ,KAAAivD,QAAApnC,EAAA3b,WAAA,UAMAlM,KAAAsiD,kBAAA,EAMAtiD,KAAAk3D,WhEtBA,cgEqLA,OA3JA2I,IAAAC,EAAA9vD,UAAA6vD,GACAC,EAAAxrE,UAAAD,OAAA+K,OAAAygE,KAAAvrE,WACAwrE,EAAAxrE,UAAA2b,YAAA6vD,EAMAA,EAAAxrE,UAAAopD,oBAAA,SAAAvhD,EAAA4c,GACA,IAAAhd,EAAAiE,KAAA4/C,SACAuQ,EAAAnwD,KAAAi3D,SACA,GAAAl7D,EAAAmY,YAAA/X,GAAA,CACA,IAAA80B,EAAAlY,EAAAkY,OACAyf,EAAA33B,EAAA23B,WAEA5hB,EADA/V,EAAAylC,UACA1vB,SAEAxkB,EAAAtK,KAAA+/D,aAAAhnD,GAEAm3C,EAAA,IAA8B2G,GAAuB1G,EAAAzf,EACrDzf,EAAA3mB,EAAAwkB,GACAkxC,EAAA,IAA6BnQ,GAAW1zD,EAAA+zD,EACxCn3C,EAAAo3C,EAAA,MACAp0D,EAAA8X,cAAAmsD,KASAF,EAAAxrE,UAAAyrE,aAAA,SAAAhnD,GACA,IAAAylC,EAAAzlC,EAAAylC,UACArgB,EAAAn+B,KAAAivD,QAAA9sC,MAAA,EACAic,EAAAp+B,KAAAivD,QAAAjtD,OAAA,EACAq8B,EAAAtlB,EAAA23B,WAAA8N,EAAAhrB,WACA8K,GAAAD,EACAhP,GAAAmvB,EAAA1vB,SACAyP,GAAAigB,EAAAnwC,OAAA,GACAmwB,GAAAggB,EAAAnwC,OAAA,GACA,OAAW6vB,GAAgBl+B,KAAAk3D,WAAA/4B,EAAAC,EAAAC,EAAAC,EAAAjP,EAAAkP,EAAAC,IAM3BshC,EAAAxrE,UAAAyqD,YAAA,SAAAhmC,GAEA,GAAAA,EAAA,CAQA,IAAAo3C,EAAAnwD,KAAAi3D,SACAvmB,EAAA33B,EAAA23B,WACAvuB,EAAAjiB,KAAAykC,MAAA5rB,EAAA0a,KAAA,GAAAid,GACA1uC,EAAA9B,KAAAykC,MAAA5rB,EAAA0a,KAAA,GAAAid,GACA1wC,KAAAivD,QAAA9sC,UAAAniB,KAAAivD,QAAAjtD,WACAhC,KAAAivD,QAAA9sC,QACAniB,KAAAivD,QAAAjtD,UAEAmuD,EAAA8P,UAAA,IAAA99C,EAAAngB,GAGA,IAAA8sB,EAAA/V,EAAAylC,UAAA1vB,SAEA9uB,KAAAkgE,oBAAAnnD,GAEA/Y,KAAA09C,oBAA6B1zB,GAAejR,GAE5C,IAAA4lC,EAAA5lC,EAAA4lC,kBjGgEO,SAAAz8C,EAAAi+D,GACP,IAEAnoE,EAFAC,EAAAiK,EAAAjK,OACAsV,EAAA4I,MAAAjU,EAAAjK,QAEA,IAAAD,EAAA,EAAaA,EAAAC,EAAYD,IACzBuV,EAAAvV,GAAA,CAAcuL,MAAAvL,EAAAvB,MAAAyL,EAAAlK,IAKd,IAHAuV,EAAA1H,KAAA,SAAArJ,EAAAC,GACA,OAAA0jE,EAAA3jE,EAAA/F,MAAAgG,EAAAhG,QAAA+F,EAAA+G,MAAA9G,EAAA8G,QAEAvL,EAAA,EAAaA,EAAAkK,EAAAjK,OAAgBD,IAC7BkK,EAAAlK,GAAAuV,EAAAvV,GAAAvB,MiG1EI2pE,CAAUzhB,EAAmB6gB,IAEjC1wC,IACAqhC,EAAAkQ,OACM7M,GAAcrD,EAAArhC,EAAA3M,EAAA,EAAAngB,EAAA,IAGpB,IACAhK,EAAA4Y,EADA0vD,EAAAvnD,EAAAylC,UAAAhrB,WAEA,IAAAx7B,EAAA,EAAA4Y,EAAA+tC,EAAA1mD,OAA6CD,EAAA4Y,IAAQ5Y,EAAA,CACrD,IAAAu+C,EAAAoI,EAAA3mD,GACAk8C,EAAAqC,EAAArC,MACAqsB,EAAkEvgE,KAAAwgE,iBAAAtsB,GACvDoM,GAAmB/J,EAAA+pB,IAC9B/pB,EAAAlC,aAAoCa,GAAWE,QAG/CmrB,EAAAE,aAAA1nD,EAAAw9B,IACAgqB,EAAAG,aAAA3nD,EAAAw9B,EAAA4Z,IAIArhC,GACAqhC,EAAAwQ,UAGA3gE,KAAA09C,oBAA6B1zB,GAAejR,GAE5C/Y,KAAAsiD,mBACAtiD,KAAAivD,QAAA/lD,MAAA65C,QAAA,GACA/iD,KAAAsiD,kBAAA,GAGAtiD,KAAA4gE,mCAAA7nD,GACA/Y,KAAA6gE,wBAAA9nD,QA3DA/Y,KAAAsiD,mBACAtiD,KAAAivD,QAAA/lD,MAAA65C,QAAA,OACA/iD,KAAAsiD,kBAAA,IA+DAwd,EAAAxrE,UAAAinD,oBAAA,SAAAliC,EAAAN,EAAAkiC,EAAAnjD,EAAAgpE,EAAA5lB,EAAA6lB,GACA,IAAA3lE,EAUApD,EARAsoE,EADAvnD,EAAAylC,UACAhrB,WAEAorB,EAAA7lC,EAAA4lC,iBACAqiB,EAAApiB,EAAA3mD,OAEAshB,EAAqB7gB,GACrBqgB,EAAAkjC,2BAAA5iC,EAAAvd,SAGA,IAAA9D,EAAAgpE,EAAA,EAA2BhpE,GAAA,IAAQA,EAAA,CACnC,IAAAu+C,EAAAqI,EAAA5mD,GACAk8C,EAAAqC,EAAArC,MACA,GAAUoM,GAAmB/J,EAAA+pB,IAAAplB,EAAA1mD,KAAAusE,EAAA7sB,GAI7B,GAFA94C,EADoE4E,KAAAwgE,iBAAAtsB,GACpE+sB,yBACA1nD,EAAAR,EAAAkiC,EAAAnjD,EAAAgpE,GAEA,OAAA1lE,IAUA0kE,EAAAxrE,UAAA4sE,uBAAA,SAAAC,GACAtB,EAAAvrE,UAAA4sE,uBAAA1sE,KAAAwL,KAAAmhE,GACA,QAAAnpE,EAAA,EAAA4Y,EAAAuwD,EAAAlpE,OAA6CD,EAAA4Y,IAAQ5Y,EAAA,CACrD,IAAAopE,EAAAD,EAAAnpE,GjGzJOqS,EiG0JY+2D,EAAAzB,GjGzJnB7pE,QAAAuU,IAAA,GiG0JAs1D,GAAA5pE,KAAAqrE,GjG3JO,IAAA/2D,GiGgKPy1D,EAjMqB,CDVN,SAAAtsD,GACf,SAAAqsD,EAAA9jE,GACAyX,EAAAhf,KAAAwL,MAMAA,KAAAooB,KAAArsB,EAMAiE,KAAAqhE,gBAAA,GAMArhE,KAAAshE,wBAAA,GAMAthE,KAAAuhE,2BAAA,GAgSA,OA5RA/tD,IAAAqsD,EAAA7vD,UAAAwD,GACAqsD,EAAAvrE,UAAAD,OAAA+K,OAAAoU,KAAAlf,WACAurE,EAAAvrE,UAAA2b,YAAA4vD,EAOAA,EAAAvrE,UAAAopD,oBAAA,SAAAvhD,EAAA4c,GACIzJ,KAOJuwD,EAAAvrE,UAAA4sE,uBAAA,SAAAC,GACAnhE,KAAAuhE,2BAAAxrE,KAAA2C,MAAAsH,KAAAuhE,2BAAAJ,IAOAtB,EAAAvrE,UAAA4rE,oBAAA,SAAAnnD,GACA,IAAAylC,EAAAzlC,EAAAylC,UACApC,EAAArjC,EAAAqjC,2BACAH,EAAAljC,EAAAkjC,2BAEI/d,GAAgBke,EACpBrjC,EAAA0a,KAAA,KAAA1a,EAAA0a,KAAA,KACA,EAAA+qB,EAAAhrB,YAAA,EAAAgrB,EAAAhrB,YACAgrB,EAAA1vB,UACA0vB,EAAAnwC,OAAA,IAAAmwC,EAAAnwC,OAAA,I/DgIO,SAAA/D,GACP,IA0BOk3D,EA1BPC,GA0BOD,EA1BPl3D,GA2BA,GAAAk3D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GA1BEj3C,GAAM,IAAAk3C,EAAA,IAER,IAAAjlE,EAAA8N,EAAA,GACA7N,EAAA6N,EAAA,GACA9P,EAAA8P,EAAA,GACA1L,EAAA0L,EAAA,GACA3T,EAAA2T,EAAA,GACA8N,EAAA9N,EAAA,GAEAA,EAAA,GAAA1L,EAAA6iE,EACAn3D,EAAA,IAAA7N,EAAAglE,EACAn3D,EAAA,IAAA9P,EAAAinE,EACAn3D,EAAA,GAAA9N,EAAAilE,EACAn3D,EAAA,IAAA9P,EAAA4d,EAAAxZ,EAAAjI,GAAA8qE,EACAn3D,EAAA,KAAA9N,EAAA4b,EAAA3b,EAAA9F,GAAA8qE,E+D9IIC,CACE3jC,GAAqBke,EAAAG,KAM3ByjB,EAAAvrE,UAAAypD,qBAAA,WACA,QAAA1+C,KAAAW,KAAAqhE,gBACArhE,KAAA2hE,0BAAAtiE,GAAAlH,WAmBA0nE,EAAAvrE,UAAA6mD,2BAAA,SACA5hC,EACAR,EACAkiC,EACAnjD,EACAgpE,EACA5lB,EACA6lB,GAEA,IAAA3lE,EACAojD,EAAAzlC,EAAAylC,UACA8hB,EAAA9hB,EAAAhrB,WAOA,SAAA2nB,EAAAG,EAAApH,GACA,IAAAC,EAAAp7B,EAAA6lC,YAA2CpvC,EAAM0kC,IAAAC,QACjD,KAAY3kC,EAAM8rC,KAAAviC,EAAA8lC,qBAAA1K,EAClB,OAAAr8C,EAAAtD,KAAAssE,EAAAxlB,EAAAnH,EAAAD,EAAA,MAIA,IAAA5lC,EAAAkwC,EAAAlwC,WAEAszD,EAAAroD,EACA,GAAAjL,EAAA0pB,WAAA,CACA,IAAA6pC,EAAAvzD,EAAA4pB,YACA4pC,EAAuB5uC,GAAQ2uC,GAC/B/jD,EAAAvE,EAAA,GACA,GAAAuE,EAAA+jD,EAAA,IAAA/jD,EAAA+jD,EAAA,GAEAD,EAAA,CAAA9jD,EAAAgkD,EADA5hE,KAAAG,MAAAwhE,EAAA,GAAA/jD,GAAAgkD,GACAvoD,EAAA,IAIA,IAEAvhB,EAFA4mD,EAAA7lC,EAAA4lC,iBAGA,IAAA3mD,EAFA4mD,EAAA3mD,OAEA,EAA2BD,GAAA,IAAQA,EAAA,CACnC,IAAAu+C,EAAAqI,EAAA5mD,GACAk8C,EAAAqC,EAAArC,MACA,GAAUoM,GAAmB/J,EAAA+pB,IAAAplB,EAAA1mD,KAAAusE,EAAA7sB,GAAA,CAC7B,IAAAqsB,EAAAvgE,KAAAwgE,iBAAAtsB,GACAjtC,EAAoE,EAAAu2C,YAMpE,GALAv2C,IACA7L,EAAAmlE,EAAAplB,2BACAl0C,EAAA86D,WAAAH,EAAAroD,EACAR,EAAAkiC,EAAAE,IAEA//C,EACA,OAAAA,KAuBAykE,EAAAvrE,UAAAinD,oBAAA,SAAAliC,EAAAN,EAAAkiC,EAAAnjD,EAAAgpE,EAAA5lB,EAAA6lB,GACA,OAAWzxD,KAeXuwD,EAAAvrE,UAAAmnD,uBAAA,SAAAliC,EAAAR,EAAAkiC,EAAAC,EAAA4lB,GAIA,YAAA/oE,IAHAiI,KAAAm7C,2BACA5hC,EAAAR,EAAAkiC,EAA4CloC,EAAI/S,KAAAk7C,EAAA4lB,IAUhDjB,EAAAvrE,UAAAksE,iBAAA,SAAAtsB,GACA,IAAA8tB,EAAmBxyD,EAAM0kC,GACzB,GAAA8tB,KAAAhiE,KAAAqhE,gBACA,OAAArhE,KAAAqhE,gBAAAW,GAGA,IADA,IAAAjN,EACA/8D,EAAA,EAAA4Y,EAAA5Q,KAAAuhE,2BAAAtpE,OAAkED,EAAA4Y,IAAQ5Y,EAAA,CAC1E,IAAAiqE,EAAAjiE,KAAAuhE,2BAAAvpE,GACA,GAAAiqE,EAAA,QAAA/tB,GAAA,CACA6gB,EAAAkN,EAAA,OAAAjiE,KAAAk0C,GACA,OAGA,IAAA6gB,EAKA,UAAAx7D,MAAA,wCAAA26C,EAAAvS,WAEA,OANA3hC,KAAAqhE,gBAAAW,GAAAjN,EACA/0D,KAAAshE,wBAAAU,GAAiD9vD,EAAM6iD,EAC7C3gD,EAASC,OAAArU,KAAAkiE,2BAAAliE,MAInB+0D,GASA8K,EAAAvrE,UAAA6tE,sBAAA,SAAAH,GACA,OAAAhiE,KAAAqhE,gBAAAW,IAOAnC,EAAAvrE,UAAA8tE,kBAAA,WACA,OAAApiE,KAAAqhE,iBAMAxB,EAAAvrE,UAAAsrD,OAAA,WACA,OAAA5/C,KAAAooB,MAOAy3C,EAAAvrE,UAAA4tE,2BAAA,WACAliE,KAAAooB,KAAAw1B,UAQAiiB,EAAAvrE,UAAAqtE,0BAAA,SAAAK,GACA,IAAAzB,EAAAvgE,KAAAqhE,gBAAAW,GAMA,cALAhiE,KAAAqhE,gBAAAW,GAEIzvD,EAAavS,KAAAshE,wBAAAU,WACjBhiE,KAAAshE,wBAAAU,GAEAzB,GAQAV,EAAAvrE,UAAA+tE,4BAAA,SAAAtmE,EAAAgd,GACA,QAAAipD,KAAAhiE,KAAAqhE,gBACAtoD,GAAAipD,KAAAjpD,EAAA6lC,aACA5+C,KAAA2hE,0BAAAK,GAAA7pE,WAUA0nE,EAAAvrE,UAAAyqD,YAAA,SAAAhmC,GACIzJ,KAOJuwD,EAAAvrE,UAAAusE,wBAAA,SAAA9nD,GACAA,EAAA4kC,oBAAA5nD,KAAmG,KAOnG8pE,EAAAvrE,UAAAssE,mCAAA,SAAA7nD,GACA,QAAAipD,KAAAhiE,KAAAqhE,gBACA,KAAAW,KAAAjpD,EAAA6lC,aAIA,YAHA7lC,EAAA4kC,oBAAA5nD,KACqEiK,KAAAqiE,4BAAA/iE,KAAAU,QAOrE6/D,EA1Te,CA2Tb/sD,IE7IawvD,GA9KQ,SAAAC,GACvB,SAAAC,EAAAtuB,GAEAquB,EAAA/tE,KAAAwL,KAAAk0C,GAMAl0C,KAAAyiE,mBAMAziE,KAAAk3D,WjEOA,ciEqJA,OAxJAqL,IAAAC,EAAAxyD,UAAAuyD,GACAC,EAAAluE,UAAAD,OAAA+K,OAAAmjE,KAAAjuE,WACAkuE,EAAAluE,UAAA2b,YAAAuyD,EAQAA,EAAAluE,UAAAouE,KAAA,SAAAvS,EAAAp3C,EAAAkY,GACA,IAAAyf,EAAA33B,EAAA23B,WACAvuB,EAAApJ,EAAA0a,KAAA,GAAAid,EACA1uC,EAAA+W,EAAA0a,KAAA,GAAAid,EACA5hB,EAAA/V,EAAAylC,UAAA1vB,SACA6zC,EAAkB5vC,GAAU9B,GAC5B2xC,EAAmB9vC,GAAW7B,GAC9B4xC,EAAsBhwC,GAAc5B,GACpC6xC,EAAqBlwC,GAAa3B,GAE9Bv4B,GAAcqgB,EAAAqjC,2BAAAumB,GACdjqE,GAAcqgB,EAAAqjC,2BAAAwmB,GACdlqE,GAAcqgB,EAAAqjC,2BAAAymB,GACdnqE,GAAcqgB,EAAAqjC,2BAAA0mB,GAElB3S,EAAAkQ,OACI7M,GAAcrD,GAAArhC,EAAA3M,EAAA,EAAAngB,EAAA,GAClBmuD,EAAA6J,YACA7J,EAAAuJ,OAAAiJ,EAAA,GAAAjyB,EAAAiyB,EAAA,GAAAjyB,GACAyf,EAAAwJ,OAAAiJ,EAAA,GAAAlyB,EAAAkyB,EAAA,GAAAlyB,GACAyf,EAAAwJ,OAAAkJ,EAAA,GAAAnyB,EAAAmyB,EAAA,GAAAnyB,GACAyf,EAAAwJ,OAAAmJ,EAAA,GAAApyB,EAAAoyB,EAAA,GAAApyB,GACAyf,EAAAuS,OACIlP,GAAcrD,EAAArhC,EAAA3M,EAAA,EAAAngB,EAAA,IAUlBwgE,EAAAluE,UAAAyuE,sBAAA,SAAA5mE,EAAAg0D,EAAAp3C,EAAAiqD,GACA,IAAA9uB,EAAAl0C,KAAAijE,WACA,GAAA/uB,EAAAhgC,YAAA/X,GAAA,CACA,IAAAgmB,EAAApJ,EAAA0a,KAAA,GAAA1a,EAAA23B,WACA1uC,EAAA+W,EAAA0a,KAAA,GAAA1a,EAAA23B,WACA5hB,EAAA/V,EAAAylC,UAAA1vB,SACM0kC,GAAcrD,GAAArhC,EAAA3M,EAAA,EAAAngB,EAAA,GACpB,IAAAsI,OAAAvS,IAAAirE,EACAA,EAAAhjE,KAAA+/D,aAAAhnD,EAAA,GACA6kC,EAAA,IAAuBiZ,GACvB1G,EAAAp3C,EAAA23B,WAAA33B,EAAAkY,OAAA3mB,EACAyO,EAAAylC,UAAA1vB,UACAkxC,EAAA,IAA6BnQ,GAAW1zD,EAAAyhD,EAAA7kC,EACxCo3C,EAAA,MACAjc,EAAArgC,cAAAmsD,GACMxM,GAAcrD,EAAArhC,EAAA3M,EAAA,EAAAngB,EAAA,KAcpBwgE,EAAAluE,UAAA2sE,yBAAA,SAAA1nD,EAAAR,EAAAkiC,EAAAnjD,EAAAgpE,GAGA,OAFA9gE,KAAAm7C,2BAAA5hC,EAAAR,EAAAkiC,EAA2FloC,GAG3Fjb,EAAAtD,KAAAssE,EAAA9gE,KAAAijE,WAAA,WAEA,GAWAT,EAAAluE,UAAA4uE,YAAA,SAAA/S,EAAAp3C,EAAAw9B,EAAAysB,GACAhjE,KAAA+iE,sBAA+B/4C,GAAemmC,EAAAp3C,EAAAiqD,IAS9CR,EAAAluE,UAAA6uE,WAAA,SAAAhT,EAAAp3C,EAAAiqD,GACAhjE,KAAA+iE,sBAA+B/4C,GAAemmC,EAAAp3C,EAAAiqD,IAS9CR,EAAAluE,UAAAopD,oBAAA,SAAAyS,EAAAp3C,EAAAiqD,GACAhjE,KAAA+iE,sBAA+B/4C,GAAemmC,EAAAp3C,EAAAiqD,IAS9CR,EAAAluE,UAAAyrE,aAAA,SAAAhnD,EAAA06C,GACA,IAAAjV,EAAAzlC,EAAAylC,UACA9N,EAAA33B,EAAA23B,WACAvS,EAAAuS,EAAA33B,EAAA0a,KAAA,KACA2K,EAAAsS,EAAA33B,EAAA0a,KAAA,KACA4K,EAAAqS,EAAA8N,EAAAhrB,WACA8K,GAAAD,EACAhP,GAAAmvB,EAAA1vB,SACAyP,GAAAigB,EAAAnwC,OAAA,GAAAolD,EACAj1B,GAAAggB,EAAAnwC,OAAA,GACA,OAAW6vB,GAAgBl+B,KAAAk3D,WAAA/4B,EAAAC,EAAAC,EAAAC,EAAAjP,EAAAkP,EAAAC,IAS3BgkC,EAAAluE,UAAAosE,aAAA,SAAA3nD,EAAAw9B,EAAA4Z,GACI7gD,KASJkzD,EAAAluE,UAAAmsE,aAAA,SAAA1nD,EAAAw9B,GACA,OAAWjnC,KAGXkzD,EA3KuB,CCLN,SAAA1sD,GACjB,SAAAysD,EAAAruB,GAEAp+B,EAAAthB,KAAAwL,MAMAA,KAAAojE,OAAAlvB,EA6NA,OAzNAp+B,IAAAysD,EAAAvyD,UAAA8F,GACAysD,EAAAjuE,UAAAD,OAAA+K,OAAA0W,KAAAxhB,WACAiuE,EAAAjuE,UAAA2b,YAAAsyD,EAWAA,EAAAjuE,UAAA+uE,uBAAA,SAAAp8D,EAAAqH,EAAAg1D,GACA,gBAMA/0D,EAAAg1D,GAUA,OAAAt8D,EAAAu8D,kBAAAl1D,EAAAC,EAAAg1D,EANA,SAAAn2C,GACAk2C,EAAA/0D,KACA+0D,EAAA/0D,GAAA,IAEA+0D,EAAA/0D,GAAA6e,EAAAq2C,UAAAn9D,YAAA8mB,MAgBAm1C,EAAAjuE,UAAA6mD,2BAAA,SAAA5hC,EAAAR,EAAAkiC,EAAAnjD,KAKAyqE,EAAAjuE,UAAA2uE,SAAA,WACA,OAAAjjE,KAAAojE,QAQAb,EAAAjuE,UAAAovE,mBAAA,SAAA5vD,GACyDA,EAAA,OACzDwZ,aAA6BqhC,GAAUvkC,QACvCpqB,KAAA2jE,2BASApB,EAAAjuE,UAAAmnD,uBAAA,SAAAliC,EAAAR,GACA,UAUAwpD,EAAAjuE,UAAAsvE,UAAA,SAAA/P,GACA,IAAAgQ,EAAAhQ,EAAAvmC,WAQA,OAPAu2C,GAAsBlV,GAAUvkC,QAAAy5C,GAAyBlV,GAAU95C,OAC7D3C,EAAM2hD,EAAQz/C,EAASC,OAAArU,KAAA0jE,mBAAA1jE,MAE7B6jE,GAAsBlV,GAAUzkC,OAChC2pC,EAAA7wD,OACA6gE,EAAAhQ,EAAAvmC,YAEAu2C,GAAyBlV,GAAUvkC,QAMnCm4C,EAAAjuE,UAAAqvE,wBAAA,WACA,IAAAzvB,EAAAl0C,KAAAijE,WACA/uB,EAAAK,cAAAL,EAAAI,kBAAwDY,GAAWE,OACnEp1C,KAAAgW,WASAusD,EAAAjuE,UAAAwvE,oBAAA,SAAA/qD,EAAAgrD,GACA,GAAAA,EAAAlT,iBAAA,CAMA,IAAAmT,EAAA,SAAAD,EAAAhoE,EAAAgd,GACA,IAAA2jC,EAA4BltC,EAAMu0D,GAClCrnB,KAAA3jC,EAAA+lC,WACAilB,EAAAE,YAAAlrD,EAAAylC,UAAAlwC,WACAyK,EAAA+lC,UAAApC,KAEOp9C,KAAA,KAAAykE,GAEPhrD,EAAA4kC,oBAAA5nD,KACmE,KAYnEwsE,EAAAjuE,UAAA4vE,gBAAA,SAAAplB,EAAAilB,EAAAr2D,EAAA61D,GAEA,IAAA7mB,EAAwBltC,EAAMu0D,GAC9BI,EAAAz2D,EAAApH,WACAo2C,KAAAoC,EACAqlB,KAAArlB,EAAApC,GACAoC,EAAApC,GAAAynB,GAAA5iE,OAAAgiE,GAEAzkB,EAAApC,GAAAynB,GAAAZ,GAGAzkB,EAAApC,GAAA,GACAoC,EAAApC,GAAAynB,GAAAZ,IAwBAhB,EAAAjuE,UAAA8vE,kBAAA,SACArrD,EACAgrD,EACAprC,EACA+X,EACApiC,EACA2iB,EACAozC,EACAC,EACAC,EACAnzD,GAEA,IAAAsrC,EAAwBltC,EAAMu0D,GAC9BrnB,KAAA3jC,EAAA8jC,cACA9jC,EAAA8jC,YAAAH,GAAA,IAEA,IAGAtvB,EAAAm2C,EAAA3mB,EAAA9+B,EAAAE,EAAAtQ,EAHAmvC,EAAA9jC,EAAA8jC,YAAAH,GACAU,EAAArkC,EAAAqkC,UAGA,IAAA1vC,EAFAirB,EAAAqX,aAEqBtiC,GAAA22D,IAAe32D,EAGpC,IAFA61D,EAAA5qC,EAAA6rC,0BAAAvzC,EAAAvjB,EAAA61D,GACA3mB,EAAAjkB,EAAAgU,cAAAj/B,GACAoQ,EAAAylD,EAAAriE,KAA8B4c,GAAAylD,EAAAliE,OAAqByc,EACnD,IAAAE,EAAAulD,EAAAniE,KAAgC4c,GAAAulD,EAAAjiE,OAAqB0c,EACrDqmD,EAAA32D,GAAA42D,IACAl3C,EAAA22C,EAAAU,QAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,IACAgf,YAAmCrD,GAASC,OAC5C2yB,EAAAzvB,EAAAP,WAAA,EACAuwB,EAAApxB,YAAAoB,EAAAP,WACAuwB,EAAA7xB,QAAA,CAAA6B,EAAAsvB,EACA/jB,EAAA+rC,mBAAAt3C,EAAAq2C,WAAA7mB,UAGA7kD,IAAAwsE,GACAA,EAAA/vE,KAAA4c,EAAAgc,IAGA22C,EAAAY,QAAAj3D,EAAAoQ,EAAAE,EAAA1P,IAOAi0D,EAtOiB,CAuOf3sD,IClHagvD,GAnHe,SAAApC,GAC9B,SAAAqC,EAAA3wB,GAEAsuB,EAAAhuE,KAAAwL,KAAAk0C,GAMAl0C,KAAA8kE,iCnEgBA,cmEVA9kE,KAAA+kE,kBAAA,KAgGA,OA5FAvC,IAAAqC,EAAA70D,UAAAwyD,GACAqC,EAAAvwE,UAAAD,OAAA+K,OAAAojE,KAAAluE,WACAuwE,EAAAvwE,UAAA2b,YAAA40D,EAKAA,EAAAvwE,UAAAosE,aAAA,SAAA3nD,EAAAw9B,EAAA4Z,GAEAnwD,KAAAmjE,WAAAhT,EAAAp3C,GAEA,IAAA86C,EAAA7zD,KAAAqvD,WACA,GAAAwE,EAAA,CAGA,IAAA5iC,EAAAslB,EAAAtlB,OACA+zC,OAAAjtE,IAAAk5B,IACWS,GAAcT,EAAAlY,EAAAkY,SACfqD,GAAUrD,EAAAlY,EAAAkY,QACpB+zC,GACAhlE,KAAA0iE,KAAAvS,EAAAp3C,EAAmF,GAGnF,IAAAksD,EAAAjlE,KAAAklE,oBAIAjR,EAAA9D,EAAA+D,YACA/D,EAAA+D,YAAA3d,EAAA1C,QAIA,IAAA31B,EAAA+mD,EAAA,GACA7mD,EAAA6mD,EAAA,GACAE,EAAAtR,EAAA1xC,MAAA8iD,EAAA,GACAG,EAAAvR,EAAA7xD,OAAAijE,EAAA,GACAE,GAAA,IAAAC,GAAA,IACAjV,EAAAyD,UAAAC,EAAA,KAAAA,EAAA1xC,OAAA0xC,EAAA7xD,OACA9B,KAAAykC,MAAAzmB,GAAAhe,KAAAykC,MAAAvmB,GAAAle,KAAAykC,MAAAwgC,GAAAjlE,KAAAykC,MAAAygC,IAEAjV,EAAA+D,YAAAD,EAEA+Q,GACA7U,EAAAwQ,UAIA3gE,KAAAkjE,YAAA/S,EAAAp3C,EAAAw9B,IAOAsuB,EAAAvwE,UAAA+6D,SAAA,WACA,OAAW//C,KAOXu1D,EAAAvwE,UAAA4wE,kBAAA,WACA,OAAW51D,KAMXu1D,EAAAvwE,UAAA2sE,yBAAA,SAAA1nD,EAAAR,EAAAkiC,EAAAnjD,EAAAgpE,GACA,GAAA9gE,KAAAqvD,WAAA,CAIA,IAAAh2C,EAAgB3gB,GAAcsH,KAAA8kE,iCAAAvrD,EAAAzd,SAC1B4zB,GAAerW,EAAAN,EAAAylC,UAAAhrB,WAAAxzB,KAAAyiE,oBAEnBziE,KAAA+kE,oBACA/kE,KAAA+kE,kBAA+B7yB,GAAqB,MAGpDlyC,KAAA+kE,kBAAA9E,UAAA,SACAjgE,KAAA+kE,kBAAAnR,UAAA5zD,KAAAqvD,WAAAh2C,EAAA,GAAAA,EAAA,gBAEA,IAAAgsD,EAAArlE,KAAA+kE,kBAAAO,aAAA,SAAArsE,KACA,OAAAosE,EAAA,KACAvtE,EAAAtD,KAAAssE,EAAA9gE,KAAAijE,WAAAoC,QAEA,IAIAR,EA/G8B,CAgH5BvC,ICzGEiD,GAAwB,SAAAV,GAC5B,SAAAW,EAAAC,GA2BA,GAzBAZ,EAAArwE,KAAAwL,KAAAylE,GAMAzlE,KAAAy3D,OAAA,KAMAz3D,KAAA0lE,gBpEGA,coEEA1lE,KAAA2lE,iBAAA,GAMA3lE,KAAA4lE,gBAAA,KAEAH,EAAA9jC,YAAiC4tB,GAASI,OAC1C,QAAA33D,EAAA,EAAA4Y,EAA2B+uD,GAAyB1nE,OAAQD,EAAA4Y,IAAQ5Y,EAAA,CACpE,IAAAopE,EAAmBzB,GAAyB3nE,GAC5C,GAAAopE,IAAAoE,GAAApE,EAAA,QAAAqE,GAAA,CACAzlE,KAAA4lE,gBAA+E,IAAAxE,EAAAqE,GAC/E,QAyIA,OAlIAZ,IAAAW,EAAAx1D,UAAA60D,GACAW,EAAAlxE,UAAAD,OAAA+K,OAAAylE,KAAAvwE,WACAkxE,EAAAlxE,UAAA2b,YAAAu1D,EAKAA,EAAAlxE,UAAAue,gBAAA,WACA7S,KAAA4lE,iBACA5lE,KAAA4lE,gBAAAztE,UAEA0sE,EAAAvwE,UAAAue,gBAAAre,KAAAwL,OAMAwlE,EAAAlxE,UAAA+6D,SAAA,WACA,OAAArvD,KAAAy3D,OAAAz3D,KAAAy3D,OAAApI,WAAA,MAMAmW,EAAAlxE,UAAA4wE,kBAAA,WACA,OAAAllE,KAAA0lE,iBAMAF,EAAAlxE,UAAAmsE,aAAA,SAAA1nD,EAAAw9B,GAEA,IAMAsd,EANAnjB,EAAA33B,EAAA23B,WACAjd,EAAA1a,EAAA0a,KACA+qB,EAAAzlC,EAAAylC,UACAqnB,EAAArnB,EAAAnwC,OACAiyD,EAAA9hB,EAAAhrB,WAIAsyC,EADuE9lE,KAAAijE,WACEzlB,YAEzEH,EAAAtkC,EAAAukC,UAEAyoB,EAAA/lE,KAAA4lE,gBACAI,EAAAjtD,EAAAkY,OAKA,GAJA80C,QAAAhuE,IAAAw+C,EAAAtlB,SACA+0C,EAAuB5xC,GAAe4xC,EAAAzvB,EAAAtlB,UAGtCosB,EAAepuB,MAAQouB,EAAsBpuB,MACpCgE,GAAO+yC,GAAA,CAChB,IAAA13D,EAAAkwC,EAAAlwC,WAOA23D,EAAAjmE,KAAA2lE,iBACA,GAAAI,EAAA,CACA,IAAA5V,EAAA4V,EAAA5V,QACA+V,EAAyF51D,EAAM,GAAGyI,EAAA,CAClG0a,KAAA,CACYP,GAAQ8yC,GAAA1F,EACRntC,GAAS6yC,GAAA1F,GAErB9hB,UAAmEluC,EAAM,GAAGyI,EAAAylC,UAAA,CAC5E1vB,SAAA,MAGAq3C,EAAA9xE,OAAAqJ,KAAAwoE,EAAArnB,oBAAAh5C,OACAguD,EAAA,IAAoBjF,GAAWoX,EAAA1F,EAAA5vB,EAAAyf,EAAA9d,OAAA,SAAAv6C,IAC/BiuE,EAAAtF,aAAAyF,EAAA3vB,KACAwvB,EAAAK,oBACenjD,GAAMgjD,EAAAE,KACrBhW,EAAA9d,OAAAlwB,MAAA+jD,EAAAzyC,KAAA,GAAAid,EACAyf,EAAA9d,OAAArwC,OAAAkkE,EAAAzyC,KAAA,GAAAid,EACAq1B,EAAAM,QAAAlW,EAAA+V,EAAA3vB,GACA0vB,EAAAE,EACAruE,YAIA+7D,EAAAiS,EAAAzW,SACA2W,EAAA1F,EAAA5vB,EAAApiC,GAEAulD,GAAA7zD,KAAA4jE,UAAA/P,KACA7zD,KAAAy3D,OAAA5D,EACA7zD,KAAA2lE,iBAAAM,GAIA,GAAAjmE,KAAAy3D,OAAA,CAEA,IAAA6O,GADAzS,EAAA7zD,KAAAy3D,QACAv/B,YACAquC,EAAA1S,EAAAlnB,gBACA65B,EAAA3S,EAAAvE,gBACA3/B,EAAA+gB,EAAA61B,GACAjG,EAAAkG,GACAl8D,EAAsB4zB,GAAgBl+B,KAAA0lE,gBACtCh1B,EAAAjd,EAAA,KAAAid,EAAAjd,EAAA,KACA9D,IACA,EACA62C,GAAAF,EAAA,GAAAT,EAAA,IAAAU,EACAC,GAAAX,EAAA,GAAAS,EAAA,IAAAC,GACMroC,GAAgBl+B,KAAA8kE,iCACtBp0B,EAAAjd,EAAA,KAAAnpB,EAAA,GAAAomC,EAAAjd,EAAA,KAAAnpB,EAAA,GACAomC,EAAA4vB,GAAA5vB,EAAA4vB,EACA,GACAuF,EAAA,IAAAA,EAAA,IAEA7lE,KAAAyiE,mBAAA8D,EAAA71B,EAAA81B,EAGA,QAAAxmE,KAAAy3D,QAMA+N,EAAAlxE,UAAA6mD,2BAAA,SAAA5hC,EAAAR,EAAAkiC,EAAAnjD,GACA,OAAAkI,KAAA4lE,gBACA5lE,KAAA4lE,gBAAAzqB,2BAAA5hC,EAAAR,EAAAkiC,EAAAnjD,GAEA+sE,EAAAvwE,UAAA6mD,2BAAA3mD,KAAAwL,KAAAuZ,EAAAR,EAAAkiC,EAAAnjD,IAIA0tE,EA1K4B,CA2K1BZ,IAQFW,GAAwB,iBAAArxB,GACxB,OAAAA,EAAAvS,YAA6B4tB,GAASC,OACtCtb,EAAAvS,YAAwB4tB,GAASI,QACsB,EAAA8W,kBAAgC7W,GAAgBJ,OAUvG+V,GAAwB,gBAAAmB,EAAAxyB,GACxB,WAAaqxB,GAA2E,IAIzE,IAAAoB,GAAA,GCjNfC,GAAA,SAAA1lE,EAAAG,EAAAD,EAAAE,GAKAtB,KAAAkB,OAKAlB,KAAAqB,OAKArB,KAAAoB,OAKApB,KAAAsB,QAkGO,SAASulE,GAAc3lE,EAAAG,EAAAD,EAAAE,EAAAiiE,GAC9B,YAAAxrE,IAAAwrE,GACAA,EAAAriE,OACAqiE,EAAAliE,OACAkiE,EAAAniE,OACAmiE,EAAAjiE,OACAiiE,GAEA,IAAAqD,GAAA1lE,EAAAG,EAAAD,EAAAE,GAlGAslE,GAAAtyE,UAAAwN,SAAA,SAAA2hE,GACA,OAAAzjE,KAAAmhC,WAAAsiC,EAAA,GAAAA,EAAA,KAOAmD,GAAAtyE,UAAAwyE,kBAAA,SAAAvD,GACA,OAAAvjE,KAAAkB,MAAAqiE,EAAAriE,MAAAqiE,EAAAliE,MAAArB,KAAAqB,MACArB,KAAAoB,MAAAmiE,EAAAniE,MAAAmiE,EAAAjiE,MAAAtB,KAAAsB,MAQAslE,GAAAtyE,UAAA6sC,WAAA,SAAArjB,EAAAE,GACA,OAAAhe,KAAAkB,MAAA4c,MAAA9d,KAAAqB,MAAArB,KAAAoB,MAAA4c,MAAAhe,KAAAsB,MAOAslE,GAAAtyE,UAAA2uB,OAAA,SAAAsgD,GACA,OAAAvjE,KAAAkB,MAAAqiE,EAAAriE,MAAAlB,KAAAoB,MAAAmiE,EAAAniE,MACApB,KAAAqB,MAAAkiE,EAAAliE,MAAArB,KAAAsB,MAAAiiE,EAAAjiE,MAMAslE,GAAAtyE,UAAAiN,OAAA,SAAAgiE,GACAA,EAAAriE,KAAAlB,KAAAkB,OACAlB,KAAAkB,KAAAqiE,EAAAriE,MAEAqiE,EAAAliE,KAAArB,KAAAqB,OACArB,KAAAqB,KAAAkiE,EAAAliE,MAEAkiE,EAAAniE,KAAApB,KAAAoB,OACApB,KAAAoB,KAAAmiE,EAAAniE,MAEAmiE,EAAAjiE,KAAAtB,KAAAsB,OACAtB,KAAAsB,KAAAiiE,EAAAjiE,OAOAslE,GAAAtyE,UAAA6+B,UAAA,WACA,OAAAnzB,KAAAsB,KAAAtB,KAAAoB,KAAA,GAMAwlE,GAAAtyE,UAAAgoD,QAAA,WACA,OAAAt8C,KAAAkzB,WAAAlzB,KAAAmzB,cAMAyzC,GAAAtyE,UAAA4+B,SAAA,WACA,OAAAlzB,KAAAqB,KAAArB,KAAAkB,KAAA,GAOA0lE,GAAAtyE,UAAAyN,WAAA,SAAAwhE,GACA,OAAAvjE,KAAAkB,MAAAqiE,EAAAliE,MACArB,KAAAqB,MAAAkiE,EAAAriE,MACAlB,KAAAoB,MAAAmiE,EAAAjiE,MACAtB,KAAAsB,MAAAiiE,EAAAniE,MAyBe,IAAA2lE,GAAA,GCzHXC,GAAuB,SAAAnC,GAC3B,SAAAoC,EAAAC,EAAAC,GAEAtC,EAAArwE,KAAAwL,KAAAknE,GAMAlnE,KAAAmwD,QAAAgX,EAAA,KAA0Cj1B,KAM1ClyC,KAAAonE,cAMApnE,KAAAqnE,gBAAA,KAMArnE,KAAAsnE,iBAMAtnE,KAAAunE,cAAA,GAMAvnE,KAAAwnE,WAAA,EAMAxnE,KAAAynE,UlF0IA,CAAAtmE,SAAA,UkFpIAnB,KAAA0nE,cAAA,IAA6BX,GAAS,SAMtC/mE,KAAA0lE,gBtErCA,csE2CA1lE,KAAA2nE,WAAA,EA+RA,OA3RA9C,IAAAoC,EAAAj3D,UAAA60D,GACAoC,EAAA3yE,UAAAD,OAAA+K,OAAAylE,KAAAvwE,WACA2yE,EAAA3yE,UAAA2b,YAAAg3D,EAOAA,EAAA3yE,UAAAszE,gBAAA,SAAAx6C,GACA,IAAA85C,EAAqElnE,KAAAijE,WACrE4E,EAAAz6C,EAAAE,WACAw6C,EAAAZ,EAAAa,4BACA,OAAAF,GAAwB59C,GAASG,QACjCy9C,GAAqB59C,GAASI,OAC9Bw9C,GAAqB59C,GAASpV,QAAAizD,GAW9Bb,EAAA3yE,UAAAmwE,QAAA,SAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GACA,IAAA44D,EAAqElnE,KAAAijE,WAErE71C,EADuE85C,EAAA1pB,YACvEinB,QAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GAaA,OAZA8e,EAAAE,YAA2BrD,GAASpV,QACpCqyD,EAAAa,4BAGOb,EAAAc,aAAA,IAEPhoE,KAAAwnE,WAAA,GAHAp6C,EAAA66C,SAAsBh+C,GAASG,SAM/BpqB,KAAA4nE,gBAAAx6C,KACAA,IAAA86C,kBAEA96C,GAMA65C,EAAA3yE,UAAAmsE,aAAA,SAAA1nD,EAAAw9B,GAEA,IAAA7F,EAAA33B,EAAA23B,WACAjd,EAAA1a,EAAA0a,KACA+qB,EAAAzlC,EAAAylC,UACAlwC,EAAAkwC,EAAAlwC,WACAgyD,EAAA9hB,EAAAhrB,WACAqyC,EAAArnB,EAAAnwC,OAEA64D,EAAqElnE,KAAAijE,WACrEc,EAAuEmD,EAAA1pB,YACvE2qB,EAAApE,EAAA9tD,cACA0iB,EAAAorC,EAAAqE,yBAAA95D,GACAZ,EAAAirB,EAAA0vC,kBAAA/H,EAAAtgE,KAAA2nE,YACA/qB,EAAAjkB,EAAAgU,cAAAj/B,GACA46D,EAAApoE,KAAAykC,MAAA27B,EAAA1jB,IAAA,EACA3rB,EAAAlY,EAAAkY,OAKA,QAHAl5B,IAAAw+C,EAAAtlB,SACAA,EAAemD,GAAenD,EAAAslB,EAAAtlB,SAEtBgC,GAAOhC,GAEf,SAGA,IAAAsyC,EAAA5qC,EAAA6rC,0BAAAvzC,EAAAvjB,GACA44D,EAAA3tC,EAAA4vC,mBAAA76D,EAAA61D,GAEAiF,EAAAzE,EAAA0E,kBAAA/3B,GAKAg4B,EAAA,GACAA,EAAAh7D,GAAA,GAEA,IASA0f,EAAAtP,EAAAE,EATA2qD,EAAA3oE,KAAAqjE,uBACAU,EAAAz1D,EAAAo6D,GAEArrB,EAAAtkC,EAAAukC,UACAsrB,EAAAvrB,EAAuCpuB,KAAQouB,EAAqBpuB,IAEpEw4C,EAAAznE,KAAAynE,UACAoB,EAAA7oE,KAAA0nE,cAGA,IAFA1nE,KAAAwnE,WAAA,EAEA1pD,EAAAylD,EAAAriE,KAA4B4c,GAAAylD,EAAAliE,OAAqByc,EACjD,IAAAE,EAAAulD,EAAAniE,KAA8B4c,GAAAulD,EAAAjiE,OAAqB0c,EACnD,KAAAyvB,KAAAC,MAAA30B,EAAAwlC,KAAA,IAAAqqB,GAAA,CAIA,GADAx7C,EAAAptB,KAAAykE,QAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GACAtO,KAAA4nE,gBAAAx6C,GAAA,CACA,IAAA07C,EAAoBt5D,EAAMxP,MAC1B,GAAAotB,EAAAE,YAAiCrD,GAASG,OAAA,CAC1Cs+C,EAAAh7D,GAAA0f,EAAAq2C,UAAAn9D,YAAA8mB,EACA,IAAA27C,EAAA37C,EAAA27C,aAAAD,GACA9oE,KAAAwnE,YAAAuB,IAAA,IAAA/oE,KAAAunE,cAAAzxE,QAAAs3B,KACAptB,KAAAwnE,WAAA,GAGA,OAAAp6C,EAAA47C,SAAAF,EAAA/vD,EAAAwlC,MAEA,SAIA,IAAA0qB,EAAAtwC,EAAAuwC,2BACA97C,EAAAq2C,UAAAoF,EAAApB,GACA0B,GAAA,EACAF,IACAE,EAAAR,EAAAj7D,EAAA,EAAAu7D,IAEAE,GACAxwC,EAAAywC,gCACAh8C,EAAAq2C,UAAAkF,EAAA,KAAAE,EAAApB,GAMA,IAAAhF,EAAA7lB,EAAAlM,EAAA83B,EAAAF,EACA,KAAAtoE,KAAAyiE,oBAAAh1B,KAAAC,MAAA30B,EAAAwlC,KAAA,IAAAqqB,KACA5oE,KAAAwnE,YACAxnE,KAAAqnE,kBAAoC31C,GAAc1xB,KAAAqnE,gBAAAp2C,IAClDjxB,KAAAsnE,kBAAAa,GACAG,GAAAtoE,KAAAonE,gBACAwB,GAAAnG,GAAAziE,KAAAyiE,oBACA,CAEA,IAAAtS,EAAAnwD,KAAAmwD,QACA,GAAAA,EAAA,CACA,IAAAkZ,EAAAtF,EAAAuF,iBAAA57D,EAAAgjC,EAAApiC,GACA6T,EAAAjiB,KAAAykC,MAAA4+B,EAAArwC,WAAAm2C,EAAA,GAAAf,GACAtmE,EAAA9B,KAAAykC,MAAA4+B,EAAApwC,YAAAk2C,EAAA,GAAAf,GACAj2B,EAAA8d,EAAA9d,OACAA,EAAAlwB,UAAAkwB,EAAArwC,WACAhC,KAAAonE,cAAAkB,EACAj2B,EAAAlwB,QACAkwB,EAAArwC,WAEAhC,KAAAqnE,kBAAuC/0C,GAAMg0C,EAAAtmE,KAAAqnE,kBAC7ClX,EAAA8P,UAAA,IAAA99C,EAAAngB,GAEAsmE,EAAAtoE,KAAAonE,eAIApnE,KAAAunE,cAAAtvE,OAAA,EAEA,IAUAsxE,EAAAC,EAAAnF,EAAArsE,EAAA4Y,EACA64D,EAAAC,EAAAC,EAAA3V,EAAAv5D,EAXAmvE,EAAAv1E,OAAAqJ,KAAAgrE,GAAA3sE,IAAA+pB,QAYA,IAXA8jD,EAAA/jE,KAAA,SAAArJ,EAAAC,GACA,OAAAD,IAAAkR,EACA,EACSjR,IAAAiR,GACT,EAEAlR,EAAAC,EAAA,EAAAD,EAAAC,GAAA,MAKAzE,EAAA,EAAA4Y,EAAAg5D,EAAA3xE,OAAiCD,EAAA4Y,IAAQ5Y,EAOzC,QAAA6xE,KANAxF,EAAAuF,EAAA5xE,GACAwxE,EAAAzF,EAAAuF,iBAAAjF,EAAA3zB,EAAApiC,GAEAi7D,EADA5wC,EAAAgU,cAAA03B,GACAznB,EACA8sB,EAAAlB,EAAAzE,EAAA+F,uBAAAx7D,GACAq7D,EAAAjB,EAAArE,GAEAj3C,EAAAu8C,EAAAE,GAEA/rD,IADA2rD,EAAA9wC,EAAAoxC,mBAAA38C,EAAA48C,eAAAvC,IACA,GAAAnB,EAAA,IAAA1pB,EAAA4rB,EAAAF,EACAtqD,GAAAsoD,EAAA,GAAAmD,EAAA,IAAA7sB,EAAA4rB,EAAAF,EACAtU,EAAAwV,EAAA,GAAAD,EAAAjB,EACA7tE,EAAA+uE,EAAA,GAAAD,EAAAjB,EACAtoE,KAAAiqE,cAAA78C,EAAArU,EAAAw9B,EAAAz4B,EAAAE,EAAAg2C,EAAAv5D,EAAAivE,EAAAh8D,IAAA22D,GACArkE,KAAAunE,cAAAxxE,KAAAq3B,GAIAptB,KAAAsnE,iBAAAa,EACAnoE,KAAAyiE,mBAAA7lB,EAAAlM,EAAA83B,EAAAF,EACAtoE,KAAAqnE,gBAAAf,EAGA,IAAA32C,EAAA3vB,KAAAyiE,mBAAAnC,EACAh2D,EAAoB4zB,GAAgBl+B,KAAA0lE,gBACpCh1B,EAAAjd,EAAA,KAAAid,EAAAjd,EAAA,KACA9D,IACA,GACA3vB,KAAAqnE,gBAAA,GAAAxB,EAAA,IAAA7lE,KAAAyiE,mBAAA/xB,GACAm1B,EAAA,GAAA7lE,KAAAqnE,gBAAA,IAAArnE,KAAAyiE,mBAAA/xB,GAaA,OAZIxS,GAAgBl+B,KAAA8kE,iCACpBp0B,EAAAjd,EAAA,KAAAnpB,EAAA,GAAAomC,EAAAjd,EAAA,KAAAnpB,EAAA,GACAomC,EAAA4vB,GAAA5vB,EAAA4vB,EACA,GACAuF,EAAA,IAAAA,EAAA,IAGA7lE,KAAAkkE,gBAAAnrD,EAAA+lC,UAAAilB,EAAAr2D,EAAA61D,GACAvjE,KAAAokE,kBAAArrD,EAAAgrD,EAAAprC,EAAA+X,EACApiC,EAAA2iB,EAAAvjB,EAAAw5D,EAAAc,cACAhoE,KAAA8jE,oBAAA/qD,EAAAgrD,GAEA/jE,KAAAunE,cAAAtvE,OAAA,GAcAgvE,EAAA3yE,UAAA21E,cAAA,SAAA78C,EAAArU,EAAAw9B,EAAAz4B,EAAAE,EAAAg2C,EAAAv5D,EAAAyvE,EAAAC,GACA,IAAAtW,EAAA7zD,KAAAoqE,aAAAh9C,GACA,GAAAymC,EAAA,CAGA,IAAAiV,EAAct5D,EAAMxP,MACpBi0D,EAAAkW,EAAA/8C,EAAA47C,SAAAF,EAAA/vD,EAAAwlC,MAAA,EAEAwlB,EADqE/jE,KAAAijE,WACEzlB,YACvE,IAAAyW,GAAA8P,EAAAsG,UAAAtxD,EAAAylC,UAAAlwC,aACAtO,KAAAmwD,QAAA8P,UAAAniD,EAAAE,EAAAg2C,EAAAv5D,GAEA,IAAA6vE,EAAArW,IAAAj0D,KAAAmwD,QAAA+D,YACAoW,IACAtqE,KAAAmwD,QAAAkQ,OACArgE,KAAAmwD,QAAA+D,YAAAD,GAEAj0D,KAAAmwD,QAAAyD,UAAAC,EAAAqW,IACArW,EAAA1xC,MAAA,EAAA+nD,EAAArW,EAAA7xD,OAAA,EAAAkoE,EAAApsD,EAAAE,EAAAg2C,EAAAv5D,GAEA6vE,GACAtqE,KAAAmwD,QAAAwQ,UAEA,IAAA1M,EACAl7C,EAAAm0B,SAAA,EACKi9B,GACL/8C,EAAAm9C,cAAAzB,KAOA7B,EAAA3yE,UAAA+6D,SAAA,WACA,IAAAc,EAAAnwD,KAAAmwD,QACA,OAAAA,IAAA9d,OAAA,MAMA40B,EAAA3yE,UAAA4wE,kBAAA,WACA,OAAAllE,KAAA0lE,iBASAuB,EAAA3yE,UAAA81E,aAAA,SAAAh9C,GACA,OAA2D,EAAAiiC,YAG3D4X,EA9V2B,CA+VzBrC,IAQFoC,GAAuB,iBAAA9yB,GACvB,OAAAA,EAAAvS,YAA6B4tB,GAASE,MAUtCuX,GAAuB,gBAAAN,EAAAxyB,GACvB,WAAa8yB,GAAyE,IAQtFA,GAAuB1yE,UAAA2uE,SAGR,IAAAuH,GAAA,sBCxYXC,GAAW,aAEfA,GAAWn2E,UAAAo2E,UAAA,SAAA32B,EAAA42B,GACX,OAASr7D,KAOTm7D,GAAWn2E,UAAAy3B,QAAA,WACX,OAASzc,KAQTm7D,GAAWn2E,UAAAs2E,aAAA,SAAAC,GACX,OAASv7D,KAGM,IAAAw7D,GAAA,GCxBAC,GAAA,CACf51C,OAAA,SACA61C,QAAA,UACAxb,MAAA,QACA56B,YAAA,aACAE,QAAA,UACAm2C,KAAA,QCDO,SAAAC,GAAAh5C,EAAAC,EAAApP,EAAAqP,GAIP,IAHA,IAAAlE,EAAAgE,EAAAC,GACAhE,EAAA+D,EAAAC,EAAA,GACAl6B,EAAA,EACAD,EAAAm6B,EAAAC,EAA+Bp6B,EAAA+qB,EAAS/qB,GAAAo6B,EAAA,CACxC,IAAAhE,EAAA8D,EAAAl6B,GACAq2B,EAAA6D,EAAAl6B,EAAA,GACAC,GAAAiI,KAAAsE,MAAA4pB,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,IACAD,EAAAE,EACAD,EAAAE,EAEA,OAAAp2B,ECJO,SAAAkzE,GACPj5C,EAAAC,EAAApP,EAAAqP,EAAAkgC,EAAA8Y,EAAAC,EAAAC,GAmBA,IAlBA,IAiBAryE,EAAAsK,EAAAgoE,EAjBAnwE,EAAA,GAGAowE,EAAAt5C,EAAAC,GAAAD,EAAAnP,EAAAqP,GAEAq5C,EAAAnZ,EAAAr6D,OAEAi2B,EAAAgE,EAAAC,GACAhE,EAAA+D,EAAAC,EAAA,GAEA/D,EAAA8D,EADAC,GAAAC,GAEA/D,EAAA6D,EAAAC,EAAA,GACAu5C,EAAA,EACA1lC,EAAA9lC,KAAAsE,KAAAtE,KAAAiE,IAAAiqB,EAAAF,EAAA,GAAAhuB,KAAAiE,IAAAkqB,EAAAF,EAAA,IAEAw9C,EAAA,GACAC,EAAA,EAEA5zE,EAAA,EAAiBA,EAAAyzE,IAAczzE,EAAA,CAC/BuL,EAAAioE,EAAAC,EAAAzzE,EAAA,EAAAA,EACA,IAAA6zE,EAAAvZ,EAAAwZ,OAAAvoE,GAEAwoE,EAAAX,EADAO,EAAAH,EAAAK,EAAAF,IAAAE,GACAD,EACAA,GAAAG,EAEA,IADA,IAAAC,EAAAX,EAAAU,EAAA,EACA55C,EAAApP,EAAAqP,GAAAs5C,EAAA1lC,EAAAgmC,GACA99C,EAAAE,EACAD,EAAAE,EAEAD,EAAA8D,EADAC,GAAAC,GAEA/D,EAAA6D,EAAAC,EAAA,GACAu5C,GAAA1lC,EACAA,EAAA9lC,KAAAsE,KAAAtE,KAAAiE,IAAAiqB,EAAAF,EAAA,GAAAhuB,KAAAiE,IAAAkqB,EAAAF,EAAA,IAEA,IAAA89C,EAAAD,EAAAN,EACAr8C,EAAAnvB,KAAAo2B,MAAAjI,EAAAF,EAAAC,EAAAF,GAIA,GAHAs9C,IACAn8C,KAAA,GAAAnvB,KAAAuuB,GAAAvuB,KAAAuuB,SAEA12B,IAAAwzE,EAAA,CACA,IAAAx8C,EAAAM,EAAAk8C,EAEA,GADAx8C,KAAA7uB,KAAAuuB,IAAA,EAAAvuB,KAAAuuB,GAAAM,GAAA7uB,KAAAuuB,GAAA,EAAAvuB,KAAAuuB,GAAA,EACAvuB,KAAAie,IAAA4Q,GAAAu8C,EACA,YAGA,IAAAY,EAAAD,EAAAjmC,EACAloB,EAAY6Q,GAAIT,EAAAE,EAAA89C,GAChBluD,EAAY2Q,GAAIR,EAAAE,EAAA69C,GAChBX,GAAAl8C,GACAm8C,IACAvyE,EAAA,GAAA6kB,EACA7kB,EAAA,GAAA+kB,EACA/kB,EAAA,GAAA8yE,EAAA,GAEA9yE,EAAA,GAAA0yE,IAGAC,EAAAG,EACA9yE,EAAA,CAAA6kB,EAAAE,EAAA+tD,EAAA,EAAA18C,EAFAs8C,EAAAE,GAGAL,EACApwE,EAAA+wE,QAAAlzE,GAEAmC,EAAArF,KAAAkD,GAEAsyE,EAAAl8C,GAEAg8C,GAAAU,EAEA,OAAA3wE,ECnFA,IAAAgxE,GAAA,CACAC,eAAA,EACAC,WAAA,EACAn3C,OAAA,EACAo3C,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,IAOWC,GAAe,CAAAb,GAAAQ,MAMfM,GAAiB,CAAAd,GAAAY,QAMrBG,GAAA,CAAAf,GAAAE,YAMAc,GAAA,CAAAhB,GAAAG,YAGQc,GAAA,GCtCRC,GAAA,CACLvC,GAAUj2C,QACVi2C,GAAU51C,OACV41C,GAAUn2C,YACVm2C,GAAUvb,MACVub,GAAUE,KACVF,GAAUC,SAOLuC,GAAA,CACPprE,KAAA,EACA4gB,IAAA,EACA1U,OAAA,GACAjM,MAAA,EACAmkC,MAAA,EACAuV,IAAA,EACA0xB,OAAA,GACAC,QAAA,GACAC,WAAA,GACAC,YAAA,GACAC,OAAA,GCDIC,GzFwKJ,CAAA1sE,SAAA,UyFlKI2sE,G7EDJ,c6EwhCeC,GAphCC,SAAAjX,GAChB,SAAAkX,EAAAtsC,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GACArX,EAAAtiE,KAAAwL,MAKAA,KAAAmuE,gBAMAnuE,KAAA0hC,YAOA1hC,KAAAiuE,YAMAjuE,KAAAkuE,WAMAluE,KAAA0wC,aAMA1wC,KAAAouE,aAAA,EAOApuE,KAAAwzB,aAMAxzB,KAAAquE,WAMAruE,KAAAsuE,2BAAA,KAMAtuE,KAAAuuE,2BAAA,KAMAvuE,KAAAwuE,mBAAA,KAMAxuE,KAAAyuE,aAAA,GAMAzuE,KAAAgxB,YAAA,GAMAhxB,KAAA0uE,iBAAA,GAMA1uE,KAAA2uE,mB7EjGA,c6EuGA3uE,KAAA4uE,yBAAA,GAMA5uE,KAAA64D,kBAAA,KAMA74D,KAAAqtB,MAAmE,GAMnErtB,KAAAm3D,cAAA,EA25BA,OAv5BAL,IAAAkX,EAAAh+D,UAAA8mD,GACAkX,EAAA15E,UAAAD,OAAA+K,OAAA03D,KAAAxiE,WACA05E,EAAA15E,UAAA2b,YAAA+9D,EAWAA,EAAA15E,UAAAu6E,sBAAA,SAAA1e,EAAA2e,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAhf,EAAA6J,YACA7J,EAAAuJ,OAAAhhE,MAAAy3D,EAAA2e,GACA3e,EAAAwJ,OAAAjhE,MAAAy3D,EAAA4e,GACA5e,EAAAwJ,OAAAjhE,MAAAy3D,EAAA6e,GACA7e,EAAAwJ,OAAAjhE,MAAAy3D,EAAA8e,GACA9e,EAAAwJ,OAAAjhE,MAAAy3D,EAAA2e,GACAI,IACAlvE,KAAAquE,WAA2Ca,EAAA,GAC3ClvE,KAAAovE,MAAAjf,IAEAgf,IACAnvE,KAAAqvE,gBAAAlf,EAAwD,GACxDA,EAAAgK,WAwBA6T,EAAA15E,UAAAg7E,aAAA,SACAnf,EACAryC,EACAE,EACA61C,EACAvzB,EACAC,EACAgvC,EACAvtE,EACA6xC,EACAigB,EACAC,EACAjlC,EACAa,EACA6/C,EACArtD,EACA8uB,EACAi+B,EACAC,GAEA,IAAAM,EAAAP,GAAAC,EAGArxD,GAFAwiB,GAAA3Q,EAGA3R,GAFAuiB,GAAA5Q,EAIA,IAQAm/C,EAEAC,EAEAC,EAEAC,EAdAjb,EAAA7xC,EAAA2xC,EAAAD,EAAA1xC,MAAA0xC,EAAA1xC,MAAA2xC,EAAA3xC,EACA1nB,EAAAuH,EAAA+xD,EAAAF,EAAA7xD,OAAA6xD,EAAA7xD,OAAA+xD,EAAA/xD,EACA0tE,EAAAz+B,EAAA,GAAA+iB,EAAArkC,EAAAshB,EAAA,GACA0+B,EAAA1+B,EAAA,GAAAx2C,EAAAk1B,EAAAshB,EAAA,GACA2+B,EAAA9xD,EAAAmzB,EAAA,GACA4+B,EAAA7xD,EAAAizB,EAAA,IAUAw+B,GAAA,IAAA3gD,KACAggD,EAAA,CAAAc,EAAAC,GACAd,EAAA,CAAAa,EAAAF,EAAAG,GACAb,EAAA,CAAAY,EAAAF,EAAAG,EAAAF,GACAV,EAAA,CAAAW,EAAAC,EAAAF,IAGA,IAAArlE,EAAA,KACA,OAAAwkB,EAAA,CACA,IAAAijB,EAAAj0B,EAAAwiB,EACA0R,EAAAh0B,EAAAuiB,EACAj2B,EAAkB4zB,GAAiB4vC,GAAY/7B,EAAAC,EAAA,IAAAljB,GAAAijB,GAAAC,GAEzChgB,GAAoB67C,IACpB18C,GAAiB08C,GAAWn1E,GAAeo1E,GAAYgB,IACvD39C,GAAiB08C,GAAWn1E,GAAeo1E,GAAYiB,IACvD59C,GAAiB08C,GAAWn1E,GAAeo1E,GAAYkB,IACvD79C,GAAiB08C,GAAWn1E,GAAeo1E,GAAYmB,SAEvDl9C,GAAc69C,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAuC9B,IAE3D,IAAAx7B,EAAA8d,EAAA9d,OACAy9B,EAAAX,IAAA,GAAAx/C,EAAA,IACA5tB,EACQ8rE,GAAS,GAAAiC,GAAAz9B,EAAAlwB,OAAuC0rD,GAAS,GAAAiC,GAAA,GACzDjC,GAAS,GAAAiC,GAAAz9B,EAAArwC,QAAwC6rE,GAAS,GAAAiC,GAAA,EAOlE,GALAN,IACA1xD,EAAA5d,KAAAykC,MAAA7mB,GACAE,EAAA9d,KAAAykC,MAAA3mB,IAGAuxD,EAAA,CACA,IAAAxtE,GAAA,GAAAwtE,EAAA,GACA,OAEMh9C,GAAMg9C,EAAiB1B,IAC7B,IAAAkC,EAAAhuE,EACA,CAAAouD,EAAA7lD,IAAAxO,MAAA,QAAA+3C,EAAAggB,EAAAC,EAAAC,EAAAC,EAAAv5D,EAAAqjB,EAAAE,EAAA2R,GACA,KACAogD,GAAAN,GACAM,EAAAh6E,KAAAm5E,EAAAC,EAAAL,EAAAC,EAAAC,EAAAC,GAEAM,EAAAx5E,KAAAg6E,QACKhuE,IACL0tE,GACAzvE,KAAA6uE,sBAAA1e,EAAA2e,EAAAC,EAAAC,EAAAC,EAC8B,EACA,GAExBrb,GAASzD,EAAA7lD,EAAAupC,EAAAggB,EAAAC,EAAAC,EAAAC,EAAAv5D,EAAAqjB,EAAAE,EAAA2R,KASfq+C,EAAA15E,UAAA07E,gBAAA,SAAAC,GACA,IAAAv/B,EAAA1wC,KAAA0wC,WACA,UAAAA,EAAAu/B,IAAAl0E,IAAA,SAAAm0E,GACA,OAAAA,EAAAx/B,KAcAs9B,EAAA15E,UAAA67E,sBAAA,SAAAj+C,EAAAC,EAAApP,EAAAqP,EAAAg+C,EAAAC,GAEA,IAAAC,EAAAtwE,KAAAgxB,YAAA/4B,OACAg5B,EAAAjxB,KAAAuwE,uBACAF,IACAl+C,GAAAC,GAEA,IAIAp6B,EAAAw4E,EAAAC,EAJAC,EAAA,CAAAx+C,EAAAC,GAAAD,EAAAC,EAAA,IACAw+C,EAAA,CAAArvC,SACAsvC,GAAA,EAGA,IAAA54E,EAAAm6B,EAAAC,EAA6Bp6B,EAAA+qB,EAAS/qB,GAAAo6B,EACtCu+C,EAAA,GAAAz+C,EAAAl6B,GACA24E,EAAA,GAAAz+C,EAAAl6B,EAAA,IACAy4E,EAAgB5+C,GAAsBZ,EAAA0/C,MACtCH,GACAI,IACA5wE,KAAAgxB,YAAAs/C,KAAAI,EAAA,GACA1wE,KAAAgxB,YAAAs/C,KAAAI,EAAA,IAEA1wE,KAAAgxB,YAAAs/C,KAAAK,EAAA,GACA3wE,KAAAgxB,YAAAs/C,KAAAK,EAAA,GACAC,GAAA,GACOH,IAAsBjgD,GAAYE,cACzC1wB,KAAAgxB,YAAAs/C,KAAAK,EAAA,GACA3wE,KAAAgxB,YAAAs/C,KAAAK,EAAA,GACAC,GAAA,GAEAA,GAAA,EAEAF,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAH,EAAAC,EAQA,OAJAL,GAAAQ,GAAA54E,IAAAm6B,EAAAC,KACApyB,KAAAgxB,YAAAs/C,KAAAI,EAAA,GACA1wE,KAAAgxB,YAAAs/C,KAAAI,EAAA,IAEAJ,GAWAtC,EAAA15E,UAAAu8E,uBAAA,SAAA3+C,EAAAC,EAAAkQ,EAAAjQ,EAAA0+C,GACA,QAAA94E,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAqCD,EAAA4Y,IAAQ5Y,EAAA,CAC7C,IAAA+qB,EAAAsf,EAAArqC,GACA+4E,EAAA/wE,KAAAmwE,sBAAAj+C,EAAAC,EAAApP,EAAAqP,GAAA,MACA0+C,EAAA/6E,KAAAg7E,GACA5+C,EAAApP,EAEA,OAAAoP,GAMA67C,EAAA15E,UAAAwgE,WAAA,SAAA9jB,EAAAsK,EAAAyZ,GACA/0D,KAAAgxE,cAAAhgC,EAAAsK,GACA,IAGAppB,EAAA6+C,EAAAD,EAAAG,EACA9+C,EAJAh2B,EAAA60C,EAAArP,UACAvP,EAAA4e,EAAApR,YACAsxC,EAAAlxE,KAAAgxB,YAAA/4B,OAGA,GAAAkE,GAAgBu4B,GAAYO,cAAA,CAE5B/C,GADA8e,EAAyE,GACzE7I,6BACA8oC,EAAA,GACA,IAAAntC,EAAAkN,EAAAgqB,WACA7oC,EAAA,EACA,QAAAn6B,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAwCD,EAAA4Y,IAAQ5Y,EAAA,CAChD,IAAAm5E,EAAA,GACAh/C,EAAAnyB,KAAA6wE,uBAAA3+C,EAAAC,EAAA2R,EAAA9rC,GAAAo6B,EAAA++C,GACAF,EAAAl7E,KAAAo7E,GAEAnxE,KAAAyuE,aAAA14E,KAAA,CAA8Bs3E,GAAiBb,OAC/C0E,EAAAD,EAAAjgC,EAAA+jB,EAAsDlxB,UACjD1nC,GAAkBu4B,GAAYI,SAAA34B,GAAoBu4B,GAAYM,mBACnE87C,EAAA,GACA5+C,EAAA/1B,GAAiCu4B,GAAYI,QACc,EAAAqT,6BAC3D6I,EAAA9R,qBACA/M,EAAAnyB,KAAA6wE,uBAAA3+C,EAAA,EAC2G,EAAAkW,UAC3GhW,EAAA0+C,GACA9wE,KAAAyuE,aAAA14E,KAAA,CAA8Bs3E,GAAiBb,OAC/C0E,EAAAJ,EAAA9/B,EAAA+jB,EAAqDpxB,MAChDxnC,GAAkBu4B,GAAYE,aAAAz4B,GAAwBu4B,GAAYK,aACvE7C,EAAA8e,EAAA9R,qBACA6xC,EAAA/wE,KAAAmwE,sBACAj+C,EAAA,EAAAA,EAAAj6B,OAAAm6B,GAAA,MACApyB,KAAAyuE,aAAA14E,KAAA,CAA8Bs3E,GAAiBb,OAC/C0E,EAAAH,EAAA//B,EAAA+jB,EAAoDtxB,MAC/CtnC,GAAkBu4B,GAAYC,QACnCzC,EAAA8e,EAAA9R,qBACAl/B,KAAAgxB,YAAAj7B,KAAAm8B,EAAA,GAAAA,EAAA,IACA6+C,EAAA/wE,KAAAgxB,YAAA/4B,OACA+H,KAAAyuE,aAAA14E,KAAA,CAA8Bs3E,GAAiBb,OAC/C0E,EAAAH,EAAA//B,EAAA+jB,KAEA/0D,KAAAoxE,YAAApgC,EAAAsK,IAQA0yB,EAAA15E,UAAA08E,cAAA,SAAAhgC,EAAAsK,GACAt7C,KAAAsuE,2BAAA,CAAuCjB,GAAiBhB,eAAA/wB,EAAA,GACxDt7C,KAAAyuE,aAAA14E,KAAAiK,KAAAsuE,4BACAtuE,KAAAuuE,2BAAA,CAAuClB,GAAiBhB,eAAA/wB,EAAA,GACxDt7C,KAAA4uE,yBAAA74E,KAAAiK,KAAAuuE,6BAMAP,EAAA15E,UAAA+8E,OAAA,aAMArD,EAAA15E,UAAA86E,MAAA,SAAAjf,GACA,GAAAnwD,KAAAquE,WAAA,CACA,IAAAiD,EAAmB54E,GAAcsH,KAAA2uE,mBAAA,OACjC4C,EAAA,IAAAvxE,KAAA0wC,WACAyf,EAAAvvB,UAAA0wC,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACAphB,EAAA/vB,OAAApgC,KAAAm3D,eAEAhH,EAAA+J,OACAl6D,KAAAquE,YACAle,EAAAgE,aAAAz7D,MAAAy3D,EAA0CwD,KAS1Cqa,EAAA15E,UAAA+6E,gBAAA,SAAAlf,EAAAqhB,GACArhB,EAAAmG,YAA4Ekb,EAAA,GAC5ErhB,EAAAwL,UAA0C6V,EAAA,GAC1CrhB,EAAAoL,QAA+CiW,EAAA,GAC/CrhB,EAAAuL,SAAiD8V,EAAA,GACjDrhB,EAAAyL,WAA2C4V,EAAA,GACnCp3D,IACR+1C,EAAAsL,eAAiD+V,EAAA,GACjDrhB,EAAA51C,YAAmDi3D,EAAA,MAQnDxD,EAAA15E,UAAAm9E,iBAAA,SAAAlC,EAAAj0B,GACA,GAAAi0B,KAAAt3E,OAAA,GACA,IAAAy5E,EAAAnC,EAAA,GACA,MAAAmC,MAAAnC,EAAAt3E,OAAA,GAEA,IAAA05E,EAAA,CACAzwE,KAAkCquE,EAAA,GAClCnuE,KAAkCmuE,EAAA,GAClCluE,KAAkCkuE,EAAA,GAClCjuE,KAAkCiuE,EAAA,GAClC94E,MAAA6kD,GAEA,IAAAt7C,KAAAmuE,cAAAprE,SAAA4uE,GAAA,CACA3xE,KAAAmuE,cAAAlrE,OAAA0uE,GACA,QAAAn2E,EAAA,EAAAgoC,EAAA+rC,EAAAt3E,OAAqDuD,EAAAgoC,IAAQhoC,EAAA,CAC7D,IAAAo2E,EAAiDrC,EAAA/zE,GACjDo2E,IACAA,EAAA35E,OAAA,IACA+H,KAAA6uE,sBAAA+C,EAAA,GACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAA,EAAA,KAEche,GAASl7D,WAAAX,EAAA65E,KAIvBrC,EAAAt3E,OAAA,EACQ+5B,GAAmBu9C,MAmB3BvB,EAAA15E,UAAAu9E,QAAA,SACA1hB,EACA7lD,EACAwnE,EACArD,EACAe,EACAuC,EACAC,GAGA,IAAAhZ,EACAh5D,KAAA64D,mBAAkC51C,GAAM3Y,EAAAtK,KAAA2uE,oBACxC3V,EAAAh5D,KAAA64D,mBAEA74D,KAAA64D,oBACA74D,KAAA64D,kBAAA,IAEAG,EAAyBvjC,GACzBz1B,KAAAgxB,YAAA,EAAAhxB,KAAAgxB,YAAA/4B,OAAA,EACAqS,EAAAtK,KAAA64D,mBACM96B,GAAqB/9B,KAAA2uE,mBAAArkE,IA2B3B,IAzBA,IAIA2nE,EACA3xC,EAAAC,EAAA2xC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAA1b,EAkBsFvY,EACtFx9B,EAAAE,EAxBAs0D,GAAwBthE,EAAO8gE,GAC/B95E,EAAA,EACA4Y,EAAA69D,EAAAx2E,OACA2G,EAAA,EAGA2zE,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA3yE,KAAA0uE,iBACA1X,EAAAh3D,KAAAm3D,cAEA9pC,EAA2D,CAC3D8iC,UACAzf,WAAA1wC,KAAA0wC,WACAld,WAAAxzB,KAAAwzB,WACA1E,SAAAkoC,GAKA4b,EAAA5yE,KAAAyuE,iBAAAzuE,KAAAkuE,SAAA,MAGAl2E,EAAA4Y,GAAA,CACA,IAAA4gE,EAAA/C,EAAAz2E,GAEA,OAD8Cw5E,EAAA,IAE9C,KAAanE,GAAiBhB,eAC9B/wB,EAAkGk2B,EAAA,GAClGc,GAAAR,EAAmDtiE,EAAM8rC,QAAAyO,cACzD/xD,EAAkCw5E,EAAA,QACvBz5E,IAAAi6E,GAA0C19C,GACrD09C,EAAA12B,EAAAyO,cAAA7xB,eAGAlgC,EAFAA,EAAkCw5E,EAAA,KAIlC,MACA,KAAanE,GAAiBf,WAC9BiG,EAAAK,IACA5yE,KAAAovE,MAAAjf,GACAoiB,EAAA,GAEAC,EAAAI,IACAziB,EAAAgK,SACAqY,EAAA,GAEAD,GAAAC,IACAriB,EAAA6J,YACAkY,EAAAC,EAAA7wC,OAEAtpC,EACA,MACA,KAAaq1E,GAAiBl4C,OAE9B,IAAAjH,EAAA8qC,EADAp6D,EAAgC4yE,EAAA,IAEhCrjD,EAAA6qC,EAAAp6D,EAAA,GAGAsf,EAFA86C,EAAAp6D,EAAA,GAEAsvB,EACA9P,EAFA46C,EAAAp6D,EAAA,GAEAuvB,EACApvB,EAAAmB,KAAAsE,KAAA0Z,IAAAE,KACA+xC,EAAAuJ,OAAAxrC,EAAAnvB,EAAAovB,GACAgiC,EAAA8J,IAAA/rC,EAAAC,EAAApvB,EAAA,IAAAmB,KAAAuuB,IAAA,KACAz2B,EACA,MACA,KAAaq1E,GAAiBd,WAC9Bpc,EAAAyJ,cACA5hE,EACA,MACA,KAAaq1E,GAAiBb,OAC9B5tE,EAAgC4yE,EAAA,GAChCS,EAAAT,EAAA,GACA,IAAAxgC,EAAmFwgC,EAAA,GACnFzc,EAAAyc,EAAA,GACA/7E,EAAA,GAAA+7E,EAAAv5E,OAAAu5E,EAAA,QAAAz5E,EACAs1B,EAAA2jB,WACA3jB,EAAAiuB,UACAtjD,KAAA26E,IACAA,EAAA36E,GAAA,IAEA,IAAAk5C,EAAAyhC,EAAA36E,GACAvC,EACAA,EAAAujE,EAAAp6D,EAAAqzE,EAAA,EAAA/gC,IAEAA,EAAA,GAAA8nB,EAAAp6D,GACAsyC,EAAA,GAAA8nB,EAAAp6D,EAAA,GACAsyC,EAAAj5C,OAAA,GAEA88D,EAAA7jB,EAAA7jB,KACAr1B,EACA,MACA,KAAaq1E,GAAiBX,WAC9B9tE,EAAgC4yE,EAAA,GAChCS,EAAiCT,EAAA,GACjC3d,EACA2d,EAAA,GAEAlxC,EAAsCkxC,EAAA,GACtCjxC,EAAsCixC,EAAA,GACtCjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAAxvE,EAAyCwvE,EAAA,GACzC39B,EAA0C29B,EAAA,GAC1C1d,EAA0C0d,EAAA,GAC1Czd,EAA0Cyd,EAAA,IAC1CqB,EAAkDrB,EAAA,IAClD1iD,EAA2C0iD,EAAA,IAC3C7hD,EAAwC6hD,EAAA,IACxCrvD,EAAwCqvD,EAAA,IAExCvgC,OAAA,EAAA6hC,OAAA,EAAAC,QAAA,EAaA,IAZAvB,EAAAv5E,OAAA,IACAg5C,EAA+CugC,EAAA,IAC/CsB,EAAgDtB,EAAA,IAChDuB,GAAkDvB,EAAA,MAElDvgC,EAAsB0gB,GACtBmhB,EAAAC,IAAA,GAGAF,IACA/jD,GAAAkoC,GAEgBp4D,EAAAqzE,EAAQrzE,GAAA,EACxBoB,KAAAsvE,aAAAnf,EACA6I,EAAAp6D,GAAAo6D,EAAAp6D,EAAA,GAAAi1D,EAAAvzB,EAAAC,EACAgvC,EAAAvtE,EAAA6xC,EAAAigB,EAAAC,EAAAjlC,EAAAa,EACA6/C,EAAArtD,EAAA8uB,EACA6hC,EAAmD,OACnDC,GAAqD,QAErD/yE,KAAAyxE,iBAAAlC,EAAAj0B,KACAtjD,EACA,MACA,KAAaq1E,GAAiBZ,WAC9B,IAAA3pD,GAAwC0uD,EAAA,GACxCzuD,GAAsCyuD,EAAA,GACtCwB,GAA2CxB,EAAA,GAC3CjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAAj5B,GAA2Ci5B,EAAA,GAC3CyB,GAA0CzB,EAAA,GAC1ClG,GAA2CkG,EAAA,GAC3CpG,GAA2DoG,EAAA,GAC3D9d,GAA0C8d,EAAA,GAC1C0B,GAA4C1B,EAAA,IAC5C2B,GAA8C3B,EAAA,IAC9Clf,GAAuCkf,EAAA,IACvC4B,GAA0C5B,EAAA,IAC1C/S,GAA4C+S,EAAA,IAE5C6B,GAA2BnI,GAAgBlS,EAAAl2C,GAAAC,GAAA,GAC3CuwD,GAAAlI,GAAA9Y,IACA,GAAA/Z,IAAA+6B,IAAAD,GAAA,CAEA,IACAtX,GAD0C,KAC1CwX,WAAAH,IAAArX,UAEAtzD,GAAwB0iE,GACxBnS,EAAAl2C,GAAAC,GAAA,EAAAuvC,GAAA8Y,IAFAiI,GAAAC,IAAqD/F,GAAUxR,IAE/DuP,IACA,GAAA7iE,GAAA,CACA,IAAAjO,QAAA,EAAAg5E,QAAA,EAAAC,QAAA,EAAA1xB,QAAA,EAAAj5C,QAAA,EACA,GAAAoqE,GACA,IAAA14E,GAAA,EAAAg5E,GAAA/qE,GAAAxQ,OAA8CuC,GAAAg5E,KAAQh5E,GAEtDi5E,IADA3qE,GAAAL,GAAAjO,KAC4C,GAC5CunD,GAX0C,KAW1CsN,SAAAokB,GAAAL,GAAA,GAAAF,IACA5yC,EAA8Cx3B,GAAA,GAAAqqE,GAC9C5yC,EAAAyyC,GAAAjxB,GAAA//C,OAAA,MAAAgxE,IAAAG,GAAAzf,GACA1zD,KAAAsvE,aAAAnf,EACsCrnD,GAAA,GAAiCA,GAAA,GAAAi5C,GACvEzhB,EAAAC,EAAAgvC,EAAAxtB,GAAA//C,OAAA,MACsC8G,GAAA,GAAA21D,IAAA,EAAA1c,GAAA5/B,MAClBwvC,GAAc,WAGlC,GAAAshB,GACA,IAAAz4E,GAAA,EAAAg5E,GAAA/qE,GAAAxQ,OAA8CuC,GAAAg5E,KAAQh5E,GAEtDi5E,IADA3qE,GAAAL,GAAAjO,KAC4C,GAC5CunD,GAzB0C,KAyB1CsN,SAAAokB,GAAAL,GAAAH,GAAA,IACA3yC,EAA8Cx3B,GAAA,GAC9Cy3B,EAAAyyC,GAAAjxB,GAAA//C,OAAA0xD,GACA1zD,KAAAsvE,aAAAnf,EACsCrnD,GAAA,GAAiCA,GAAA,GAAAi5C,GACvEzhB,EAAAC,EAAAgvC,EAAAxtB,GAAA//C,OAAA,MACsC8G,GAAA,GAAA21D,IAAA,EAAA1c,GAAA5/B,MAClBwvC,GAAc,YAKlC3xD,KAAAyxE,iBAAAlC,EAAAj0B,KACAtjD,EACA,MACA,KAAaq1E,GAAiBV,aAC9B,QAAA50E,IAAAg6E,EAAA,CAEA,IAAA32E,GAAA22E,EADAz2B,EAAoGk2B,EAAA,IAEpG,GAAAp2E,GACA,OAAAA,KAGApD,EACA,MACA,KAAaq1E,GAAiBT,KAC9BgG,EACAL,IAEAvyE,KAAAovE,MAAAjf,KAEAn4D,EACA,MACA,KAAaq1E,GAAiBR,gBAY9B,IAXAjuE,EAAgC4yE,EAAA,GAChCS,EAAiCT,EAAA,GACjC1zD,EAAAk7C,EAAAp6D,GAGAyzE,GAFAr0D,EAAAg7C,EAAAp6D,EAAA,IAEA,MADAwzE,EAAAt0D,EAAA,QAEAo0D,GAAAG,IAAAF,IACAhiB,EAAAuJ,OAAA57C,EAAAE,GACAk0D,EAAAE,EACAD,EAAAE,GAEAzzE,GAAA,EAAsBA,EAAAqzE,EAAQrzE,GAAA,EAG9BwzE,GAFAt0D,EAAAk7C,EAAAp6D,IAEA,KACAyzE,GAFAr0D,EAAAg7C,EAAAp6D,EAAA,IAEA,KACAA,GAAAqzE,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACAhiB,EAAAwJ,OAAA77C,EAAAE,GACAk0D,EAAAE,EACAD,EAAAE,KAGAr6E,EACA,MACA,KAAaq1E,GAAiBP,eAC9B2F,EAAAjB,EACAxxE,KAAAquE,WAAAmD,EAAA,GAEAe,IACAvyE,KAAAovE,MAAAjf,GACAoiB,EAAA,EACAC,IACAriB,EAAAgK,SACAqY,EAAA,IAIAriB,EAAAkG,UAAgFmb,EAAA,KAChFx5E,EACA,MACA,KAAaq1E,GAAiBN,iBAC9B2F,EAAAlB,EACAgB,IACAriB,EAAAgK,SACAqY,EAAA,GAEAxyE,KAAAqvE,gBAAAlf,EAA4D,KAC5Dn4D,EACA,MACA,KAAaq1E,GAAiBL,OAC9B4F,EACAJ,IAEAriB,EAAAgK,WAEAniE,EACA,MACA,UACAA,GAIAu6E,GACAvyE,KAAAovE,MAAAjf,GAEAqiB,GACAriB,EAAAgK,UAaA6T,EAAA15E,UAAAo/E,OAAA,SAAAvjB,EAAA7lD,EAAA0sD,EAAA8a,EAAAtC,GACAxvE,KAAAm3D,cAAAH,EACAh3D,KAAA6xE,QAAA1hB,EAAA7lD,EACAwnE,EAAA9xE,KAAAyuE,aAAAe,OAAAz3E,WAgBAi2E,EAAA15E,UAAAq/E,mBAAA,SACAxjB,EACA7lD,EACA0sD,EACA8a,EACA8B,EACA5B,GAGA,OADAhyE,KAAAm3D,cAAAH,EACAh3D,KAAA6xE,QAAA1hB,EAAA7lD,EAAAwnE,EACA9xE,KAAA4uE,0BAAA,EAAAgF,EAAA5B,IAMAhE,EAAA15E,UAAAu/E,gCAAA,WACA,IAIA77E,EAJA42E,EAAA5uE,KAAA4uE,yBAEAA,EAAApD,UAGA,IACAgG,EACAr1E,EAFAoD,EAAAqvE,EAAA32E,OAGA6qB,GAAA,EACA,IAAA9qB,EAAA,EAAeA,EAAAuH,IAAOvH,GAEtBmE,GADAq1E,EAAA5C,EAAA52E,IAC0C,KACxBq1E,GAAiBV,aACnC7pD,EAAA9qB,EACOmE,GAAkBkxE,GAAiBhB,iBAC1CmF,EAAA,GAAAx5E,EACQ6qB,GAAe7iB,KAAA4uE,yBAAA9rD,EAAA9qB,GACvB8qB,GAAA,IAQAkrD,EAAA15E,UAAA8hE,mBAAA,SAAAC,EAAAC,GACA,IAAAjpC,EAAArtB,KAAAqtB,MACA,GAAAgpC,EAAA,CACA,IAAA4F,EAAA5F,EAAA6F,WACA7uC,EAAAgpC,UAAwBzB,GAAWqH,GACVzK,SAEzBnkC,EAAAgpC,eAAAt+D,EAEA,GAAAu+D,EAAA,CACA,IAAA6F,EAAA7F,EAAA4F,WACA7uC,EAAAipC,YAA0B1B,GAAWuH,GACVzK,IAC3B,IAAA0K,EAAA9F,EAAA+F,aACAhvC,EAAAkuC,aAAAxjE,IAAAqkE,EACAA,EpBt0BO,QoBu0BP,IAAAE,EAAAhG,EAAAiG,cACAlvC,EAAAmuC,SAAAc,EACAA,EAAAxgE,QAAsC21D,GACtC,IAAA+K,EAAAlG,EAAAmG,oBACApvC,EAAAouC,eAAAe,GpB7zBO,EoB+zBP,IAAAE,EAAApG,EAAAqG,cACAtvC,EAAAquC,cAAA3jE,IAAA2kE,EACAA,EpB1zBO,QoB2zBP,IAAAE,EAAAtG,EAAApjC,WACA7F,EAAAsuC,eAAA5jE,IAAA6kE,EACAA,EpBnxBO,EoBoxBP,IAAAC,EAAAvG,EAAAwG,gBACAzvC,EAAAuuC,gBAAA7jE,IAAA8kE,EACAA,EpBzzBO,GoB2zBPxvC,EAAAsuC,UAAA37D,KAAAouE,eACApuE,KAAAouE,aAAA/gD,EAAAsuC,UAEA37D,KAAAwuE,mBAAA,WAGAnhD,EAAAipC,iBAAAv+D,EACAs1B,EAAAkuC,aAAAxjE,EACAs1B,EAAAmuC,SAAA,KACAnuC,EAAAouC,oBAAA1jE,EACAs1B,EAAAquC,cAAA3jE,EACAs1B,EAAAsuC,eAAA5jE,EACAs1B,EAAAuuC,gBAAA7jE,GASAi2E,EAAA15E,UAAAw/E,WAAA,SAAAzmD,EAAA2jB,GACA,IAAAqlB,EAAAhpC,EAAAgpC,UAEA6Y,EAAA,CAA2B7B,GAAiBP,eAAAzW,GAK5C,MAJA,iBAAAA,GAEA6Y,EAAAn5E,MAAA,GAEAm5E,GAMAlB,EAAA15E,UAAAy/E,YAAA,SAAA1mD,GACArtB,KAAAyuE,aAAA14E,KAAAiK,KAAAg0E,aAAA3mD,KAOA2gD,EAAA15E,UAAA0/E,aAAA,SAAA3mD,GACA,OACMggD,GAAiBN,iBACvB1/C,EAAAipC,YAAAjpC,EAAAsuC,UAAA37D,KAAA0wC,WAAArjB,EAAAkuC,QACAluC,EAAAquC,SAAAruC,EAAAuuC,WACA57D,KAAAgwE,gBAAA3iD,EAAAmuC,UAAAnuC,EAAAouC,eAAAz7D,KAAA0wC,aASAs9B,EAAA15E,UAAA2/E,gBAAA,SAAA5mD,EAAAymD,EAAA9iC,GACA,IAAAqlB,EAAAhpC,EAAAgpC,UACA,iBAAAA,GAAAhpC,EAAA6mD,kBAAA7d,SACAt+D,IAAAs+D,GACAr2D,KAAAyuE,aAAA14E,KAAA+9E,EAAAt/E,KAAAwL,KAAAqtB,EAAA2jB,IAEA3jB,EAAA6mD,iBAAA7d,IAQA2X,EAAA15E,UAAA6/E,kBAAA,SAAA9mD,EAAA0mD,GACA,IAAAzd,EAAAjpC,EAAAipC,YACAiF,EAAAluC,EAAAkuC,QACAC,EAAAnuC,EAAAmuC,SACAC,EAAApuC,EAAAouC,eACAC,EAAAruC,EAAAquC,SACAC,EAAAtuC,EAAAsuC,UACAC,EAAAvuC,EAAAuuC,YACAvuC,EAAA+mD,oBAAA9d,GACAjpC,EAAAgnD,gBAAA9Y,GACAC,GAAAnuC,EAAAinD,kBAA+CrxD,GAAMoK,EAAAinD,gBAAA9Y,IACrDnuC,EAAAknD,uBAAA9Y,GACApuC,EAAAmnD,iBAAA9Y,GACAruC,EAAAonD,kBAAA9Y,GACAtuC,EAAAqnD,mBAAA9Y,UACA7jE,IAAAu+D,GACAyd,EAAAv/E,KAAAwL,KAAAqtB,GAEAA,EAAA+mD,mBAAA9d,EACAjpC,EAAAgnD,eAAA9Y,EACAluC,EAAAinD,gBAAA9Y,EACAnuC,EAAAknD,sBAAA9Y,EACApuC,EAAAmnD,gBAAA9Y,EACAruC,EAAAonD,iBAAA9Y,EACAtuC,EAAAqnD,kBAAA9Y,IAQAoS,EAAA15E,UAAA88E,YAAA,SAAApgC,EAAAsK,GACAt7C,KAAAsuE,2BAAA,GAAAtuE,KAAAyuE,aAAAx2E,OACA+H,KAAAsuE,2BAAA,KACAtuE,KAAAuuE,2BAAA,GAAAvuE,KAAA4uE,yBAAA32E,OACA+H,KAAAuuE,2BAAA,KACA,IAAAoG,EAAA,CAAkCtH,GAAiBV,aAAArxB,GACnDt7C,KAAAyuE,aAAA14E,KAAA4+E,GACA30E,KAAA4uE,yBAAA74E,KAAA4+E,IAUA3G,EAAA15E,UAAAi8E,qBAAA,WACA,IAAAvwE,KAAAwuE,qBACAxuE,KAAAwuE,mBAAgCl9C,GAAKtxB,KAAAiuE,WACrCjuE,KAAAouE,aAAA,IACA,IAAAjsD,EAAAniB,KAAAwzB,YAAAxzB,KAAAouE,aAAA,KACQh9C,GAAMpxB,KAAAwuE,mBAAArsD,EAAAniB,KAAAwuE,oBAGd,OAAAxuE,KAAAwuE,oBAGAR,EAhhCgB,CAihCdpX,ICt2Bage,GA/MM,SAAA5G,GACrB,SAAA6G,EAAAnzC,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GACAH,EAAAx5E,KAAAwL,KAAA0hC,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GAMAnuE,KAAA80E,gBAAA,KAMA90E,KAAA+0E,mBAAA,KAMA/0E,KAAAy3D,OAAA,KAMAz3D,KAAAg1E,cAAAj9E,EAMAiI,KAAAi1E,cAAAl9E,EAMAiI,KAAAk1E,aAAAn9E,EAMAiI,KAAAm1E,cAAAp9E,EAMAiI,KAAAo1E,cAAAr9E,EAMAiI,KAAAq1E,cAAAt9E,EAMAiI,KAAAs1E,qBAAAv9E,EAMAiI,KAAAwjD,eAAAzrD,EAMAiI,KAAAu1E,YAAAx9E,EAMAiI,KAAAw1E,YAAAz9E,EA2HA,OAvHAi2E,IAAA6G,EAAA7kE,UAAAg+D,GACA6G,EAAAvgF,UAAAD,OAAA+K,OAAA4uE,KAAA15E,WACAugF,EAAAvgF,UAAA2b,YAAA4kE,EAUAA,EAAAvgF,UAAAmhF,iBAAA,SAAAvjD,EAAAC,EAAApP,EAAAqP,GACA,OAAApyB,KAAAmwE,sBAAAj+C,EAAAC,EAAApP,EAAAqP,GAAA,OAMAyiD,EAAAvgF,UAAAyhE,UAAA,SAAAC,EAAA1a,GACA,GAAAt7C,KAAAy3D,OAAA,CAGAz3D,KAAAgxE,cAAAhb,EAAA1a,GACA,IAAAppB,EAAA8jC,EAAA92B,qBACA9M,EAAA4jC,EAAAp2B,YACA81C,EAAA11E,KAAAgxB,YAAA/4B,OACAq4E,EAAAtwE,KAAAy1E,iBAAAvjD,EAAA,EAAAA,EAAAj6B,OAAAm6B,GACApyB,KAAAyuE,aAAA14E,KAAA,CACMs3E,GAAiBX,WAAAgJ,EAAApF,EAAAtwE,KAAAy3D,OAEvBz3D,KAAAg1E,SAAAh1E,KAAAi1E,SAAAj1E,KAAA80E,gBAAA90E,KAAAk1E,QAAAl1E,KAAAm1E,SACAn1E,KAAAo1E,SAAAp1E,KAAAq1E,SAAAr1E,KAAAs1E,gBAAAt1E,KAAAwjD,UACAxjD,KAAAu1E,OAAAv1E,KAAA0wC,WAAA1wC,KAAAw1E,SAEAx1E,KAAA4uE,yBAAA74E,KAAA,CACMs3E,GAAiBX,WAAAgJ,EAAApF,EAAAtwE,KAAA+0E,mBAEvB/0E,KAAAg1E,SAAAh1E,KAAAi1E,SAAAj1E,KAAA80E,gBAAA90E,KAAAk1E,QAAAl1E,KAAAm1E,SACAn1E,KAAAo1E,SAAAp1E,KAAAq1E,SAAAr1E,KAAAs1E,gBAAAt1E,KAAAwjD,UACAxjD,KAAAu1E,OAAAv1E,KAAAw1E,SAEAx1E,KAAAoxE,YAAApb,EAAA1a,KAMAu5B,EAAAvgF,UAAAqhE,eAAA,SAAAC,EAAAta,GACA,GAAAt7C,KAAAy3D,OAAA,CAGAz3D,KAAAgxE,cAAApb,EAAAta,GACA,IAAAppB,EAAA0jC,EAAA12B,qBACA9M,EAAAwjC,EAAAh2B,YACA81C,EAAA11E,KAAAgxB,YAAA/4B,OACAq4E,EAAAtwE,KAAAy1E,iBACAvjD,EAAA,EAAAA,EAAAj6B,OAAAm6B,GACApyB,KAAAyuE,aAAA14E,KAAA,CACMs3E,GAAiBX,WAAAgJ,EAAApF,EAAAtwE,KAAAy3D,OAEvBz3D,KAAAg1E,SAAAh1E,KAAAi1E,SAAAj1E,KAAA80E,gBAAA90E,KAAAk1E,QAAAl1E,KAAAm1E,SACAn1E,KAAAo1E,SAAAp1E,KAAAq1E,SAAAr1E,KAAAs1E,gBAAAt1E,KAAAwjD,UACAxjD,KAAAu1E,OAAAv1E,KAAA0wC,WAAA1wC,KAAAw1E,SAEAx1E,KAAA4uE,yBAAA74E,KAAA,CACMs3E,GAAiBX,WAAAgJ,EAAApF,EAAAtwE,KAAA+0E,mBAEvB/0E,KAAAg1E,SAAAh1E,KAAAi1E,SAAAj1E,KAAA80E,gBAAA90E,KAAAk1E,QAAAl1E,KAAAm1E,SACAn1E,KAAAo1E,SAAAp1E,KAAAq1E,SAAAr1E,KAAAs1E,gBAAAt1E,KAAAwjD,UACAxjD,KAAAu1E,OAAAv1E,KAAAw1E,SAEAx1E,KAAAoxE,YAAAxb,EAAAta,KAMAu5B,EAAAvgF,UAAA+8E,OAAA,WACArxE,KAAA6zE,kCAEA7zE,KAAAg1E,cAAAj9E,EACAiI,KAAAi1E,cAAAl9E,EACAiI,KAAA+0E,mBAAA,KACA/0E,KAAAy3D,OAAA,KACAz3D,KAAAk1E,aAAAn9E,EACAiI,KAAAu1E,YAAAx9E,EACAiI,KAAAm1E,cAAAp9E,EACAiI,KAAAo1E,cAAAr9E,EACAiI,KAAAq1E,cAAAt9E,EACAiI,KAAAs1E,qBAAAv9E,EACAiI,KAAAwjD,eAAAzrD,EACAiI,KAAAw1E,YAAAz9E,GAMA88E,EAAAvgF,UAAAiiE,cAAA,SAAAC,EAAA+Y,GACA,IAAAlvC,EAAAm2B,EAAAwG,YACAvpC,EAAA+iC,EAAAla,UACAq5B,EAAAnf,EAAAof,qBAAA,GACA/hB,EAAA2C,EAAAnH,SAAA,GACAiiB,EAAA9a,EAAA2G,YACAn9D,KAAAg1E,SAAA30C,EAAA,GACArgC,KAAAi1E,SAAA50C,EAAA,GACArgC,KAAA80E,gBAA4E,EAC5E90E,KAAA+0E,mBAAAY,EACA31E,KAAAy3D,OAAA5D,EACA7zD,KAAAk1E,QAAAzhD,EAAA,GACAzzB,KAAAm1E,SAAA3e,EAAApiB,aACAp0C,KAAAo1E,SAAA9D,EAAA,GACAtxE,KAAAq1E,SAAA/D,EAAA,GACAtxE,KAAAs1E,gBAAA9e,EAAA6G,oBACAr9D,KAAAwjD,UAAAgT,EAAAvpB,cACAjtC,KAAAu1E,OAAA/e,EAAA8G,WACAt9D,KAAAw1E,OAAA/hD,EAAA,IAGAohD,EA3MqB,CA4MnB9G,IChGa8H,GA5GW,SAAA7H,GAC1B,SAAA8H,EAAAp0C,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GACAH,EAAAx5E,KAAAwL,KAAA0hC,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GAsGA,OAnGAH,IAAA8H,EAAA9lE,UAAAg+D,GACA8H,EAAAxhF,UAAAD,OAAA+K,OAAA4uE,KAAA15E,WACAwhF,EAAAxhF,UAAA2b,YAAA6lE,EAUAA,EAAAxhF,UAAAyhF,qBAAA,SAAA7jD,EAAAC,EAAApP,EAAAqP,GACA,IAAAsjD,EAAA11E,KAAAgxB,YAAA/4B,OACAq4E,EAAAtwE,KAAAmwE,sBACAj+C,EAAAC,EAAApP,EAAAqP,GAAA,MACA4jD,EAAA,CAAmC3I,GAAiBR,gBAAA6I,EAAApF,GAGpD,OAFAtwE,KAAAyuE,aAAA14E,KAAAigF,GACAh2E,KAAA4uE,yBAAA74E,KAAAigF,GACAjzD,GAMA+yD,EAAAxhF,UAAAihE,eAAA,SAAAC,EAAAla,GACA,IAAAjuB,EAAArtB,KAAAqtB,MACAipC,EAAAjpC,EAAAipC,YACAqF,EAAAtuC,EAAAsuC,UACA,QAAA5jE,IAAAu+D,QAAAv+D,IAAA4jE,EAAA,CAGA37D,KAAAm0E,kBAAA9mD,EAAArtB,KAAA+zE,aACA/zE,KAAAgxE,cAAAxb,EAAAla,GACAt7C,KAAA4uE,yBAAA74E,KAAA,CACMs3E,GAAiBN,iBACvB1/C,EAAAipC,YAAAjpC,EAAAsuC,UAAAtuC,EAAAkuC,QAAAluC,EAAAquC,SACAruC,EAAAuuC,WAAAvuC,EAAAmuC,SAAAnuC,EAAAouC,gBACO0R,IACP,IAAAj7C,EAAAsjC,EAAAt2B,qBACA9M,EAAAojC,EAAA51B,YACA5/B,KAAA+1E,qBAAA7jD,EAAA,EAAAA,EAAAj6B,OAAAm6B,GACApyB,KAAA4uE,yBAAA74E,KAAuCm3E,IACvCltE,KAAAoxE,YAAA5b,EAAAla,KAMAw6B,EAAAxhF,UAAAmhE,oBAAA,SAAAC,EAAApa,GACA,IAAAjuB,EAAArtB,KAAAqtB,MACAipC,EAAAjpC,EAAAipC,YACAqF,EAAAtuC,EAAAsuC,UACA,QAAA5jE,IAAAu+D,QAAAv+D,IAAA4jE,EAAA,CAGA37D,KAAAm0E,kBAAA9mD,EAAArtB,KAAA+zE,aACA/zE,KAAAgxE,cAAAtb,EAAApa,GACAt7C,KAAA4uE,yBAAA74E,KAAA,CACMs3E,GAAiBN,iBACvB1/C,EAAAipC,YAAAjpC,EAAAsuC,UAAAtuC,EAAAkuC,QAAAluC,EAAAquC,SACAruC,EAAAuuC,WAAAvuC,EAAAmuC,SAAAnuC,EAAAouC,gBACO0R,IAKP,IAJA,IAAA9qC,EAAAqzB,EAAAttB,UACAlW,EAAAwjC,EAAAx2B,qBACA9M,EAAAsjC,EAAA91B,YACAzN,EAAA,EACAn6B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAqCD,EAAA4Y,IAAQ5Y,EAC7Cm6B,EAAAnyB,KAAA+1E,qBAAA7jD,EAAAC,EAAAkQ,EAAArqC,GAAAo6B,GAEApyB,KAAA4uE,yBAAA74E,KAAuCm3E,IACvCltE,KAAAoxE,YAAA1b,EAAApa,KAMAw6B,EAAAxhF,UAAA+8E,OAAA,WACA,IAAAhkD,EAAArtB,KAAAqtB,MACAt1B,MAAAs1B,EAAA4oD,YAAA5oD,EAAA4oD,YAAAj2E,KAAAgxB,YAAA/4B,QACA+H,KAAAyuE,aAAA14E,KAA6Bm3E,IAE7BltE,KAAA6zE,kCACA7zE,KAAAqtB,MAAA,MAMAyoD,EAAAxhF,UAAAy/E,YAAA,SAAA1mD,GACAt1B,MAAAs1B,EAAA4oD,YAAA5oD,EAAA4oD,YAAAj2E,KAAAgxB,YAAA/4B,SACA+H,KAAAyuE,aAAA14E,KAA6Bm3E,IAC7B7/C,EAAA4oD,WAAAj2E,KAAAgxB,YAAA/4B,QAEAo1B,EAAA4oD,WAAA,EACAjI,EAAA15E,UAAAy/E,YAAAv/E,KAAAwL,KAAAqtB,GACArtB,KAAAyuE,aAAA14E,KAA2Bo3E,KAG3B2I,EAxG0B,CAyGxB/H,ICnGEmI,GAAmB,SAAAlI,GACvB,SAAAmI,EAAAz0C,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GACAH,EAAAx5E,KAAAwL,KAAA0hC,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GAiMA,OA9LAH,IAAAmI,EAAAnmE,UAAAg+D,GACAmI,EAAA7hF,UAAAD,OAAA+K,OAAA4uE,KAAA15E,WACA6hF,EAAA7hF,UAAA2b,YAAAkmE,EAUAA,EAAA7hF,UAAA8hF,sBAAA,SAAAlkD,EAAAC,EAAAkQ,EAAAjQ,GACA,IAAA/E,EAAArtB,KAAAqtB,MACA6sC,OAAAniE,IAAAs1B,EAAAgpC,UACA8D,EAAApiE,MAAAs1B,EAAAipC,YACA+f,EAAAh0C,EAAApqC,OACA+H,KAAAyuE,aAAA14E,KAA2Bo3E,IAC3BntE,KAAA4uE,yBAAA74E,KAAuCo3E,IACvC,QAAAn1E,EAAA,EAAmBA,EAAAq+E,IAAar+E,EAAA,CAChC,IAAA+qB,EAAAsf,EAAArqC,GACA09E,EAAA11E,KAAAgxB,YAAA/4B,OACAq4E,EAAAtwE,KAAAmwE,sBAAAj+C,EAAAC,EAAApP,EAAAqP,GAAA,GAAA+nC,GACA6b,EAAA,CAAqC3I,GAAiBR,gBAAA6I,EAAApF,GACtDtwE,KAAAyuE,aAAA14E,KAAAigF,GACAh2E,KAAA4uE,yBAAA74E,KAAAigF,GACA7b,IAGAn6D,KAAAyuE,aAAA14E,KAA+Bq3E,IAC/BptE,KAAA4uE,yBAAA74E,KAA2Cq3E,KAE3Cj7C,EAAApP,EAUA,OARAm3C,IACAl6D,KAAAyuE,aAAA14E,KAA6Bk3E,IAC7BjtE,KAAA4uE,yBAAA74E,KAAyCk3E,KAEzC9S,IACAn6D,KAAAyuE,aAAA14E,KAA6Bm3E,IAC7BltE,KAAA4uE,yBAAA74E,KAAyCm3E,KAEzC/6C,GAMAgkD,EAAA7hF,UAAA4gE,WAAA,SAAAC,EAAA7Z,GACA,IAAAjuB,EAAArtB,KAAAqtB,MACAgpC,EAAAhpC,EAAAgpC,UACAC,EAAAjpC,EAAAipC,YACA,QAAAv+D,IAAAs+D,QAAAt+D,IAAAu+D,EAAA,CAGAt2D,KAAAs2E,qBAAAnhB,GACAn1D,KAAAgxE,cAAA7b,EAAA7Z,QACAvjD,IAAAs1B,EAAAgpC,WACAr2D,KAAA4uE,yBAAA74E,KAAA,CACQs3E,GAAiBP,eACjBxY,GAAS9C,WAGjBz5D,IAAAs1B,EAAAipC,aACAt2D,KAAA4uE,yBAAA74E,KAAA,CACQs3E,GAAiBN,iBACzB1/C,EAAAipC,YAAAjpC,EAAAsuC,UAAAtuC,EAAAkuC,QAAAluC,EAAAquC,SACAruC,EAAAuuC,WAAAvuC,EAAAmuC,SAAAnuC,EAAAouC,iBAGA,IAAAvpC,EAAAijC,EAAAj2B,qBACA9M,EAAA+iC,EAAAv1B,YACA81C,EAAA11E,KAAAgxB,YAAA/4B,OACA+H,KAAAmwE,sBACAj+C,EAAA,EAAAA,EAAAj6B,OAAAm6B,GAAA,MACA,IAAAmkD,EAAA,CAA6BlJ,GAAiBl4C,OAAAugD,GAC9C11E,KAAAyuE,aAAA14E,KAA2Bo3E,GAAoBoJ,GAC/Cv2E,KAAA4uE,yBAAA74E,KAAuCo3E,GAAoBoJ,GAC3Dv2E,KAAA4uE,yBAAA74E,KAAuCk3E,SACvCl1E,IAAAs1B,EAAAgpC,WACAr2D,KAAAyuE,aAAA14E,KAA6Bk3E,SAE7Bl1E,IAAAs1B,EAAAipC,cACAt2D,KAAAyuE,aAAA14E,KAA6Bm3E,IAC7BltE,KAAA4uE,yBAAA74E,KAAyCm3E,KAEzCltE,KAAAoxE,YAAAjc,EAAA7Z,KAMA66B,EAAA7hF,UAAA2hE,YAAA,SAAAC,EAAA5a,GACA,IAAAjuB,EAAArtB,KAAAqtB,MACAgpC,EAAAhpC,EAAAgpC,UACAC,EAAAjpC,EAAAipC,YACA,QAAAv+D,IAAAs+D,QAAAt+D,IAAAu+D,EAAA,CAGAt2D,KAAAs2E,qBAAApgB,GACAl2D,KAAAgxE,cAAA9a,EAAA5a,QACAvjD,IAAAs1B,EAAAgpC,WACAr2D,KAAA4uE,yBAAA74E,KAAA,CACQs3E,GAAiBP,eACjBxY,GAAS9C,WAGjBz5D,IAAAs1B,EAAAipC,aACAt2D,KAAA4uE,yBAAA74E,KAAA,CACQs3E,GAAiBN,iBACzB1/C,EAAAipC,YAAAjpC,EAAAsuC,UAAAtuC,EAAAkuC,QAAAluC,EAAAquC,SACAruC,EAAAuuC,WAAAvuC,EAAAmuC,SAAAnuC,EAAAouC,iBAGA,IAAAp5B,EAAA6zB,EAAA9tB,UACAlW,EAAAgkC,EAAA/tB,6BACA/V,EAAA8jC,EAAAt2B,YACA5/B,KAAAo2E,sBAAAlkD,EAAA,EAAAmQ,EAAAjQ,GACApyB,KAAAoxE,YAAAlb,EAAA5a,KAMA66B,EAAA7hF,UAAAuhE,iBAAA,SAAAC,EAAAxa,GACA,IAAAjuB,EAAArtB,KAAAqtB,MACAgpC,EAAAhpC,EAAAgpC,UACAC,EAAAjpC,EAAAipC,YACA,QAAAv+D,IAAAs+D,QAAAt+D,IAAAu+D,EAAA,CAGAt2D,KAAAs2E,qBAAAxgB,GACA91D,KAAAgxE,cAAAlb,EAAAxa,QACAvjD,IAAAs1B,EAAAgpC,WACAr2D,KAAA4uE,yBAAA74E,KAAA,CACQs3E,GAAiBP,eACjBxY,GAAS9C,WAGjBz5D,IAAAs1B,EAAAipC,aACAt2D,KAAA4uE,yBAAA74E,KAAA,CACQs3E,GAAiBN,iBACzB1/C,EAAAipC,YAAAjpC,EAAAsuC,UAAAtuC,EAAAkuC,QAAAluC,EAAAquC,SACAruC,EAAAuuC,WAAAvuC,EAAAmuC,SAAAnuC,EAAAouC,iBAOA,IAJA,IAAA33B,EAAAgyB,EAAAkF,WACA9oC,EAAA4jC,EAAA3tB,6BACA/V,EAAA0jC,EAAAl2B,YACAzN,EAAA,EACAn6B,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAsCD,EAAA4Y,IAAQ5Y,EAC9Cm6B,EAAAnyB,KAAAo2E,sBAAAlkD,EAAAC,EAAA2R,EAAA9rC,GAAAo6B,GAEApyB,KAAAoxE,YAAAtb,EAAAxa,KAMA66B,EAAA7hF,UAAA+8E,OAAA,WACArxE,KAAA6zE,kCACA7zE,KAAAqtB,MAAA,KAKA,IAAAqU,EAAA1hC,KAAA0hC,UACA,OAAAA,EAEA,IADA,IAAA1Q,EAAAhxB,KAAAgxB,YACAh5B,EAAA,EAAA4Y,EAAAogB,EAAA/4B,OAA8CD,EAAA4Y,IAAQ5Y,EACtDg5B,EAAAh5B,GAAyB0sC,GAAI1T,EAAAh5B,GAAA0pC,IAS7By0C,EAAA7hF,UAAAgiF,qBAAA,SAAAtlC,GACA,IAAA3jB,EAAArtB,KAAAqtB,WAEAt1B,IADAs1B,EAAAgpC,WAEAr2D,KAAAi0E,gBAAA5mD,EAAArtB,KAAA8zE,WAAA9iC,QAEAj5C,IAAAs1B,EAAAipC,aACAt2D,KAAAm0E,kBAAA9mD,EAAArtB,KAAA+zE,cAIAoC,EAnMuB,CAoMrBpI,IClMK,SAAAyI,GAAAlL,EAAAp5C,EAAAC,EAAApP,EAAAqP,GACP,IAKAp6B,EAAAy+E,EAAAC,EAAAxoD,EAAAC,EAAAwoD,EAAAC,EAAAC,EAAAC,EALAC,EAAA5kD,EACA6kD,EAAA7kD,EACA8kD,EAAA,EACAt4E,EAAA,EACA4nC,EAAApU,EAEA,IAAAn6B,EAAAm6B,EAAkBn6B,EAAA+qB,EAAS/qB,GAAAo6B,EAAA,CAC3B,IAAAhE,EAAA8D,EAAAl6B,GACAq2B,EAAA6D,EAAAl6B,EAAA,QACAD,IAAAm2B,IACA2oD,EAAAzoD,EAAAF,EACA4oD,EAAAzoD,EAAAF,EACAuoD,EAAAx2E,KAAAsE,KAAAqyE,IAAAC,UACA/+E,IAAA4+E,IACAh4E,GAAA83E,EACAv2E,KAAAg3E,MAAAP,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACApL,IACA3sE,EAAAs4E,IACAA,EAAAt4E,EACAo4E,EAAAxwC,EACAywC,EAAAh/E,GAEA2G,EAAA,EACA4nC,EAAAvuC,EAAAo6B,IAGAqkD,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEA5oD,EAAAE,EACAD,EAAAE,EAGA,OADA1vB,GAAA+3E,GACAO,EAAA,CAAA1wC,EAAAvuC,GAAA,CAAA++E,EAAAC,GCtCe,IAAAG,GAEf,OC4gBe,IClgBfC,GAAA,CACAC,OJ2Le,GI1LfC,QAAavJ,GACbwJ,MAAW3C,GACX4C,WAAgB3B,GAChBluC,QJuLe,GItLf8vC,KDboB,SAAAzJ,GACpB,SAAA0J,EAAAh2C,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GACAH,EAAAx5E,KAAAwL,KAAA0hC,EAAAusC,EAAAz6C,EAAAkd,EAAAw9B,EAAAC,GAMAnuE,KAAA80E,gBAMA90E,KAAA23E,QAAA,KAMA33E,KAAAo4D,MAAA,GAMAp4D,KAAAq4D,aAAA,EAMAr4D,KAAAs4D,aAAA,EAMAt4D,KAAAu4D,yBAAAxgE,EAMAiI,KAAAw4D,cAAA,EAMAx4D,KAAA04D,eAAA,KAKA14D,KAAA43E,WAAA,GAMA53E,KAAA24D,iBAAA,KAKA34D,KAAA63E,aAAA,GAMA73E,KAAA44D,WAAkE,GAKlE54D,KAAAuzE,WAAA,GAMAvzE,KAAA83E,SAAA,GAMA93E,KAAA+3E,SAAA,GAMA/3E,KAAAg4E,WAAA,GAMAh4E,KAAAi4E,QAAA,GAEIrmB,GAAUL,QA2Yd,OAvYAyc,IAAA0J,EAAA1nE,UAAAg+D,GACA0J,EAAApjF,UAAAD,OAAA+K,OAAA4uE,KAAA15E,WACAojF,EAAApjF,UAAA2b,YAAAynE,EAKAA,EAAApjF,UAAA6hE,SAAA,SAAAnlB,EAAAsK,GACA,IAAA6f,EAAAn7D,KAAA04D,eACA2C,EAAAr7D,KAAA24D,iBACAkD,EAAA77D,KAAA44D,WACA,QAAA54D,KAAAo4D,OAAAyD,IAAAV,GAAAE,GAAA,CAIA,IAMArjE,EAAA4Y,EANAkS,EAAA9iB,KAAAgxB,YAAA/4B,OAEAigF,EAAAlnC,EAAArP,UACAzP,EAAA,KACAnP,EAAA,EACAqP,EAAA,EAGA,GAAAypC,EAAAsc,YAAgChB,GAAa,CAC7C,IAAW7iD,GAAUt0B,KAAAuwE,uBAAAv/B,EAAA9Y,aACrB,OAEA,IAAAmK,EAGA,GAFAnQ,EAAA8e,EAAA9R,qBACA9M,EAAA4e,EAAApR,YACAs4C,GAA0BxjD,GAAYE,YACtCyN,EAAA,CAAAnQ,EAAAj6B,aACO,GAAAigF,GAA0BxjD,GAAYM,kBAC7CqN,EAAA2O,EAAA5I,eACO,GAAA8vC,GAA0BxjD,GAAYI,QAC7CuN,EAAA2O,EAAA5I,UAAAtsC,MAAA,UACO,GAAAo8E,GAA0BxjD,GAAYO,cAAA,CAC7C,IAAA6O,EAAAkN,EAAAgqB,WAEA,IADA34B,EAAA,GACArqC,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAsCD,EAAA4Y,IAAQ5Y,EAC9CqqC,EAAAtsC,KAAA+tC,EAAA9rC,GAAA,IAGAgI,KAAAgxE,cAAAhgC,EAAAsK,GAIA,IAHA,IAEA88B,EAFArc,EAAAF,EAAAE,UACAsc,EAAA,EAEAv5E,EAAA,EAAAw5E,EAAAj2C,EAAApqC,OAAuC6G,EAAAw5E,IAAQx5E,EAAA,CAC/C,GAAA/G,MAAAgkE,EAAA,CACA,IAAAwc,EAAsB/B,GAAa3a,EAAAyP,SAAAp5C,EAAAmmD,EAAAh2C,EAAAvjC,GAAAszB,GACnCimD,EAAAE,EAAA,GACAH,EAAAG,EAAA,QAEAH,EAAA/1C,EAAAvjC,GAEA,IAAA9G,EAAAqgF,EAA4BrgF,EAAAogF,EAAapgF,GAAAo6B,EACzCpyB,KAAAgxB,YAAAj7B,KAAAm8B,EAAAl6B,GAAAk6B,EAAAl6B,EAAA,IAEA+qB,EAAA/iB,KAAAgxB,YAAA/4B,OACAogF,EAAAh2C,EAAAvjC,GACAkB,KAAAw4E,WAAA11D,EAAAC,EAAA/iB,KAAA80E,iBACAhyD,EAAAC,EAEA/iB,KAAAoxE,YAAApgC,EAAAsK,OAEK,CACL,IAAAyG,EAAA/hD,KAAAqvD,SAAArvD,KAAAo4D,MAAAp4D,KAAA83E,SAAA93E,KAAA+3E,SAAA/3E,KAAAg4E,YACA71D,EAAA4/B,EAAA5/B,MAAAniB,KAAA0wC,WACA,OAAAwnC,GACA,KAAaxjD,GAAYC,MACzB,KAAaD,GAAYK,YAEzBhS,GADAmP,EAAA8e,EAAA9R,sBACAjnC,OACA,MACA,KAAay8B,GAAYE,YACzB1C,EAAkF,EAAAyoC,kBAClF,MACA,KAAajmC,GAAYS,OACzBjD,EAA8E,EAAA8a,YAC9E,MACA,KAAatY,GAAYM,kBAEzBjS,GADAmP,EAAuF,EAAA4oC,oBACvF7iE,OACA,MACA,KAAay8B,GAAYI,QAEzB,GADA5C,EAA+E,EAAAmW,wBAC/EwzB,EAAAtjB,UAAArmB,EAAA,GAAAlyB,KAAAwzB,WAAArR,EACA,OAEAiQ,EAAA,EACA,MACA,KAAasC,GAAYO,cACzB,IAAAwjD,EAAuF,EAAAvd,wBAEvF,IADAhpC,EAAA,GACAl6B,EAAA,EAAA4Y,EAAA6nE,EAAAxgF,OAAiDD,EAAA4Y,EAAQ5Y,GAAA,GACzD6jE,EAAAtjB,UAAAkgC,EAAAzgF,EAAA,GAAAgI,KAAAwzB,YAAArR,IACA+P,EAAAn8B,KAAA0iF,EAAAzgF,GAAAygF,EAAAzgF,EAAA,IAIA,OADA+qB,EAAAmP,EAAAj6B,QAEA,OAKA8qB,EAAA/iB,KAAAmwE,sBAAAj+C,EAAA,EAAAnP,EAAAqP,GAAA,OACAypC,EAAAiX,gBAAAjX,EAAAkX,oBACA/yE,KAAAo2D,mBAAAyF,EAAAiX,eAAAjX,EAAAkX,kBACAlX,EAAAiX,iBACA9yE,KAAAi0E,gBAAAj0E,KAAAqtB,MAAArtB,KAAA8zE,WAAA9iC,GACAhxC,KAAA4uE,yBAAA74E,KAAAiK,KAAA8zE,WAAA9zE,KAAAqtB,MAAA2jB,KAEA6qB,EAAAkX,mBACA/yE,KAAAm0E,kBAAAn0E,KAAAqtB,MAAArtB,KAAA+zE,aACA/zE,KAAA4uE,yBAAA74E,KAAAiK,KAAAg0E,aAAAh0E,KAAAqtB,UAGArtB,KAAAgxE,cAAAhgC,EAAAsK,GACAt7C,KAAA04E,eAAA32B,EAAAj/B,EAAAC,GACA/iB,KAAAoxE,YAAApgC,EAAAsK,MAWAo8B,EAAApjF,UAAA+6D,SAAA,SAAAiD,EAAA8gB,EAAAH,EAAAC,GACA,IAAAnxB,EACA1iD,EAAA6zE,EAAAE,EAAA9gB,EAAA2gB,EAAAjzE,KAAA0wC,WAEA,IAASkhB,GAAUd,YAAAzxD,GAAA,CACnB,IAAAg8D,EAAA6X,EAAAlzE,KAAA63E,aAAA3E,IAAAlzE,KAAA24D,iBAAA,KACAwC,EAAA8X,EAAAjzE,KAAA43E,WAAA3E,IAAAjzE,KAAA04D,eAAA,KACAmD,EAAA77D,KAAAuzE,WAAAH,IAAApzE,KAAA44D,WACAloB,EAAA1wC,KAAA0wC,WACA/gB,EAAAksC,EAAAlsC,MAAA+gB,EACAioC,EAAkBpL,GAAU1R,EAAAE,W1B9HrB,U0B+HPoX,EAAAD,GAAA7X,EAAAM,UAAAN,EAAAM,UAAA,EAEAid,EAAAtmB,EAAAviD,MAAA,MACA8oE,EAAAD,EAAA3gF,OACA6gF,EAAA,GACA32D,EA+PO,SAAAg+B,EAAAy4B,EAAAE,GAGP,IAFA,IAAAD,EAAAD,EAAA3gF,OACAkqB,EAAA,EACAnqB,EAAA,EAAiBA,EAAA6gF,IAAc7gF,EAAA,CAC/B,IAAA+gF,EAAuBxlB,GAAgBpT,EAAAy4B,EAAA5gF,IACvCmqB,EAAAjiB,KAAAC,IAAAgiB,EAAA42D,GACAD,EAAA/iF,KAAAgjF,GAEA,OAAA52D,EAvQA62D,CAAAnd,EAAA1b,KAAAy4B,EAAAE,GACAG,EAAuB5lB,GAAiBwI,EAAA1b,MACxCn+C,EAAAi3E,EAAAJ,EACAK,EAAA/2D,EAAAgxD,EACAhjB,EAAoBje,GACpBhyC,KAAAG,KAAA64E,EAAAvpD,GACAzvB,KAAAG,MAAA2B,EAAAmxE,GAAAxjD,IACAoyB,EAAAoO,EAAA9d,OACMuf,GAAUp7D,IAAA6I,EAAA0iD,GAChB,GAAApyB,GACAwgC,EAAAxgC,WAEAwgC,EAAAhQ,KAAA0b,EAAA1b,KACA+yB,IACA/iB,EAAAmG,YAAA+E,EAAA/E,YACAnG,EAAAwL,UAAAwX,EACAhjB,EAAAoL,QAAmDF,EAAA,QACnDlL,EAAAuL,SAAqDL,EAAA,SACrDlL,EAAAyL,WAAAP,EAAAO,WACYxhD,GAAgBihD,EAAAG,SAAAvjE,SAC5Bk4D,EAAA51C,YAAA8gD,EAAAG,UACArL,EAAAsL,eAAAJ,EAAAI,iBAGAwX,IACA9iB,EAAAkG,UAAA8E,EAAA9E,WAEAlG,EAAA6L,aAAA,SACA7L,EAAA4L,UAAA,SACA,IAEA/jE,EAFAmhF,EAAA,GAAAR,EACA76D,EAAA66D,EAAA52B,EAAA5/B,MAAAwN,EAAAwpD,EAAAhG,EAEA,GAAAD,EACA,IAAAl7E,EAAA,EAAmBA,EAAA6gF,IAAc7gF,EACjCm4D,EAAAmJ,WAAAsf,EAAA5gF,GAAA8lB,EAAAq7D,EAAAL,EAAA9gF,GAAA,IAAAm7E,EAAA8F,GAAAjhF,EAAAihF,GAGA,GAAAhG,EACA,IAAAj7E,EAAA,EAAmBA,EAAA6gF,IAAc7gF,EACjCm4D,EAAAoJ,SAAAqf,EAAA5gF,GAAA8lB,EAAAq7D,EAAAL,EAAA9gF,GAAA,IAAAm7E,EAAA8F,GAAAjhF,EAAAihF,GAIA,OAAWrnB,GAAUr7D,IAAA8I,IASrBq4E,EAAApjF,UAAAokF,eAAA,SAAA32B,EAAAj/B,EAAAC,GACA,IAAA84C,EAAA77D,KAAA44D,WACAyC,EAAAr7D,KAAA24D,iBACAjoB,EAAA1wC,KAAA0wC,WACAioC,EAAgBpL,GAAU1R,EAAAE,W1B5LnB,U0B6LPiX,EAAmBzF,GAAU1R,EAAAG,cAC7BmX,EAAA9X,KAAAM,UAAAN,EAAAM,UAAA,EAEAr7B,EAAAq4C,EAAA52B,EAAA5/B,MAAAuuB,EAAA,MAAAioC,GAAAxF,EACA5yC,EAAAyyC,EAAAjxB,EAAA//C,OAAA0uC,EAAA,MAAAsiC,GAAAG,EACAnzE,KAAAyuE,aAAA14E,KAAA,CAA4Bs3E,GAAiBX,WAAA5pD,EAAAC,EAC7Cg/B,GAAAzhB,EAAAtgC,KAAAq4D,cAAA3nB,GAAAnQ,EAAAvgC,KAAAs4D,cAAA5nB,EACA1wC,KAAA80E,gBAAA/yB,EAAA//C,OAAA,MAAAhC,KAAAu4D,oBAAAv4D,KAAAw4D,cACA,EAAAzW,EAAA5/B,MACA05C,EAAA5qB,SAA2B0gB,GACnBA,GAAckK,EAAA5qB,QAAAl1C,IAAA,SAAAjC,GACtB,OAAAA,EAAA42C,MAEAmrB,EAAAiX,iBAAAjX,EAAAkX,mBAEA/yE,KAAA4uE,yBAAA74E,KAAA,CAAwCs3E,GAAiBX,WAAA5pD,EAAAC,EACzDg/B,GAAAzhB,EAAAtgC,KAAAq4D,cAAA3nB,GAAAnQ,EAAAvgC,KAAAs4D,cAAA5nB,EACA1wC,KAAA80E,gBAAA/yB,EAAA//C,OAAA,MAAAhC,KAAAu4D,oBAAAv4D,KAAAw4D,cACA,EAAA9nB,EAAAqR,EAAA5/B,MAAA05C,EAAA5qB,UACA4qB,EAAAiX,iBAAAjX,EAAAkX,oBAUA2E,EAAApjF,UAAAkkF,WAAA,SAAA11D,EAAAC,EAAAwsD,GACA,IAAAlU,EAAAr7D,KAAA24D,iBACAkD,EAAA77D,KAAA44D,WACAuC,EAAAn7D,KAAA04D,eAEAwa,EAAAlzE,KAAAg4E,WACA3c,IACA6X,KAAAlzE,KAAA63E,eACA73E,KAAA63E,aAAA3E,GAAqF,CACrF5c,YAAA+E,EAAA/E,YACAiF,QAAAF,EAAAE,QACAE,eAAAJ,EAAAI,eACAE,UAAAN,EAAAM,UACAD,SAAAL,EAAAK,SACAE,WAAAP,EAAAO,WACAJ,SAAAH,EAAAG,YAIA,IAAA4X,EAAApzE,KAAA83E,SACA93E,KAAA83E,YAAA93E,KAAAuzE,aACAvzE,KAAAuzE,WAAAvzE,KAAA83E,UAAmF,CACnF33B,KAAA0b,EAAA1b,KACA4b,UAAAF,EAAAE,W1BjPO,S0BkPPpsC,MAAAksC,EAAAlsC,QAGA,IAAAsjD,EAAAjzE,KAAA+3E,SACA5c,IACA8X,KAAAjzE,KAAA43E,aACA53E,KAAA43E,WAAA3E,GAA+E,CAC/E5c,UAAA8E,EAAA9E,aAKA,IAAA3lB,EAAA1wC,KAAA0wC,WACAsiC,EAAmBzF,GAAU1R,EAAAG,cAE7BtI,EAAA1zD,KAAAs4D,aAAA5nB,EACA4hB,EAAAtyD,KAAAo4D,MACAjY,EAAA0b,EAAA1b,KACAse,EAAA5C,EAAAlsC,MACAwjD,EAAA9X,IAAAM,UAAA8C,EAAA,IACAqa,EAAA94E,KAAAi4E,QAAA93B,GACA24B,IACA94E,KAAAi4E,QAAA93B,GAAA24B,EAAA,IAEA94E,KAAAyuE,aAAA14E,KAAA,CAA4Bs3E,GAAiBZ,WAC7C3pD,EAAAC,EAAAiwD,EAAAzD,EACA1T,EAAAtjB,SAAA06B,EAAApX,EAAAyP,SACA,SAAAhZ,GACA,IAAAnwC,EAAA22D,EAAAxmB,GAIA,OAHAnwC,IACAA,EAAA22D,EAAAxmB,GAAiCiB,GAAgBpT,EAAAmS,IAEjDnwC,EAAAs8C,EAAA/tB,GAEAgjB,EAAAwf,EAAAC,EAAAziC,EAAA4hB,EAAA8gB,EAAA,IAEApzE,KAAA4uE,yBAAA74E,KAAA,CAAwCs3E,GAAiBZ,WACzD3pD,EAAAC,EAAAiwD,EAAAzD,EACA1T,EAAAtjB,SAAA06B,EAAApX,EAAAyP,SACA,SAAAhZ,GACA,IAAAnwC,EAAA22D,EAAAxmB,GAIA,OAHAnwC,IACAA,EAAA22D,EAAAxmB,GAAiCiB,GAAgBpT,EAAAmS,IAEjDnwC,EAAAs8C,GAEA/K,EAAAwf,EAAAC,EAAA7gB,EAAA8gB,EAAA,EAAA1iC,KAOAgnC,EAAApjF,UAAAoiE,aAAA,SAAAC,EAAA4Y,GACA,IAAA1T,EAAAV,EAAAE,EACA,GAAA1E,EAEK,CACL32D,KAAA80E,gBAA8E,EAE9E,IAAAvX,EAAA5G,EAAAyD,UACAmD,IAGApC,EAAAn7D,KAAA04D,kBAEAyC,EAAAn7D,KAAA04D,eAAwF,IAExFyC,EAAA9E,UAA8BzB,GAC9B2I,EAAArB,YAAsC1K,KAPtC2J,EAAAn7D,KAAA04D,eAAA,KAUA,IAAA+E,EAAA9G,EAAA0D,YACA,GAAAoD,EAEO,EACPpC,EAAAr7D,KAAA24D,oBAEA0C,EAAAr7D,KAAA24D,iBAA8F,IAE9F,IAAA6C,EAAAiC,EAAAlB,cACAd,EAAAgC,EAAAhB,oBACAd,EAAA8B,EAAAvqC,WACA0oC,EAAA6B,EAAAX,gBACAzB,EAAAE,QAAAkC,EAAApB,c1BhXO,Q0BiXPhB,EAAAG,aAAA1/D,QAA6D21D,GAC7D4J,EAAAI,oBACA1jE,IAAA0jE,E1BrWO,E0BqWyDA,EAChEJ,EAAAK,SAAA+B,EAAAd,e1B/VO,Q0BgWPtB,EAAAM,eACA5jE,IAAA4jE,E1BvTO,E0BuT+CA,EACtDN,EAAAO,gBACA7jE,IAAA6jE,E1B5VO,G0B4ViDA,EACxDP,EAAA/E,YAAkC1B,GAClC6I,EAAAvB,YAAwCxK,SApBxC2J,EAAAr7D,KAAA24D,iBAAA,KAuBAkD,EAAA77D,KAAA44D,WACA,IAAAzY,EAAAwW,EAAAuH,W1B5YO,kB0B6YDlM,GAAS7R,GACf,IAAAse,EAAA9H,EAAA2G,WACAzB,EAAAtjB,SAAAoe,EAAAyiB,cACAvd,EAAA1b,OACA0b,EAAAyP,SAAA3U,EAAA0iB,cACAxd,EAAAsc,UAAAxhB,EAAA2iB,eACAzd,EAAAE,UAAApF,EAAAiI,eACA/C,EAAAG,aAAArF,EAAAmI,mB1BrVO,S0BsVPjD,EAAAiX,eAAAnc,EAAA4iB,oBACA1d,EAAAkX,iBAAApc,EAAA6iB,sBACA3d,EAAA5qB,QAAA0lB,EAAA8iB,cAAoD9nB,GACpDkK,EAAAlsC,WAAA53B,IAAA0mE,EAAA,EAAAA,EAEA,IAAAN,EAAAxH,EAAAyH,aACAC,EAAA1H,EAAA2H,aACAC,EAAA5H,EAAA0G,oBACAmB,EAAA7H,EAAA1pB,cACAjtC,KAAAo4D,MAAAzB,EAAA2D,WAAA,GACAt6D,KAAAq4D,kBAAAtgE,IAAAomE,EAAA,EAAAA,EACAn+D,KAAAs4D,kBAAAvgE,IAAAsmE,EAAA,EAAAA,EACAr+D,KAAAu4D,yBAAAxgE,IAAAwmE,KACAv+D,KAAAw4D,mBAAAzgE,IAAAymE,EAAA,EAAAA,EAEAx+D,KAAAg4E,WAAA3c,GACA,iBAAAA,EAAA/E,YAAA+E,EAAA/E,YAAgF9mD,EAAM6rD,EAAA/E,cACtF+E,EAAAE,QAAAF,EAAAI,eAAA,IAAAJ,EAAAM,UACAN,EAAAK,SAAAL,EAAAO,WAAA,IAAAP,EAAAG,SAAAv+D,OAAA,IACA,GACA+C,KAAA83E,SAAAjc,EAAA1b,KAAA0b,EAAAlsC,OAAAksC,EAAAE,WAAA,KACA/7D,KAAA+3E,SAAA5c,EACA,iBAAAA,EAAA9E,UAAA8E,EAAA9E,UAAA,IAA+E7mD,EAAM2rD,EAAA9E,WACrF,QA1EAr2D,KAAAo4D,MAAA,IA8EAsf,EAlfoB,CAmflB3J,KCleE2L,GAAiB,SAAAC,GACrB,SAAAC,EACAl4C,EACAusC,EACAz6C,EACAkd,EACAw9B,EACAC,EACA0L,GAEAF,EAAAnlF,KAAAwL,MAMAA,KAAA85E,eAAA3L,EAMAnuE,KAAA80E,gBAAA,KAMA90E,KAAA+5E,WAAAr4C,EAMA1hC,KAAAg6E,WAAA/L,EAMAjuE,KAAAi6E,UAAA/L,EAMAluE,KAAAy3C,YAAA/G,EAMA1wC,KAAAk6E,YAAA1mD,EAMAxzB,KAAAm6E,cAAAN,EAMA75E,KAAAo6E,iBAAA,GAMAp6E,KAAAq6E,qBAAgCnoC,GAAqB,KAMrDlyC,KAAAs6E,uBpFvEA,coFwWA,OA9RAX,IAAAC,EAAA5pE,UAAA2pE,GACAC,EAAAtlF,UAAAD,OAAA+K,OAAAu6E,KAAArlF,WACAslF,EAAAtlF,UAAA2b,YAAA2pE,EAKAA,EAAAtlF,UAAAs2E,aAAA,SAAAC,GACA,IAAA0P,EAAA,KAUA,OATAv6E,KAAA85E,iBACAjP,GACA0P,EAAAv6E,KAAA80E,iBAC0B,MAE1ByF,EAAAv6E,KAAA80E,gBhG2EA,CAAA3zE,SAAA,WgG1EApL,KAAA,IAGAwkF,GAOAX,EAAAtlF,UAAAouE,KAAA,SAAAvS,EAAA7lD,GACA,IAAAkwE,EAAAx6E,KAAAy6E,cAAAnwE,GACA6lD,EAAA6J,YACA7J,EAAAuJ,OAAA8gB,EAAA,GAAAA,EAAA,IACArqB,EAAAwJ,OAAA6gB,EAAA,GAAAA,EAAA,IACArqB,EAAAwJ,OAAA6gB,EAAA,GAAAA,EAAA,IACArqB,EAAAwJ,OAAA6gB,EAAA,GAAAA,EAAA,IACArqB,EAAAuS,QAOAkX,EAAAtlF,UAAAomF,WAAA,SAAAC,GACA,QAAA5mC,KAAA/zC,KAAAo6E,iBAEA,IADA,IAAAQ,EAAA56E,KAAAo6E,iBAAArmC,GACA/7C,EAAA,EAAA4Y,EAAA+pE,EAAA1iF,OAA0CD,EAAA4Y,IAAQ5Y,EAClD,GAAA2iF,EAAA3iF,KAAA4iF,EACA,SAIA,UAMAhB,EAAAtlF,UAAA+8E,OAAA,WACA,QAAAlN,KAAAnkE,KAAAo6E,iBAAA,CACA,IAAAO,EAAA36E,KAAAo6E,iBAAAjW,GACA,QAAA0W,KAAAF,EACAA,EAAAE,GAAAxJ,WAgBAuI,EAAAtlF,UAAA6mD,2BAAA,SACA5hC,EACAia,EACA1E,EACAmsB,EACA62B,EACAh6E,EACAgjF,GAIA,IAkBAC,EAlBAC,EAAA,GADA//B,EAAA/6C,KAAAykC,MAAAsW,IACA,EACA3wC,EAAoB4zB,GAAgBl+B,KAAAs6E,uBACpCr/B,EAAA,GAAAA,EAAA,GACA,EAAAznB,GAAA,EAAAA,GACA1E,GACAvV,EAAA,IAAAA,EAAA,IACA42C,EAAAnwD,KAAAq6E,qBAEAlqB,EAAA9d,OAAAlwB,QAAA64D,GAAA7qB,EAAA9d,OAAArwC,SAAAg5E,GACA7qB,EAAA9d,OAAAlwB,MAAA64D,EACA7qB,EAAA9d,OAAArwC,OAAAg5E,GAEA7qB,EAAA8P,UAAA,IAAA+a,UAOAjjF,IAAAiI,KAAAm6E,gBAEMhpD,GADN4pD,EhGhBA,CAAA55E,SAAA,UgGiBsBoY,GAChB6X,GAAM2pD,EAAAvnD,GAAAxzB,KAAAm6E,cAAAl/B,GAAA8/B,IAGZ,IACAE,EAOAtQ,EARAuQ,EA4NO,SAAAjlD,GACP,QAAAl+B,IAAAojF,GAAAllD,GACA,OAAAklD,GAAAllD,GAKA,IAFA,IAAAmlD,EAAA,EAAAnlD,EAAA,EACA/zB,EAAA,IAAAiU,MAAAilE,GACApjF,EAAA,EAAiBA,EAAAojF,EAAepjF,IAChCkK,EAAAlK,GAAA,IAAAme,MAAAilE,GAGA,IAAAt9D,EAAAmY,EACAjY,EAAA,EACA7f,EAAA,EAEA,KAAA2f,GAAAE,GACAq9D,GAAAn5E,EAAA+zB,EAAAnY,EAAAmY,EAAAjY,GACAq9D,GAAAn5E,EAAA+zB,EAAAjY,EAAAiY,EAAAnY,GACAu9D,GAAAn5E,EAAA+zB,EAAAjY,EAAAiY,EAAAnY,GACAu9D,GAAAn5E,EAAA+zB,EAAAnY,EAAAmY,EAAAjY,GACAq9D,GAAAn5E,EAAA+zB,EAAAnY,EAAAmY,EAAAjY,GACAq9D,GAAAn5E,EAAA+zB,EAAAjY,EAAAiY,EAAAnY,GACAu9D,GAAAn5E,EAAA+zB,EAAAjY,EAAAiY,EAAAnY,GACAu9D,GAAAn5E,EAAA+zB,EAAAnY,EAAAmY,EAAAjY,GAIA,IADA7f,GAAA,MADA6f,GAEAF,GAAA,MAEA3f,GAAA,KADA2f,GAAA,IAMA,OADAq9D,GAAAllD,GAAA/zB,EACAA,EA9PAo5E,CAAArgC,GAcA,SAAA82B,EAAAz2B,GAEA,IADA,IAAA+pB,EAAAlV,EAAAmV,aAAA,IAAA0V,KAAA/hF,KACAjB,EAAA,EAAqBA,EAAAgjF,EAAiBhjF,IACtC,QAAAwD,EAAA,EAAuBA,EAAAw/E,EAAiBx/E,IACxC,GAAA0/E,EAAAljF,GAAAwD,IACA6pE,EAAA,GAAA7pE,EAAAw/E,EAAAhjF,GAAA,MACA,IAAAoD,OAAA,EAKA,QAJA6/E,GAAAtQ,GAA0DI,GAAUvb,OAAAmb,GAAwBI,GAAUE,OACtG,IAAAgQ,EAAAnlF,QAAAwlD,MACAlgD,EAAAtD,EAAAwjD,IAEAlgD,QAGA+0D,EAAA8P,UAAA,IAAA+a,MA1BAh7E,KAAA85E,iBACAmB,EAAAj7E,KAAA85E,eAAAt3E,MAAAzG,IAAA,SAAAg1D,GACA,OAAAA,EAAAt6D,SAkCA,IAGAuB,EAAAwD,EAAAm/E,EAAAjH,EAAAt4E,EAHAwuE,EAAAv1E,OAAAqJ,KAAAsC,KAAAo6E,kBAAAr+E,IAAA+pB,QAIA,IAHA8jD,EAAA/jE,KAAY6c,IAGZ1qB,EAAA4xE,EAAA3xE,OAAA,EAA2BD,GAAA,IAAQA,EAAA,CACnC,IAAAujF,EAAA3R,EAAA5xE,GAAAsO,WAEA,IADAq0E,EAAA36E,KAAAo6E,iBAAAmB,GACA//E,EAAe8xE,GAAKr1E,OAAA,EAAYuD,GAAA,IAAQA,EAGxC,QAAAzD,KADA27E,EAAAiH,EADAhQ,EAAqB2C,GAAK9xE,KAG1B,IAAAs/E,GACAnQ,GAA6BI,GAAUvb,OAAAmb,GAAwBI,GAAUE,MAUzE,GAFA7vE,EAAAs4E,EAAAC,mBAAAxjB,EAAA7lD,EAAAwkB,EACAgjD,EAAAC,EAAAgJ,GAEA,OAAA3/E,MAXyE,CACzE,IAAAm/E,EAAAO,EAAAS,GACAhB,EAGAA,EAAAxkF,KAAA29E,EAAAppE,EAAAxO,MAAA,IAFAg/E,EAAAS,GAAA,CAAA7H,EAAAppE,EAAAxO,MAAA,OAqBA89E,EAAAtlF,UAAAmmF,cAAA,SAAAnwE,GACA,IAAA2jE,EAAAjuE,KAAAg6E,WACA94E,EAAA+sE,EAAA,GACA7sE,EAAA6sE,EAAA,GACA5sE,EAAA4sE,EAAA,GACA3sE,EAAA2sE,EAAA,GACAuM,EAAA,CAAAt5E,EAAAE,EAAAF,EAAAI,EAAAD,EAAAC,EAAAD,EAAAD,GAGA,OAFIq0B,GACJ+kD,EAAA,MAAAlwE,EAAAkwE,GACAA,GAMAZ,EAAAtlF,UAAAo2E,UAAA,SAAA32B,EAAA42B,GACA,IAAA4Q,OAAAxjF,IAAAg8C,IAAAztC,WAAA,IACAq0E,EAAA36E,KAAAo6E,iBAAAmB,QACAxjF,IAAA4iF,IACAA,EAAA,GACA36E,KAAAo6E,iBAAAmB,GAAAZ,GAEA,IAAAjH,EAAAiH,EAAAhQ,QACA5yE,IAAA27E,IAEAA,EAAA,IAAA8H,EADApE,GAAAzM,IACA3qE,KAAA+5E,WAAA/5E,KAAAg6E,WACAh6E,KAAAk6E,YAAAl6E,KAAAy3C,YAAAz3C,KAAAi6E,UAAAj6E,KAAA85E,gBACAa,EAAAhQ,GAAA+I,GAEA,OAAAA,GAMAkG,EAAAtlF,UAAAmnF,WAAA,WACA,OAAAz7E,KAAAo6E,kBAMAR,EAAAtlF,UAAAy3B,QAAA,WACA,OAAW/a,EAAOhR,KAAAo6E,mBAalBR,EAAAtlF,UAAAo/E,OAAA,SACAvjB,EACA7lD,EACA0sD,EACA8a,EACAtC,EACAkM,EACAC,GAIA,IAAA/R,EAAAv1E,OAAAqJ,KAAAsC,KAAAo6E,kBAAAr+E,IAAA+pB,QACA8jD,EAAA/jE,KAAY6c,IAIZytC,EAAAkQ,OACArgE,KAAA0iE,KAAAvS,EAAA7lD,GAEA,IACAtS,EAAA4Y,EAAApV,EAAAgoC,EAAAm3C,EAAAjH,EADAkI,EAAAF,GAA0DpO,GAE1D,IAAAt1E,EAAA,EAAA4Y,EAAAg5D,EAAA3xE,OAA+BD,EAAA4Y,IAAQ5Y,EAAA,CACvC,IAAAujF,EAAA3R,EAAA5xE,GAAAsO,WAEA,IADAq0E,EAAA36E,KAAAo6E,iBAAAmB,GACA//E,EAAA,EAAAgoC,EAAAo4C,EAAA3jF,OAA0CuD,EAAAgoC,IAAQhoC,EAAA,CAClD,IAAAmvE,EAAAiR,EAAApgF,GAEA,GADAk4E,EAAAiH,EAAAhQ,QACA5yE,IAAA27E,EACA,IAAAiI,GACAhR,GAA6BI,GAAUvb,OAAAmb,GAAwBI,GAAUE,KAQzEyI,SAAAvjB,EAAA7lD,EAAA0sD,EAAA8a,EAAAtC,OARyE,CACzE,IAAA+K,EAAAoB,EAAAJ,GACAhB,EAGAA,EAAAxkF,KAAA29E,EAAAppE,EAAAxO,MAAA,IAFA6/E,EAAAJ,GAAA,CAAA7H,EAAAppE,EAAAxO,MAAA,MAWAq0D,EAAAwQ,WAGAiZ,EA7WqB,CA8WnB9O,IAQFqQ,GAAA,CACAU,EAAA,QAWA,SAAAR,GAAAhjE,EAAAyF,EAAAE,GACA,IAAAhmB,EACAi+B,EAAA/1B,KAAA4N,MAAAuK,EAAApgB,OAAA,GACA,GAAA6lB,GAAAmY,EACA,IAAAj+B,EAAAi+B,EAAoBj+B,EAAA8lB,EAAO9lB,IAC3BqgB,EAAArgB,GAAAgmB,IAAA,OAEG,GAAAF,EAAAmY,EACH,IAAAj+B,EAAA8lB,EAAA,EAAmB9lB,EAAAi+B,EAAYj+B,IAC/BqgB,EAAArgB,GAAAgmB,IAAA,EAwEe,IAAA89D,GAAA,GCvefC,GAAA,GASAC,GAAA,CACA52C,MAoOA,SAAA62C,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAAkb,EAAAttD,EAAAmmD,WACA,GAAAmH,EAAA,CACA,GAAAA,EAAA0lB,iBAAsCvtB,GAAUvkC,OAChD,OAEA,IAAA+xD,EAAAF,EAAAvR,UAAAxhE,EAAAsrC,YAA+Du2B,GAAUvb,OACzE2sB,EAAA5lB,cAAAC,EAAAylB,EAAArR,cAAA,IACAuR,EAAApmB,UAAA/kB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,eAAApU,IACA4lB,EAAAjmB,SAAAnlB,EAAAsK,KAjPAk8B,WAgKA,SAAAyE,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAAgb,EAAAptD,EAAAmxD,YACA,GAAA/D,EAAA,CACA,IAAA+lB,EAAAJ,EAAAvR,UAAAxhE,EAAAsrC,YAAoEu2B,GAAUn2C,aAC9EynD,EAAAjmB,mBAAA,KAAAE,GACA+lB,EAAA9mB,eAAAvkB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,cAAA,IACAwR,EAAAjmB,SAAAnlB,EAAAsK,KA1KA3T,QAoRA,SAAAs0C,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAA+a,EAAAntD,EAAAkxD,UACA9D,EAAAptD,EAAAmxD,YACA,GAAAhE,GAAAC,EAAA,CACA,IAAAgmB,EAAAL,EAAAvR,UAAAxhE,EAAAsrC,YAAiEu2B,GAAUj2C,SAC3EwnD,EAAAlmB,mBAAAC,EAAAC,GACAgmB,EAAArmB,YAAAjlB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,cAAA,IACAwR,EAAAjmB,SAAAnlB,EAAAsK,KA/RAihC,WA0PA,SAAAN,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAAkb,EAAAttD,EAAAmmD,WACA,GAAAmH,EAAA,CACA,GAAAA,EAAA0lB,iBAAsCvtB,GAAUvkC,OAChD,OAEA,IAAA+xD,EAAAF,EAAAvR,UAAAxhE,EAAAsrC,YAA+Du2B,GAAUvb,OACzE2sB,EAAA5lB,cAAAC,EAAAylB,EAAArR,cAAA,IACAuR,EAAAxmB,eAAA3kB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,eAAApU,IACA4lB,EAAAjmB,SAAAnlB,EAAAsK,KAvQAkhC,gBAmLA,SAAAP,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAAgb,EAAAptD,EAAAmxD,YACA,GAAA/D,EAAA,CACA,IAAA+lB,EAAAJ,EAAAvR,UAAAxhE,EAAAsrC,YAAoEu2B,GAAUn2C,aAC9EynD,EAAAjmB,mBAAA,KAAAE,GACA+lB,EAAA5mB,oBAAAzkB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,cAAA,IACAwR,EAAAjmB,SAAAnlB,EAAAsK,KA7LAmhC,aAwMA,SAAAR,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAA+a,EAAAntD,EAAAkxD,UACA9D,EAAAptD,EAAAmxD,YACA,GAAA/D,GAAAD,EAAA,CACA,IAAAimB,EAAAL,EAAAvR,UAAAxhE,EAAAsrC,YAAiEu2B,GAAUj2C,SAC3EwnD,EAAAlmB,mBAAAC,EAAAC,GACAgmB,EAAAzmB,iBAAA7kB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,cAAA,IACAwR,EAAAjmB,SAAAnlB,EAAAsK,KAnNAohC,mBA0IA,SAAAT,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IACAtjD,EAAA4Y,EADA4pD,EAAAxpB,EAAAypB,qBAEA,IAAAziE,EAAA,EAAA4Y,EAAA4pD,EAAAviE,OAAqCD,EAAA4Y,IAAQ5Y,EAAA,CAC7C,IAAA2kF,EACAX,GAAAxhB,EAAAxiE,GAAA2pC,WACAg7C,EAAAV,EAAAzhB,EAAAxiE,GAAAkR,EAAAoyC,KA/IA+7B,OAyCA,SAAA4E,EAAAjrC,EAAA9nC,EAAAoyC,GACA,IAAA+a,EAAAntD,EAAAkxD,UACA9D,EAAAptD,EAAAmxD,YACA,GAAAhE,GAAAC,EAAA,CACA,IAAAsmB,EAAAX,EAAAvR,UAAAxhE,EAAAsrC,YAAgEu2B,GAAU51C,QAC1EynD,EAAAxmB,mBAAAC,EAAAC,GACAsmB,EAAA1nB,WAAAlkB,EAAAsK,GAEA,IAAAqb,EAAAztD,EAAAoxD,UACA,GAAA3D,EAAA,CACA,IAAAylB,EAAAH,EAAAvR,UAAAxhE,EAAAsrC,YAA8Du2B,GAAUE,MACxEmR,EAAA1lB,aAAAC,EAAAslB,EAAArR,cAAA,IACAwR,EAAAjmB,SAAAnlB,EAAAsK,MA5CO,SAAAuhC,GAAAC,EAAAC,GACP,OAAA7tC,SAAkB1/B,EAAMstE,GAAA,IAAA5tC,SAA2B1/B,EAAMutE,GAAA,IASlD,SAAAC,GAAAxpD,EAAAkd,GACP,IAAAhP,EAAAu7C,GAAAzpD,EAAAkd,GACA,OAAAhP,IASO,SAAAu7C,GAAAzpD,EAAAkd,GACP,OAAAqrC,GAAAvoD,EAAAkd,EAqCO,SAAAwsC,GAAAjB,EAAA3gC,EAAApyC,EAAAo2B,EAAAnuB,EAAA2vD,GACP,IAAArjB,GAAA,EACA+Y,EAAAttD,EAAAmmD,WACA,GAAAmH,EAAA,CACA,IAAAqN,EAAArN,EAAA0lB,gBACArY,GAAsBlV,GAAUvkC,QAAAy5C,GAAyBlV,GAAU95C,MACnE2hD,EAAA2mB,oBAAAhsE,EAAA2vD,IAEA+C,GAAwBlV,GAAUzkC,MAClCssC,EAAAxzD,OAEA6gE,EAAArN,EAAA0lB,gBACA1lB,EAAA4mB,kBAAAjsE,EAAA2vD,GACArjB,GAAA,GAKA,OAUA,SAAAw+B,EAAA3gC,EAAApyC,EAAAo2B,GACA,IAAA0R,EAAA9nC,EAAAqxD,qBAAArxD,CAAAoyC,GACA,IAAAtK,EACA,OAEA,IAAAtR,EAAAsR,EAAA3R,sBAAAC,GAEA,GADAp2B,EAAAmzC,eAgBA,SAAAghC,EAAApB,EAAAjrC,EAAA9nC,EAAAoyC,GACA,GAAAtK,EAAArP,WAA4BjN,GAAYQ,oBAAA,CAExC,IADA,IAAAslC,EAAgF,EAAA8iB,gBAChFtlF,EAAA,EAAA4Y,EAAA4pD,EAAAviE,OAA2CD,EAAA4Y,IAAQ5Y,EACnDqlF,EAAApB,EAAAzhB,EAAAxiE,GAAAkR,EAAAoyC,GAEA,OAEA,IAAAo4B,EAAAuI,EAAAvR,UAAAxhE,EAAAsrC,YAAwDu2B,GAAUC,SAClE0I,EAAA5e,WAA2E,EAAAxZ,EAAApyC,EAAAmzC,eAvB3EghC,CAAApB,EAAAv8C,EAAAx2B,EAAAoyC,OACG,CACH,IAAAqhC,EAAAX,GAAAt8C,EAAAiC,WACAg7C,EAAAV,EAAAv8C,EAAAx2B,EAAAoyC,IAvBAiiC,CAAAtB,EAAA3gC,EAAApyC,EAAAo2B,GAEAme,EC9FA,IAAI+/B,GAAyB,SAAAhb,GAC7B,SAAAib,EAAAC,GAEAlb,EAAAhuE,KAAAwL,KAAA09E,GAMA19E,KAAA85E,eAAA4D,EAAAC,eAAuDC,KAAK,OAAA7lF,GAAA,KAM5DiI,KAAA69E,QAAA,EAMA79E,KAAA89E,mBAAA,EAMA99E,KAAA+9E,oBAAAz8C,IAMAthC,KAAAqnE,gBlGkJA,CAAAlmE,SAAA,UkG5IAnB,KAAAg+E,qBAAA,KAMAh+E,KAAAi+E,aAAA,KAMAj+E,KAAAomE,oBAAA,EAKApmE,KAAAmwD,QAAmBje,KAEfhgC,EAAO0/C,GAAYx9C,EAASE,MAAAtU,KAAAk+E,oBAAAl+E,MA6UhC,OAzUAwiE,IAAAib,EAAAztE,UAAAwyD,GACAib,EAAAnpF,UAAAD,OAAA+K,OAAAojE,KAAAluE,WACAmpF,EAAAnpF,UAAA2b,YAAAwtE,EAKAA,EAAAnpF,UAAAue,gBAAA,WACIH,EAASk/C,GAAYx9C,EAASE,MAAAtU,KAAAk+E,oBAAAl+E,MAClCwiE,EAAAluE,UAAAue,gBAAAre,KAAAwL,OAQAy9E,EAAAnpF,UAAA+xE,QAAA,SAAAlW,EAAAp3C,EAAAw9B,GACA,IAAAtlB,EAAAlY,EAAAkY,OACAyf,EAAA33B,EAAA23B,WACAmO,EAAAtI,EAAApC,QACAp7B,EAAA8lC,mBAAA,GACAL,EAAAzlC,EAAAylC,UACAlwC,EAAAkwC,EAAAlwC,WACAwgB,EAAA0vB,EAAA1vB,SACA+yC,EAAAvzD,EAAA4pB,YACAimD,EAA2En+E,KAAAijE,WAAAzlB,YAE3ElzC,EAAAtK,KAAA+/D,aAAAhnD,EAAA,GAGAqlE,EAAA7nC,EAAAtlB,OACA+zC,OAAAjtE,IAAAqmF,EACApZ,GACAhlE,KAAA0iE,KAAAvS,EAAAp3C,EAAiF,GAEjF,IAAAkjE,EAAAj8E,KAAAi+E,aACA,GAAAhC,MAAAlwD,UAAA,CACA/rB,KAAA85E,gBACA95E,KAAA85E,eAAAv5E,QAEA,IAGA89E,EAHAnqC,EAAqEl0C,KAAAijE,WACrEqb,EAAA,EACAC,EAAA,EAEAC,EAAA,IAAAjoC,EAAA1C,QACA4qC,EAAAvqC,EAAAhgC,YAAiD8V,IACjD,GAAAw0D,GAAAC,EAAA,CACA,IAAAC,EAAAvuB,EAAA9d,OAAAlwB,MACAw8D,EAAAxuB,EAAA9d,OAAArwC,OACA,GAAA8sB,EAAA,CACA,IAAA8vD,EAAA1+E,KAAAykC,MAAAzkC,KAAAsE,KAAAk6E,IAAAC,MACAL,GAAAM,EAAAF,GAAA,EACAH,GAAAK,EAAAD,GAAA,EACAD,EAAAC,EAAAC,EAGA5+E,KAAAmwD,QAAA9d,OAAAlwB,MAAAu8D,EACA1+E,KAAAmwD,QAAA9d,OAAArwC,OAAA28E,EACAN,EAAAr+E,KAAAmwD,aAEAkuB,EAAAluB,EAGA,IAAA8D,EAAAoqB,EAAAnqB,YACAsqB,IAIAH,EAAAnqB,YAAA3d,EAAA1C,SAGAwqC,GAAAluB,GACAkuB,EAAAz9C,UAAA09C,EAAAC,GAGA,IAAAjhC,EAAAvkC,EAAAukC,UACAkyB,IAAAlyB,EAAoCruB,KAAQquB,EAAyBruB,KACrE9M,EAAApJ,EAAA0a,KAAA,GAAAid,EACA1uC,EAAA+W,EAAA0a,KAAA,GAAAid,EAIA,GAHM8iB,GAAc6qB,GAAAvvD,EACpB3M,EAAA,EAAAngB,EAAA,GACAi6E,EAAAvI,OAAA2K,EAAA/zE,EAAAwkB,EAAA+vB,EAAA2wB,GACA2O,EAAApc,YAAAzzD,EAAA0pB,aACWtG,GAAcmwC,EAAA5wC,GAAA,CAKzB,IAJA,IAGAwiC,EAHA/sB,EAAAzV,EAAA,GACA6wC,EAAyB5uC,GAAQ2uC,GACjCgd,EAAA,EAEAn4C,EAAAm7B,EAAA,IAEApO,EAAAqO,IADA+c,EAEAv0E,EAAAtK,KAAA+/D,aAAAhnD,EAAA06C,GACAwoB,EAAAvI,OAAA2K,EAAA/zE,EAAAwkB,EAAA+vB,EAAA2wB,GACA9oC,GAAAo7B,EAIA,IAFA+c,EAAA,EACAn4C,EAAAzV,EAAA,GACAyV,EAAAm7B,EAAA,IAEApO,EAAAqO,IADA+c,EAEAv0E,EAAAtK,KAAA+/D,aAAAhnD,EAAA06C,GACAwoB,EAAAvI,OAAA2K,EAAA/zE,EAAAwkB,EAAA+vB,EAAA2wB,GACA9oC,GAAAo7B,EASA,GANMtO,GAAc6qB,EAAAvvD,EACpB3M,EAAA,EAAAngB,EAAA,GAEAy8E,GACAz+E,KAAA09C,oBAAA2gC,EAAAtlE,EAAAzO,GAEA+zE,GAAAluB,EAAA,CACA,GAAAquB,EAAA,CACA,IAAAM,EAAA3uB,EAAA+D,YACA/D,EAAA+D,YAAA3d,EAAA1C,QACAsc,EAAAyD,UAAAyqB,EAAAhsC,QAAAisC,GAAAC,GACApuB,EAAA+D,YAAA4qB,OAEA3uB,EAAAyD,UAAAyqB,EAAAhsC,QAAAisC,GAAAC,GAEAF,EAAAz9C,WAAA09C,GAAAC,GAGAC,IACAH,EAAAnqB,YAAAD,GAIA+Q,GACA7U,EAAAwQ,WAOA8c,EAAAnpF,UAAAosE,aAAA,SAAA3nD,EAAAw9B,EAAA4Z,GACA,IAAA7lD,EAAAtK,KAAA+/D,aAAAhnD,EAAA,GACA/Y,KAAAmjE,WAAAhT,EAAAp3C,EAAAzO,GACAtK,KAAAqmE,QAAAlW,EAAAp3C,EAAAw9B,GACAv2C,KAAAkjE,YAAA/S,EAAAp3C,EAAAw9B,EAAAjsC,IAMAmzE,EAAAnpF,UAAA6mD,2BAAA,SAAA5hC,EAAAR,EAAAkiC,EAAAnjD,EAAAgpE,GACA,GAAA9gE,KAAAi+E,aAEK,CACL,IAAAzqD,EAAAza,EAAAylC,UAAAhrB,WACA1E,EAAA/V,EAAAylC,UAAA1vB,SACAolB,EAAqEl0C,KAAAijE,WAErE5nB,EAAA,GAaA,OAZAr7C,KAAAi+E,aAAA9iC,2BAAA5hC,EAAAia,EAAA1E,EAAAmsB,EAAA,GAKA,SAAAK,GACA,IAAAj8C,EAAoBmQ,EAAM8rC,GAC1B,KAAAj8C,KAAAg8C,GAEA,OADAA,EAAAh8C,IAAA,EACAvH,EAAAtD,KAAAssE,EAAAxlB,EAAApH,IAES,QAQTupC,EAAAnpF,UAAA4pF,oBAAA,SAAApqE,GACA,IAAAogC,EAAAl0C,KAAAijE,WACA/uB,EAAAK,cAAAv0C,KAAAi+E,cACA/pC,EAAAl+B,WASAynE,EAAAnpF,UAAAyqF,wBAAA,SAAAjrE,GACA9T,KAAA2jE,2BAMA8Z,EAAAnpF,UAAAmsE,aAAA,SAAA1nD,EAAAw9B,GACA,IAAAmnC,EAAyE19E,KAAAijE,WACzEkb,EAA2ET,EAAAlgC,YAE3EwhC,EAAAjmE,EAAAukC,UAAyCruB,IACzCgwD,EAAAlmE,EAAAukC,UAA2CruB,IAC3CiwD,EAAAxB,EAAAyB,0BACAC,EAAA1B,EAAA2B,4BAEA,IAAAr/E,KAAA69E,SAAAqB,GAAAF,IACAI,GAAAH,EACA,SAGA,IAAAK,EAAAvmE,EAAAkY,OACAutB,EAAAzlC,EAAAylC,UACAlwC,EAAAkwC,EAAAlwC,WACAklB,EAAAgrB,EAAAhrB,WACAkd,EAAA33B,EAAA23B,WACA6uC,EAAA7B,EAAAznE,cACAupE,EAAA9B,EAAA+B,kBACAC,EAAAhC,EAAAiC,sBAEA5nF,IAAA2nF,IACAA,EAA+B7C,IAG/B,IAAA5rD,EAAiBG,GAAMkuD,EACvBE,EAAAhsD,GACAquC,EAAArjB,EAAAlwC,WAAA4pB,YAEA,GAAAimD,EAAApc,YAAAvjB,EAAAlwC,WAAA0pB,aACStG,GAAcmwC,EAAA9oD,EAAAkY,QAAA,CAMvB,IAAA6wC,EAAuB5uC,GAAQ2uC,GAC/BqI,EAAAhqE,KAAAC,IAA4B+yB,GAAQjC,GAAA,EAAA6wC,GACpC7wC,EAAA,GAAA4wC,EAAA,GAAAqI,EACAj5C,EAAA,GAAA4wC,EAAA,GAAAqI,EAGA,IAAAlqE,KAAA69E,QACA79E,KAAA+9E,qBAAAvqD,GACAxzB,KAAA89E,mBAAAyB,GACAv/E,KAAAg+E,sBAAA0B,GACQhuD,GAAc1xB,KAAAqnE,gBAAAp2C,GAEtB,OADAjxB,KAAAomE,oBAAA,GACA,EAGApmE,KAAAi+E,aAAA,KAEAj+E,KAAA69E,QAAA,EAEA,IAAA5B,EAAA,IAA0BH,GACpBmB,GAAkBzpD,EAAAkd,GAAAzf,EAAAuC,EACxBkd,EAAAytC,EAAAyB,cAAA5/E,KAAA85E,eAAA4D,EAAA+B,mBACAtB,EAAA0B,aAAA5uD,EAAAuC,EAAAllB,GAKA,IAAAsvC,EAAA,SAAAtC,GACA,IAAAhzC,EACAw3E,EAAAxkC,EAAAykC,oBAAArC,EAAAqC,mBAIA,GAHAD,IACAx3E,EAAAw3E,EAAAxkC,EAAA9nB,IAEAlrB,EAAA,CACA,IAAA03E,EAAAhgF,KAAAk9E,cACA5hC,EAAA9nB,EAAAkd,EAAApoC,EAAA2zE,GACAj8E,KAAA69E,OAAA79E,KAAA69E,QAAAmC,IAEK1gF,KAAAU,MACL,GAAA0/E,EAAA,CAEA,IAAArkC,EAAA,GACA8iC,EAAA8B,uBAAAhvD,EAIA,SAAAqqB,GACAD,EAAAtlD,KAAAulD,KAEAD,EAAAx1C,KAAA65E,GACA,QAAA1nF,EAAA,EAAA4Y,EAAAyqC,EAAApjD,OAA2CD,EAAA4Y,IAAQ5Y,EACnD4lD,EAAAvC,EAAArjD,SAGAmmF,EAAA8B,uBAAAhvD,EAAA2sB,GAWA,OATAq+B,EAAA5K,SAEArxE,KAAA+9E,oBAAAvqD,EACAxzB,KAAA89E,kBAAAyB,EACAv/E,KAAAg+E,qBAAA0B,EACA1/E,KAAAqnE,gBAAAp2C,EACAjxB,KAAAi+E,aAAAhC,EAEAj8E,KAAAomE,oBAAA,GACA,GAWAqX,EAAAnpF,UAAA4oF,cAAA,SAAA5hC,EAAA9nB,EAAAkd,EAAApoC,EAAA2zE,GACA,IAAA3zE,EACA,SAEA,IAAAm1C,GAAA,EACA,GAAAtnC,MAAAC,QAAA9N,GACA,QAAAtQ,EAAA,EAAA4Y,EAAAtI,EAAArQ,OAAyCD,EAAA4Y,IAAQ5Y,EACjDylD,EAAkBy/B,GAClBjB,EAAA3gC,EAAAhzC,EAAAtQ,GACUglF,GAAyBxpD,EAAAkd,GACnC1wC,KAAA++E,wBAAA/+E,OAAAy9C,OAGAA,EAAgBy/B,GAChBjB,EAAA3gC,EAAAhzC,EACQ00E,GAAyBxpD,EAAAkd,GACjC1wC,KAAA++E,wBAAA/+E,MAEA,OAAAy9C,GAGAggC,EAvY6B,CAwY3Bnb,IAQFkb,GAAyB,iBAAAtpC,GACzB,OAAAA,EAAAvS,YAA6B4tB,GAASI,QAUtC6tB,GAAyB,gBAAA9W,EAAAxyB,GACzB,WAAaspC,GAA6E,IAI3E,IAAA0C,GAAA,GCraAC,GAAA,CACf3wB,MAAA,QACA4wB,OAAA,SACAzwB,OAAA,UCaA0wB,GAAA,CACAxsB,MAAA,CAAYkX,GAAUj2C,QAAUi2C,GAAU51C,OACtC41C,GAAUn2C,YAAcm2C,GAAUvb,MAAQub,GAAUE,MACxDqV,OAAA,CAAavV,GAAUj2C,QAAUi2C,GAAUn2C,cAO3C2rD,GAAA,CACA1sB,MAAA,CAAYkX,GAAUC,SACtBsV,OAAA,CAAavV,GAAUvb,MAAQub,GAAUE,KAAOF,GAAUC,SAC1DwV,OAAYlT,IASRmT,GAA6B,SAAAxZ,GACjC,SAAAyZ,EAAAxsC,GAEA+yB,EAAAzyE,KAAAwL,KAAAk0C,GAAA,GAMAl0C,KAAA85E,eAAA5lC,EAAAypC,eAAiDC,KAAK,OAAA7lF,GAAA,KAMtDiI,KAAA69E,QAAA,EAMA79E,KAAA2gF,uBAMA3gF,KAAA4gF,cxF5CA,cwF8CA,IAAAC,EAAA3sC,EAAAuyB,gBAGAzmE,KAAA2nE,WAAAkZ,IAAqCV,GAAoBxwB,OAAA,IAEzDkxB,IAAuBV,GAAoBxwB,SAC3C3vD,KAAAmwD,QAAqBje,MAIjBhgC,EAAO0/C,GAAYx9C,EAASE,MAAAtU,KAAAk+E,oBAAAl+E,MAuYhC,OAnYAinE,IAAAyZ,EAAA1wE,UAAAi3D,GACAyZ,EAAApsF,UAAAD,OAAA+K,OAAA6nE,KAAA3yE,WACAosF,EAAApsF,UAAA2b,YAAAywE,EAKAA,EAAApsF,UAAAue,gBAAA,WACIH,EAASk/C,GAAYx9C,EAASE,MAAAtU,KAAAk+E,oBAAAl+E,MAClCinE,EAAA3yE,UAAAue,gBAAAre,KAAAwL,OAMA0gF,EAAApsF,UAAAmwE,QAAA,SAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GACA,IAAA8e,EAAA65C,EAAA3yE,UAAAmwE,QAAAjwE,KAAAwL,KAAA0N,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GAOA,OANA8e,EAAAE,aAA4BrD,GAASG,SACrCpqB,KAAA8gF,mBAAoF,EAAApwC,EAAApiC,GACpFtO,KAAAmwD,SACAnwD,KAAA+gF,iBAAoF,EAAArwC,EAAApiC,IAGpF8e,GAMAszD,EAAApsF,UAAA81E,aAAA,SAAAh9C,GACA,IAAA85C,EAAqElnE,KAAAijE,WACrE,OAAiE,EAAA5T,SAAA6X,IAMjEwZ,EAAApsF,UAAAmsE,aAAA,SAAA1nD,EAAAw9B,GACA,IACAyqC,EADmEhhF,KAAAijE,WACnEhtD,cAKA,OAJAjW,KAAA2gF,wBAAAK,IACAhhF,KAAAunE,cAAAtvE,OAAA,GAEA+H,KAAA2gF,uBAAAK,EACA/Z,EAAA3yE,UAAAmsE,aAAAjsE,KAAAwL,KAAA+Y,EAAAw9B,IASAmqC,EAAApsF,UAAAwsF,mBAAA,SAAA1zD,EAAAsjB,EAAApiC,GACA,IAAA2yE,EAAAjhF,KAEAk0C,EAAmEl0C,KAAAijE,WACnEie,EAAAhtC,EAAAj+B,cACAkrE,EAAyEjtC,EAAAyrC,kBAAA,KAEzEyB,EAAAh0D,EAAAi0D,eAAAntC,GACA,GAAAktC,EAAApB,OAAAoB,EAAA9Z,kBAAA4Z,GACAE,EAAAE,qBAAAH,EADA,CAyEA,IApEA,IAAAl6E,EAAyEitC,EAAAsJ,YACzE+jC,EAAAt6E,EAAAu6E,cAEAhuD,EADAvsB,EAAAmhE,yBAAA95D,GACAq+B,cAAAvf,EAAAq2C,UAAA,IACAgG,EAAAr8C,EAAA6D,OAEAwwD,EAAA,SAAAtqF,EAAAuqF,GACA,IAAAC,EAAAv0D,EAAAq3C,QAAAr3C,EAAAw0D,SAAAzqF,IACA,GAAAwqF,EAAAr0D,YAAmCrD,GAASG,OAA5C,CAIA,IAAAy3D,EAAAF,EAAAle,UACAqe,EAAAP,EAAAxX,mBAAA8X,GACAE,EAAyB3tD,GAAeq1C,EAAAqY,GACxCE,EAA2B1vD,GAAMwvD,EAAAC,GAAA,KACzB3wD,GAAM2wD,EAAA7tC,EAAAurC,kBAAAjsD,EAAAytD,EAAAxZ,WACdwa,EAAAN,EAAAzxC,gBACAgyC,GAAA,EACW7lD,GAAoB/tB,EAAA2zE,KAC/BC,GAAA,EACAP,EAAAQ,cAAA7zE,IAEA8yE,EAAApB,OAAA,EACA,IAAA/D,EAAA,IAA4BH,GAAiB,EAAAiG,EAAAvuD,EAC7Ckd,EAAAzpC,EAAA24E,cAAAqB,EAAAnH,eAAA5lC,EAAAurC,mBACAngD,EAA6B09C,GAAyBxpD,EAAAkd,GAMtDkN,EAAA,SAAAtC,GACA,IAAAhzC,EACAw3E,EAAAxkC,EAAAykC,oBAAA7rC,EAAA6rC,mBAIA,GAHAD,IACAx3E,EAAAw3E,EAAAxkC,EAAA9nB,IAEAlrB,EAAA,CACA,IAAA03E,EAAAhgF,KAAAk9E,cAAA5hC,EAAAhc,EAAAh3B,EAAA2zE,GACAj8E,KAAA69E,OAAA79E,KAAA69E,QAAAmC,EACAoB,EAAApB,MAAAoB,EAAApB,WAIA3kC,EAAAsmC,EAAAS,cACAjB,OAAAC,EAAAE,qBACAjmC,EAAAx1C,KAAAs7E,GAEA,QAAAnpF,EAAA,EAAA4Y,EAAAyqC,EAAApjD,OAA2CD,EAAA4Y,IAAQ5Y,EAAA,CACnD,IAAAsjD,EAAAD,EAAArjD,GACAkqF,IACAD,EAAA9pD,YAA2CpB,GAAKH,cAEhDqrD,EAAAppD,eAAAipD,GAEAG,EAAArpD,UAAA+oD,EAAAzpD,cAEAojB,EAAAyO,cAAAz/C,UAAA23E,EAAA3zE,IAEA0zE,IAA+B1tD,GAAU0tD,EAAA1mC,EAAAyO,cAAA7xB,cACzC0lB,EAAAppD,KAAAysF,EAAA3lC,GAGA2gC,EAAA5K,SACAsQ,EAAAU,eAAAnuC,EAAA9mB,EAAAq2C,UAAAn9D,WAAA21E,KAGA9kF,EAAA,EAAAuqF,EAAAt0D,EAAAw0D,SAAA3pF,OAA8Cd,EAAAuqF,IAAQvqF,EAAAsqF,EAAAtqF,GACtDiqF,EAAA9Z,iBAAA4Z,EACAE,EAAAE,oBAAAH,IAMAT,EAAApsF,UAAA6mD,2BAAA,SAAA5hC,EAAAR,EAAAkiC,EAAAnjD,EAAAgpE,GACA,IAAAttC,EAAAza,EAAAylC,UAAAhrB,WACA1E,EAAA/V,EAAAylC,UAAA1vB,SACAmsB,EAAAljD,MAAAkjD,EAAA,EAAAA,EACA,IAMA+mC,EAAAM,EACAtqF,EAAA4Y,EAPAsjC,EAAAl0C,KAAAijE,WAEA5nB,EAAA,GAEAksB,EAAqFvnE,KAAA,cAIrF,IAAAhI,EAAA,EAAA4Y,EAAA22D,EAAAtvE,OAA0CD,EAAA4Y,IAAQ5Y,EAAA,CAClD,IAAAo1B,EAAAm6C,EAAAvvE,GAEA,GAAWw5B,GADXwwD,EAAuB5wD,GAAMhE,EAAA6D,OAAAgqB,EAAAznB,EAAAwuD,GACAzoE,GAG7B,QAAApiB,EAAA,EAAAuqF,EAAAt0D,EAAAw0D,SAAA3pF,OAAgDd,EAAAuqF,IAAQvqF,EAAA,CACxD,IAAAwqF,EAAAv0D,EAAAq3C,QAAAr3C,EAAAw0D,SAAAzqF,IACA,GAAAwqF,EAAAr0D,YAAqCrD,GAASG,OAA9C,CAGA,IAAA6xD,EAAuD0F,EAAAY,eAAAruC,EACvD9mB,EAAAq2C,UAAAn9D,YACAg8E,KAAArG,EAAA9gC,2BAAA5hC,EAAAia,EAAA1E,EAAAmsB,EAAA,GAKA,SAAAK,GACA,IAAAj8C,EAAsBmQ,EAAM8rC,GAC5B,KAAAj8C,KAAAg8C,GAEA,OADAA,EAAAh8C,IAAA,EACAvH,EAAAtD,KAAAssE,EAAAxlB,EAAApH,IAEW,QAGX,OAAAouC,GASA5B,EAAApsF,UAAAkuF,oBAAA,SAAAp1D,EAAArU,GACA,IAEA4f,EAFA34B,KAAAijE,WACyEzlB,YACzEgkC,cACA/d,EAAAr2C,EAAAq2C,UACA7mB,EAAAjkB,EAAAgU,cAAA82B,EAAA,IACAjlB,EAAAzlC,EAAAylC,UACA9N,EAAA33B,EAAA23B,WACA+xC,EAAAjkC,EAAAhrB,WAAAkd,EACA+4B,EAAA9wC,EAAAoxC,mBAAAtG,EAAAzjE,KAAAynE,WACAp5D,EAAAmwC,EAAAnwC,OACAijE,EAAiBv+C,GAAU02C,GAC3Bh2C,EAAA1a,EAAA0a,KACAggC,EAAAvzD,KAAAykC,MAAA+L,EAAAjd,EAAA,MACAigC,EAAAxzD,KAAAykC,MAAA+L,EAAAjd,EAAA,MACA,OAAWyK,GAAgBl+B,KAAA4gF,cAC3BntB,EAAAC,EACA9W,EAAA6lC,EAAA7lC,EAAA6lC,EACAjkC,EAAA1vB,UACAwiD,EAAA,GAAAjjE,EAAA,IAAAuuC,GACAvuC,EAAA,GAAAijE,EAAA,IAAA10B,IAMA8jC,EAAApsF,UAAA4pF,oBAAA,SAAApqE,GACA,IAAAogC,EAAAl0C,KAAAijE,WACA/uB,EAAAK,mBAAAx8C,IAAAiI,KAAA2gF,wBACAzsC,EAAAl+B,WASA0qE,EAAApsF,UAAAyqF,wBAAA,SAAAjrE,GACA9T,KAAA2jE,2BAMA+c,EAAApsF,UAAA4uE,YAAA,SAAA/S,EAAAp3C,EAAAw9B,GACA,IAAArC,EAAmEl0C,KAAAijE,WACnE4d,EAAA3sC,EAAAuyB,gBACA,GAAAoa,GAAsBV,GAAoB3wB,MAAA,CAC1C,IAMAiE,EAAAC,EANAonB,EAAA5mC,EAAAypC,eAAA,GAAsD,KACtD12E,EAA2EitC,EAAAsJ,YAC3Eo+B,EAAA2E,GAAAM,GACAnwC,EAAA33B,EAAA23B,WACA5hB,EAAA/V,EAAAylC,UAAA1vB,SACA2E,EAAA1a,EAAA0a,KAEA3E,GAGQ0kC,GAAcrD,GAAArhC,EAFtB2kC,EAAAvzD,KAAAykC,MAAA+L,EAAAjd,EAAA,MACAigC,EAAAxzD,KAAAykC,MAAA+L,EAAAjd,EAAA,OAGAqnD,GACA96E,KAAA85E,eAAAv5E,QAQA,IANA,IAAA+8C,EAAAvkC,EAAAukC,UACAkyB,IAAAlyB,EAAoCruB,KAAQquB,EAAyBruB,KACrEq0C,EAAAtjE,KAAAunE,cACA5uC,EAAA1xB,EAAAmhE,yBAAArvD,EAAAylC,UAAAlwC,YACAo0E,EAAA,GACA9Y,EAAA,GACA5xE,EAAAsrE,EAAArrE,OAAA,EAAoCD,GAAA,IAAQA,EAAA,CAC5C,IAAAo1B,EAAyEk2C,EAAAtrE,GACzE,GAAAo1B,EAAAE,YAA+BrD,GAASK,MAMxC,IAHA,IAAAm5C,EAAAr2C,EAAAq2C,UACAkf,EAAAhqD,EAAAoxC,mBAAAtG,EAAAzjE,KAAAynE,WAAA,GAAAr6C,EAAA6D,OAAA,GACA3mB,OAAAvS,EACAZ,EAAA,EAAAuqF,EAAAt0D,EAAAw0D,SAAA3pF,OAAkDd,EAAAuqF,IAAQvqF,EAAA,CAC1D,IAAAwqF,EAAAv0D,EAAAq3C,QAAAr3C,EAAAw0D,SAAAzqF,IACA,GAAAwqF,EAAAr0D,YAAuCrD,GAASG,OAAhD,CAGA,IAAA6xD,EAAyD0F,EAAAY,eAAAruC,EAAAuvB,EAAAn9D,YACzD,GAAA21E,KAAAvB,WAAAkB,GAAA,CAKAtxE,IACAA,EAAAtK,KAAA+/D,aAAAhnD,EAAA4pE,IAEA,IAAAte,EAAAsd,EAAAle,UAAA,GACAmf,EAAA3G,EAAAxB,cAAAnwE,GACA6lD,EAAAkQ,OACAlQ,EAAA+D,YAAA3d,EAAA1C,QAGA,QAAAr4C,EAAA,EAAAgoC,EAAAk/C,EAAAzqF,OAA4CuD,EAAAgoC,IAAQhoC,EAAA,CACpD,IAAAknE,EAAAggB,EAAAlnF,GACA6oE,EAAAuF,EAAApuE,KACA20D,EAAA6J,YAEA7J,EAAAuJ,OAAAkpB,EAAA,GAAAA,EAAA,IACAzyB,EAAAwJ,OAAAipB,EAAA,GAAAA,EAAA,IACAzyB,EAAAwJ,OAAAipB,EAAA,GAAAA,EAAA,IACAzyB,EAAAwJ,OAAAipB,EAAA,GAAAA,EAAA,IAEAzyB,EAAAuJ,OAAAgJ,EAAA,GAAAA,EAAA,IACAvS,EAAAwJ,OAAA+I,EAAA,GAAAA,EAAA,IACAvS,EAAAwJ,OAAA+I,EAAA,GAAAA,EAAA,IACAvS,EAAAwJ,OAAA+I,EAAA,GAAAA,EAAA,IACAvS,EAAAuS,QAGAuZ,EAAAvI,OAAAvjB,EAAA7lD,EAAAwkB,EAAA,GAA6D0gD,EAAAoM,EAAAd,GAC7D3qB,EAAAwQ,UACA+hB,EAAA3sF,KAAA6sF,GACAhZ,EAAA7zE,KAAAsuE,MAGAyW,GJ6EO,SAAAA,EAAA3qB,EAAArhC,EAAA0gD,GAGP,IAFA,IAAA5F,EAAAv1E,OAAAqJ,KAAAo9E,GAAA/+E,IAAA+pB,QAAAjgB,KAA0D6c,IAC1Dm8B,EAAA,GACAnxC,EAAA,EAAAm1E,EAAAjZ,EAAA3xE,OAAiCyV,EAAAm1E,IAAQn1E,EAEzC,IADA,IAAAo1E,EAAAhI,EAAAlR,EAAAl8D,GAAApH,YACAtO,EAAA,EAAA4Y,EAAAkyE,EAAA7qF,OAA2CD,EAAA4Y,GAAQ,CACnD,IAAA8iE,EAAAoP,EAAA9qF,KACAsS,EAAAw4E,EAAA9qF,KACA07E,SAAAvjB,EAAA7lD,EAAAwkB,EAAA+vB,EAAA2wB,IIpFQuT,CAAejI,EAAA3qB,EAAArhC,EAAA0gD,GAEvB1gD,GACQ0kC,GAAcrD,EAAArhC,EACM,EAAiC,GAG7Dm4C,EAAA3yE,UAAA4uE,YAAA1uE,KAAAwL,KAAAmwD,EAAAp3C,EAAAw9B,IAUAmqC,EAAApsF,UAAA4oF,cAAA,SAAA5hC,EAAAhc,EAAAh3B,EAAA2zE,GACA,IAAA3zE,EACA,SAEA,IAAAm1C,GAAA,EACA,GAAAtnC,MAAAC,QAAA9N,GACA,QAAAtQ,EAAA,EAAA4Y,EAAAtI,EAAArQ,OAAyCD,EAAA4Y,IAAQ5Y,EACjDylD,EAAkBy/B,GAClBjB,EAAA3gC,EAAAhzC,EAAAtQ,GAAAsnC,EACAt/B,KAAA++E,wBAAA/+E,OAAAy9C,OAGAA,EAAgBy/B,GAChBjB,EAAA3gC,EAAAhzC,EAAAg3B,EACAt/B,KAAA++E,wBAAA/+E,MAEA,OAAAy9C,GASAijC,EAAApsF,UAAAysF,iBAAA,SAAA3zD,EAAAsjB,EAAApiC,GACA,IAAA4lC,EAAmEl0C,KAAAijE,WACnEme,EAAAh0D,EAAAi0D,eAAAntC,GACAgtC,EAAAhtC,EAAAj+B,cACA0kE,EAAA0F,GAAAnsC,EAAAuyB,iBACA,GAAAkU,GAAAyG,EAAA4B,uBAAA9B,EAAA,CACAE,EAAA4B,qBAAA9B,EACA,IAAAzd,EAAAr2C,EAAA61D,iBACAv1E,EAAA+1D,EAAA,GACAx8D,EAA2EitC,EAAAsJ,YAC3E7kB,EAAA1xB,EAAAmhE,yBAAA95D,GACAklB,EAAAmF,EAAAgU,cAAAj/B,GACAyiD,EAAA/iC,EAAA9S,WAAA45B,GACAzgB,EAAAxsB,EAAAqiE,iBAAA57D,EAAAgjC,EAAApiC,GACA6hD,EAAA9d,OAAAlwB,MAAAsR,EAAA,GACA08B,EAAA9d,OAAArwC,OAAAyxB,EAAA,GAEA,IADA,IAAAg2C,EAAA9wC,EAAAoxC,mBAAAtG,EAAAzjE,KAAAynE,WACAzvE,EAAA,EAAA4Y,EAAAwc,EAAAw0D,SAAA3pF,OAAgDD,EAAA4Y,IAAQ5Y,EAAA,CACxD,IAAA2pF,EAAAv0D,EAAAq3C,QAAAr3C,EAAAw0D,SAAA5pF,IACA,GAAA2pF,EAAAr0D,YAAqCrD,GAASG,OAA9C,CAGA,IAAA84D,EAAAxyC,EAAAld,EACAlpB,EAAwB0yB,GAAch9B,KAAA4gF,eAC9B5iD,GAAc1zB,EAAA44E,MACdjlD,GAAkB3zB,GAAAm/D,EAAA,IAAAA,EAAA,IAC6BkY,EAAAY,eAAAruC,EACvD9mB,EAAAq2C,UAAAn9D,YACAotE,OAAAvjB,EAAA7lD,EAAA,MAAoD,EAAAqwE,OAKpD+F,EA9aiC,CA+a/BlW,IAQFiW,GAA6B,iBAAAvsC,GAC7B,OAAAA,EAAAvS,YAA6B4tB,GAASG,aAUtC+wB,GAA6B,gBAAA/Z,EAAAxyB,GAC7B,WAAausC,GAAqF,IAInF,IAAA0C,GAAA,GC9ZAC,GAhCR,SAAA1sC,GACP,SAAA2sC,EAAA/nF,IACAA,EAAcgV,EAAM,GAAGhV,IACvBw7C,WACAx7C,EAAAw7C,SC3BO,SAAAj/B,GAEP,IAAAvc,EAAAuc,GAAA,GAEAi/B,EAAA,IAAqBp/B,EAkBrB,YAhBA3f,IAAAuD,EAAAiT,MAAAjT,EAAAiT,OAEAuoC,EAAA/gD,KAAA,IAAsBouD,GAAI7oD,EAAAgoF,oBAG1BvrF,IAAAuD,EAAA8kC,QAAA9kC,EAAA8kC,SAEA0W,EAAA/gD,KAAA,IAAsB6tD,GAAMtoD,EAAAioF,sBAG5BxrF,IAAAuD,EAAAkoF,aACAloF,EAAAkoF,cAEA1sC,EAAA/gD,KAAA,IAAsBorD,GAAW7lD,EAAAmoF,qBAGjC3sC,EDKyB4sC,IAEzBpoF,EAAAy7C,eACAz7C,EAAAy7C,aEiBO,SAAiBl/B,GAExB,IAAAvc,EAAAuc,GAAA,GAEAk/B,EAAA,IAAyBr/B,EAEzB8wC,EAAA,IAAoB9C,IAAO,cAkE3B,YAhEA3tD,IAAAuD,EAAAqoF,oBACAroF,EAAAqoF,qBAEA5sC,EAAAhhD,KAAA,IAA0BmzD,UAG1BnxD,IAAAuD,EAAAsoF,iBACAtoF,EAAAsoF,kBAEA7sC,EAAAhhD,KAAA,IAA0B0wD,GAAe,CACzC13B,MAAAzzB,EAAAuoF,UACAh2C,SAAAvyC,EAAAwoF,sBAIA/rF,IAAAuD,EAAAyoF,SAAAzoF,EAAAyoF,UAEAhtC,EAAAhhD,KAAA,IAA0BsyD,GAAO,CACjCQ,UAAAvtD,EAAA0oF,YAAuCp9B,QAAK7uD,EAC5CywD,mBAIAzwD,IAAAuD,EAAA2oF,aAAA3oF,EAAA2oF,cAGAltC,EAAAhhD,KAAA,IAA0B23D,UAG1B31D,IAAAuD,EAAA4oF,WAAA5oF,EAAA4oF,YAEAntC,EAAAhhD,KAAA,IAA0Bs4D,GAAS,CACnC3hB,oBAAApxC,EAAAoxC,oBACAmB,SAAAvyC,EAAAwoF,sBAIA/rF,IAAAuD,EAAA6oF,UAAA7oF,EAAA6oF,YAEAptC,EAAAhhD,KAAA,IAA0Bw1D,IAC1BxU,EAAAhhD,KAAA,IAA0B+1D,GAAY,CACtC/8B,MAAAzzB,EAAAuoF,UACAh2C,SAAAvyC,EAAAwoF,uBAIA/rF,IAAAuD,EAAA8oF,gBACA9oF,EAAA8oF,iBAEArtC,EAAAhhD,KAAA,IAA0Bk2D,GAAc,CACxCpD,UAAAvtD,EAAA0oF,YAAuCp9B,QAAK7uD,EAC5C20C,oBAAApxC,EAAAoxC,oBACAmB,SAAAvyC,EAAAwoF,sBAIA/rF,IAAAuD,EAAA+oF,eACA/oF,EAAA+oF,gBAEAttC,EAAAhhD,KAAA,IAA0Bu0D,GAAQ,CAClCzc,SAAAvyC,EAAAwoF,gBAIA/sC,EFzF6ButC,IAG7B5tC,EAAAliD,KAAAwL,KAAA1E,GAkBA,OAfAo7C,IAAA2sC,EAAArzE,UAAA0mC,GACA2sC,EAAA/uF,UAAAD,OAAA+K,OAAAs3C,KAAApiD,WACA+uF,EAAA/uF,UAAA2b,YAAAozE,EAEAA,EAAA/uF,UAAA+kD,eAAA,WACA,IAAA0b,EAAA,IAAuB6K,GAAiB5/D,MAOxC,OANA+0D,EAAAmM,uBAAA,CACMyF,GACA6D,GACA0V,GACAiD,KAENpuB,GAGAsuB,EA5BO,CA6BL5sC,IG9Da,IAAA8tC,GAjBN,IAAOnB,GAAG,CACnBx7E,OAAA,MACAkvC,SAAA,GAGArB,OAAA,GAKA/zB,KAAA,IAAcuoB,GAAI,CAClB57B,OAAgBF,EAAMC,UAAAC,OACtBE,KAAcJ,EAAMC,UAAAG,KACpBD,WAAoBH,EAAMC,UAAAE,eCpBXk2E,GACf,UADeA,GAEf,yBCkCIC,GAAS,SAAAjkC,GACb,SAAAkkC,EAAA7sE,GACA,IAAAvc,EAAAuc,GAAA,GAEA29B,EAAsBllC,EAAM,GAAGhV,UAE/Bk6C,EAAA8uB,eACA9uB,EAAAsyB,uBACAtnB,EAAAhsD,KAAAwL,KAAAw1C,GAEAx1C,KAAA2kF,gBAAA5sF,IAAAuD,EAAAgpE,QAAAhpE,EAAAgpE,QAAA,GACAtkE,KAAA4kF,+BAAA7sF,IAAAuD,EAAAwsE,wBACAxsE,EAAAwsE,wBAOA9nE,KAAA7D,KAAgBozD,GAASE,KAgDzB,OA5CAjP,IAAAkkC,EAAA10E,UAAAwwC,GACAkkC,EAAApwF,UAAAD,OAAA+K,OAAAohD,KAAAlsD,WACAowF,EAAApwF,UAAA2b,YAAAy0E,EAQAA,EAAApwF,UAAA0zE,WAAA,WACA,OAA6BhoE,KAAAzJ,IAAciuF,KAS3CE,EAAApwF,UAAAqwF,WAAA,SAAArgB,GACAtkE,KAAAxJ,IAAaguF,GAAYlgB,IASzBogB,EAAApwF,UAAAyzE,0BAAA,WACA,OAA8B/nE,KAAAzJ,IAAciuF,KAS5CE,EAAApwF,UAAAswF,0BAAA,SAAA9c,GACA9nE,KAAAxJ,IAAaguF,GAAY1c,IAGzB4c,EAnEa,CAoEXnkC,IASFkkC,GAASnwF,UAAAkpD,UAGM,IAAAqnC,GAAA,GC6KAC,GA5NP,SAAAjvE,GACR,SAAAkvE,EAAAthB,EAAAp2C,EAAAxV,GACAhC,EAAArhB,KAAAwL,MAEA,IAAA1E,EAAAuc,GAAA,GAKA7X,KAAAyjE,YAMAzjE,KAAAqtB,QAQArtB,KAAAglF,YAAA,KAQAhlF,KAAAX,IAAA,GAMAW,KAAAilF,iBAAAltF,IAAAuD,EAAA6uE,WAAA,IAAA7uE,EAAA6uE,WAOAnqE,KAAAklF,kBAAA,GA4KA,OAxKArvE,IAAAkvE,EAAA/0E,UAAA6F,GACAkvE,EAAAzwF,UAAAD,OAAA+K,OAAAyW,KAAAvhB,WACAywF,EAAAzwF,UAAA2b,YAAA80E,EAKAA,EAAAzwF,UAAA0hB,QAAA,WACAhW,KAAA6T,cAAuBO,EAASC,SAMhC0wE,EAAAzwF,UAAAu4B,OAAA,WACA,OAAA7sB,KAAAX,IAAA,IAAAW,KAAAyjE,WASAshB,EAAAzwF,UAAA4zE,eAAA,WACA,IAAAloE,KAAAglF,YAEA,OAAAhlF,KAEA,IAAAotB,EAAAptB,KAAAglF,YAMA,GACA,GAAA53D,EAAAE,YAA6BrD,GAASG,OACtC,OAAAgD,EAEAA,IAAA43D,kBACK53D,GAGL,OAAAptB,MAOA+kF,EAAAzwF,UAAA6wF,oBAAA,WACA,GAAAnlF,KAAAglF,YAAA,CAIA,IAAA53D,EAAAptB,KAAAglF,YACAvsE,EAA+B,KAE/B,GACA,GAAA2U,EAAAE,YAA6BrD,GAASG,OAAA,CAItCgD,EAAA43D,YAAA,KACA,MACO53D,EAAAE,YAA6BrD,GAASE,QAG7C1R,EAAA2U,EACOA,EAAAE,YAA6BrD,GAASC,KAG7CzR,EAAAusE,YAAA53D,EAAA43D,YAEAvsE,EAAA2U,EAEAA,EAAA3U,EAAAusE,kBACK53D,KAQL23D,EAAAzwF,UAAA01E,aAAA,WACA,OAAAhqE,KAAAyjE,WAMAshB,EAAAzwF,UAAAg5B,SAAA,WACA,OAAAttB,KAAAqtB,OAWA03D,EAAAzwF,UAAA2zE,SAAA,SAAA56C,GACArtB,KAAAqtB,QACArtB,KAAAgW,WAUA+uE,EAAAzwF,UAAA0O,KAAA,aAQA+hF,EAAAzwF,UAAA00E,SAAA,SAAA1vE,EAAAilD,GACA,IAAAv+C,KAAAilF,YACA,SAGA,IAAA1+C,EAAAvmC,KAAAklF,kBAAA5rF,GACA,GAAAitC,GAGK,QAAAA,EACL,cAHAA,EAAAgY,EACAv+C,KAAAklF,kBAAA5rF,GAAAitC,EAKA,IAAAxX,EAAAwvB,EAAAhY,EAAA,OACA,OAAAxX,GAAA/uB,KAAAilF,YACA,EAEWl1D,GAAMhB,EAAA/uB,KAAAilF,cAUjBF,EAAAzwF,UAAAy0E,aAAA,SAAAzvE,GACA,QAAA0G,KAAAilF,cAGA,IAAAjlF,KAAAklF,kBAAA5rF,IAOAyrF,EAAAzwF,UAAAi2E,cAAA,SAAAjxE,GACA0G,KAAAilF,cACAjlF,KAAAklF,kBAAA5rF,IAAA,IAIAyrF,EAxNQ,CAyNNxxE,GCtIF,SAAA6xE,KACA,IAAAC,EAAYnzC,GAAqB,KAGjC,OAFAmzC,EAAAhvB,UAAA,gBACAgvB,EAAAC,SAAA,SACAD,EAAAhzC,OAGe,IAAAkzC,GA5JF,SAAAR,GACb,SAAAS,EAAA/hB,EAAAp2C,EAAAtyB,EAAAgU,EAAA02E,EAAA5tE,GAEAktE,EAAAvwF,KAAAwL,KAAAyjE,EAAAp2C,EAAAxV,GAMA7X,KAAA0lF,aAAA32E,EAQA/O,KAAA2lF,KAAA5qF,EAMAiF,KAAAy3D,OAAA,IAAA8f,MACA,OAAAxoE,IACA/O,KAAAy3D,OAAA1oD,eAOA/O,KAAA4lF,mBAAA,KAMA5lF,KAAA6lF,kBAAAJ,EAuGA,OAnGAV,IAAAS,EAAAx1E,UAAA+0E,GACAS,EAAAlxF,UAAAD,OAAA+K,OAAA2lF,KAAAzwF,WACAkxF,EAAAlxF,UAAA2b,YAAAu1E,EAKAA,EAAAlxF,UAAAue,gBAAA,WACA7S,KAAAqtB,OAAsBpD,GAASE,UAC/BnqB,KAAA8lF,iBACA9lF,KAAAy3D,OAAA2tB,MAEAplF,KAAAglF,aACAhlF,KAAAglF,YAAA7sF,UAEA6H,KAAAqtB,MAAiBpD,GAASK,MAC1BtqB,KAAAgW,UACA+uE,EAAAzwF,UAAAue,gBAAAre,KAAAwL,OAQAwlF,EAAAlxF,UAAA+6D,SAAA,WACA,OAAArvD,KAAAy3D,QAMA+tB,EAAAlxF,UAAAu4B,OAAA,WACA,OAAA7sB,KAAA2lF,MAQAH,EAAAlxF,UAAAyxF,kBAAA,WACA/lF,KAAAqtB,MAAiBpD,GAASpV,MAC1B7U,KAAA8lF,iBACA9lF,KAAAy3D,OAAA2tB,KACAplF,KAAAgW,WAQAwvE,EAAAlxF,UAAA0xF,iBAAA,WACA,IAAAnyB,EAA4C7zD,KAAA,OAC5C6zD,EAAAoyB,cAAApyB,EAAAqyB,cACAlmF,KAAAqtB,MAAmBpD,GAASG,OAE5BpqB,KAAAqtB,MAAmBpD,GAASI,MAE5BrqB,KAAA8lF,iBACA9lF,KAAAgW,WAOAwvE,EAAAlxF,UAAA0O,KAAA,WACAhD,KAAAqtB,OAAsBpD,GAASpV,QAC/B7U,KAAAqtB,MAAmBpD,GAASC,KAC5BlqB,KAAAy3D,OAAA,IAAA8f,MACA,OAAAv3E,KAAA0lF,eACA1lF,KAAAy3D,OAAA1oD,YAAA/O,KAAA0lF,eAGA1lF,KAAAqtB,OAAsBpD,GAASC,OAC/BlqB,KAAAqtB,MAAmBpD,GAASE,QAC5BnqB,KAAAgW,UACAhW,KAAA4lF,mBAAA,CACQnzE,EAAUzS,KAAAy3D,OAAcrjD,EAASS,MACzC7U,KAAA+lF,kBAAA/lF,MACQyS,EAAUzS,KAAAy3D,OAAcrjD,EAASY,KACzChV,KAAAgmF,iBAAAhmF,OAEAA,KAAA6lF,kBAAA7lF,UAAA2lF,QASAH,EAAAlxF,UAAAwxF,eAAA,WACA9lF,KAAA4lF,mBAAAjoF,QAAoC4U,GACpCvS,KAAA4lF,mBAAA,MAGAJ,EA7Ia,CA8IXV,ICpIK,SAASqB,GAAcz4E,EAAAoQ,EAAAE,EAAAooE,GAC9B,YAAAruF,IAAAquF,GACAA,EAAA,GAAA14E,EACA04E,EAAA,GAAAtoE,EACAsoE,EAAA,GAAApoE,EACAooE,GAEA,CAAA14E,EAAAoQ,EAAAE,GAWO,SAAAqoE,GAAA34E,EAAAoQ,EAAAE,GACP,OAAAtQ,EAAA,IAAAoQ,EAAA,IAAAE,EASO,SAASsoE,GAAM7iB,GACtB,OAAA4iB,GAAA5iB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IC3CA,IAgDe8iB,GAhDF,SAAAj2B,GACb,SAAAk2B,EAAAj2B,GAEAD,EAAA97D,KAAAwL,KAAAuwD,GAyCA,OArCAD,IAAAk2B,EAAAx2E,UAAAsgD,GACAk2B,EAAAlyF,UAAAD,OAAA+K,OAAAkxD,KAAAh8D,WACAkyF,EAAAlyF,UAAA2b,YAAAu2E,EAKAA,EAAAlyF,UAAA2vE,YAAA,SAAAnlB,GACA,KAAA9+C,KAAA6wD,kBAAA,CACA,IAAAzjC,EAAAptB,KAAAoxD,WACA+S,EAAA/2C,EAAAq2C,UAAA,GAAAn9D,WACA,GAAA69D,KAAArlB,KAAAqlB,GAAAriE,SAAAsrB,EAAAq2C,WACA,MAEAzjE,KAAA9D,MAAA/D,YAQAquF,EAAAlyF,UAAAmyF,mBAAA,WACA,OAAAzmF,KAAA0rB,WAAA,CAGA,IAEAhe,EDiBO,SAAArO,GACP,OAAAA,EAAA0Q,MAAA,KAAAhU,IAAA+pB,QCnBoB4gE,CADpB1mF,KAAAsxD,gBAEA,GACAtxD,KAAArC,QAAA,SAAAyvB,GACAA,EAAAq2C,UAAA,KAAA/1D,IACA1N,KAAAsD,OAAoBgjF,GAAMl5D,EAAAq2C,YAC1Br2C,EAAAj1B,YAEK6H,QAGLwmF,EA5Ca,CA6CXn2B,ICcF,SAAAs2B,GAAAC,EAAAC,EAAA/oE,EAAAE,GACA,IAAA8oE,EAAAhpE,EAAA8oE,EACAG,EAAA/oE,EAAA6oE,EACA79B,EAAA9oD,KAAAsE,KAAAsiF,IAAAC,KACA,OAAA7mF,KAAAykC,MAAA7mB,EAAAgpE,EAAA99B,GAAA9oD,KAAAykC,MAAA3mB,EAAA+oE,EAAA/9B,IAuBO,SAASg+B,GAAM7kE,EAAAngB,EAAA0uC,EACtB7G,EAAAo9C,EAAAn9C,EAAAo9C,EACAC,EAAAngF,EAAAkjE,EAAAkd,GAEA,IAAAj3B,EAAgBje,GAAqBhyC,KAAAykC,MAAA+L,EAAAvuB,GACrCjiB,KAAAykC,MAAA+L,EAAA1uC,IAEA,OAAAgF,EAAA/O,OACA,OAAAk4D,EAAA9d,OAGA8d,EAAAxgC,MAAA+gB,KAEA,IAAA22C,E/GgGA,CAAAlmF,SAAA,U+G/FA6F,EAAArJ,QAAA,SAAA5C,EAAA/C,EAAAkK,GACIqwB,GAAM80D,EAAAtsF,EAAAk2B,UAGV,IAAAq2D,EAA2Bp0D,GAAQm0D,GACnCE,EAA4Bp0D,GAASk0D,GACrCG,EAAsBt1C,GACtBhyC,KAAAykC,MAAA+L,EAAA42C,EAAAz9C,GACA3pC,KAAAykC,MAAA+L,EAAA62C,EAAA19C,IAEA49C,EAAA/2C,EAAA7G,EAEA7iC,EAAArJ,QAAA,SAAA5C,EAAA/C,EAAAkK,GACA,IAAAwlF,EAAA3sF,EAAAk2B,OAAA,GAAAo2D,EAAA,GACAM,IAAA5sF,EAAAk2B,OAAA,GAAAo2D,EAAA,IACAO,EAAmB10D,GAAQn4B,EAAAk2B,QAC3B42D,EAAoB10D,GAASp4B,EAAAk2B,QAE7Bu2D,EAAA5zB,UACA74D,EAAA84D,MACAqW,IACAnvE,EAAA84D,MAAA1xC,MAAA,EAAA+nD,EAAAnvE,EAAA84D,MAAA7xD,OAAA,EAAAkoE,EACAwd,EAAAD,EAAAE,EAAAF,EACAG,EAAAH,EAAAI,EAAAJ,KAGA,IAAAK,EAAsB/0D,GAAUm0D,GA6GhC,OA3GAC,EAAAY,eAAApqF,QAAA,SAAAqqF,EAAAhwF,EAAAkK,GAqBA,IAAA+E,EAAA+gF,EAAA/gF,OACAW,EAAAogF,EAAApgF,OACAosB,EAAA/sB,EAAA,MAAAitB,EAAAjtB,EAAA,MACAinB,EAAAjnB,EAAA,MAAAknB,EAAAlnB,EAAA,MACAmnB,EAAAnnB,EAAA,MAAAonB,EAAApnB,EAAA,MACAghF,GAAArgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAo+C,IAAAtgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAq+C,GAAAvgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAs+C,IAAAxgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAu+C,GAAAzgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAw+C,IAAA1gF,EAAA,MAAAkgF,EAAA,IAAAh+C,EAKAy+C,EAAAv0D,EACAw0D,EAAAt0D,EACAF,EAAA,EACAE,EAAA,EAMA,IAMAu0D,ExHhFO,SAAAjnB,GAGP,IAFA,IAAAjiE,EAAAiiE,EAAAvpE,OAEAD,EAAA,EAAiBA,EAAAuH,EAAOvH,IAAA,CAIxB,IAFA,IAAA0wF,EAAA1wF,EACA2wF,EAAAzoF,KAAAie,IAAAqjD,EAAAxpE,OACA+G,EAAA/G,EAAA,EAAuB+G,EAAAQ,EAAOR,IAAA,CAC9B,IAAA6pF,EAAA1oF,KAAAie,IAAAqjD,EAAAziE,GAAA/G,IACA4wF,EAAAD,IACAA,EAAAC,EACAF,EAAA3pF,GAIA,OAAA4pF,EACA,YAIA,IAAAp7E,EAAAi0D,EAAAknB,GACAlnB,EAAAknB,GAAAlnB,EAAAxpE,GACAwpE,EAAAxpE,GAAAuV,EAGA,QAAA/R,EAAAxD,EAAA,EAAuBwD,EAAA+D,EAAO/D,IAE9B,IADA,IAAAqtF,GAAArnB,EAAAhmE,GAAAxD,GAAAwpE,EAAAxpE,MACA+I,EAAA/I,EAAqB+I,EAAAxB,EAAA,EAAWwB,IAChC/I,GAAA+I,EACAygE,EAAAhmE,GAAAuF,GAAA,EAEAygE,EAAAhmE,GAAAuF,IAAA8nF,EAAArnB,EAAAxpE,GAAA+I,GAQA,IADA,IAAA+c,EAAA,IAAA3H,MAAA5W,GACA1G,EAAA0G,EAAA,EAAqB1G,GAAA,EAAQA,IAAA,CAC7BilB,EAAAjlB,GAAA2oE,EAAA3oE,GAAA0G,GAAAiiE,EAAA3oE,MACA,QAAA8F,EAAA9F,EAAA,EAAuB8F,GAAA,EAAQA,IAC/B6iE,EAAA7iE,GAAAY,IAAAiiE,EAAA7iE,GAAA9F,GAAAilB,EAAAjlB,GAGA,OAAAilB,EwHmCsBgrE,CANtB,CACA,CANA56D,GAAAq6D,EACAp6D,GAAAq6D,EAKA,IAAAL,EAAAF,GACA,CALA75D,GAAAm6D,EACAl6D,GAAAm6D,EAIA,IAAAH,EAAAJ,GACA,KAAA/5D,EAAAC,EAAAi6D,EAAAF,GACA,KAAA95D,EAAAC,EAAAi6D,EAAAJ,KAGA,GAAAO,EAAA,CAIAt4B,EAAAkQ,OACAlQ,EAAA6J,YACA,IAAA4sB,GAAAqB,EAAAE,EAAAE,GAAA,EACAxB,GAAAqB,EAAAE,EAAAE,GAAA,EACAS,EAAApC,GAAAC,EAAAC,EAAAoB,EAAAC,GACApZ,EAAA6X,GAAAC,EAAAC,EAAAsB,EAAAC,GACArZ,EAAA4X,GAAAC,EAAAC,EAAAwB,EAAAC,GAEAn4B,EAAAuJ,OAAAoV,EAAA,GAAAA,EAAA,IACA3e,EAAAwJ,OAAAovB,EAAA,GAAAA,EAAA,IACA54B,EAAAwJ,OAAAoV,EAAA,GAAAA,EAAA,IACA5e,EAAAuS,OAEAvS,EAAA7lD,UACAm+E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAR,EAAAC,GAEA/3B,EAAAvvB,UAAAymD,EAAA,GAAAkB,EACAlB,EAAA,GAAAmB,GAEAr4B,EAAAxgC,MAAAka,EAAA6G,GACA7G,EAAA6G,GAEAyf,EAAAyD,UAAA4zB,EAAAn1C,OAAA,KACA8d,EAAAwQ,aAGAymB,IACAj3B,EAAAkQ,OAEAlQ,EAAAmG,YAAA,QACAnG,EAAAwL,UAAA,EAEAwrB,EAAAY,eAAApqF,QAAA,SAAAqqF,EAAAhwF,EAAAkK,GACA,IAAA0F,EAAAogF,EAAApgF,OACAqgF,GAAArgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAo+C,IAAAtgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAq+C,GAAAvgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAs+C,IAAAxgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAu+C,GAAAzgF,EAAA,MAAAkgF,EAAA,IAAAh+C,EACAw+C,IAAA1gF,EAAA,MAAAkgF,EAAA,IAAAh+C,EAEAqmB,EAAA6J,YACA7J,EAAAuJ,OAAAyuB,EAAAC,GACAj4B,EAAAwJ,OAAAsuB,EAAAC,GACA/3B,EAAAwJ,OAAA0uB,EAAAC,GACAn4B,EAAAyJ,YACAzJ,EAAAgK,WAGAhK,EAAAwQ,WAEAxQ,EAAA9d,OCzNA,IAmBI22C,GAAa,SAAAnnD,EAAAonD,EAAA/B,EAAAgC,EAAAC,GAMjBnpF,KAAAopF,YAAAvnD,EAMA7hC,KAAAqpF,YAAAJ,EAGA,IAAAK,EAAA,GACAC,EAAqB1sD,GAAY78B,KAAAqpF,YAAArpF,KAAAopF,aAOjCppF,KAAAwpF,cAAA,SAAAhvF,GACA,IAAA6E,EAAA7E,EAAA,OAAAA,EAAA,GAIA,OAHA8uF,EAAAjqF,KACAiqF,EAAAjqF,GAAAkqF,EAAA/uF,IAEA8uF,EAAAjqF,IAOAW,KAAAypF,iBAAAP,EAMAlpF,KAAA0pF,uBAAAP,IAMAnpF,KAAA2pF,WAAA,GAOA3pF,KAAA4pF,iBAAA,EAMA5pF,KAAA6pF,kBAAA7pF,KAAAopF,YAAApxD,cACAkxD,KACAlpF,KAAAopF,YAAAlxD,aACOhF,GAAQg2D,IAAqBh2D,GAAQlzB,KAAAopF,YAAAlxD,aAM5Cl4B,KAAA8pF,kBAAA9pF,KAAAopF,YAAAlxD,YACIhF,GAAQlzB,KAAAopF,YAAAlxD,aAAA,KAMZl4B,KAAA+pF,kBAAA/pF,KAAAqpF,YAAAnxD,YACIhF,GAAQlzB,KAAAqpF,YAAAnxD,aAAA,KAEZ,IAAA8xD,EAA2Bj3D,GAAUm0D,GACrC+C,EAA4Bn3D,GAAWo0D,GACvCgD,EAA+Br3D,GAAcq0D,GAC7CiD,EAA8Bv3D,GAAas0D,GAC3CkD,EAAApqF,KAAAwpF,cAAAQ,GACAK,EAAArqF,KAAAwpF,cAAAS,GACAK,EAAAtqF,KAAAwpF,cAAAU,GACAK,EAAAvqF,KAAAwpF,cAAAW,GAQA,GANAnqF,KAAAwqF,SACAR,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EA9GA,IAiHAvqF,KAAA4pF,gBAAA,CACA,IAAAa,EAAAtpF,IACAnB,KAAA2pF,WAAAhsF,QAAA,SAAAqqF,EAAAhwF,EAAAkK,GACAuoF,EAAAvqF,KAAAuB,IAAAgpF,EACAzC,EAAA/gF,OAAA,MAAA+gF,EAAA/gF,OAAA,MAAA+gF,EAAA/gF,OAAA,SAKAjH,KAAA2pF,WAAAhsF,QAAA,SAAAqqF,GACA,GAAA9nF,KAAAC,IAAA6nF,EAAA/gF,OAAA,MAAA+gF,EAAA/gF,OAAA,MACA+gF,EAAA/gF,OAAA,OAAAwjF,EAAAzqF,KAAA8pF,kBAAA,GACA,IAAAY,EAAA,EAAA1C,EAAA/gF,OAAA,MAAA+gF,EAAA/gF,OAAA,OACA,CAAA+gF,EAAA/gF,OAAA,MAAA+gF,EAAA/gF,OAAA,OACA,CAAA+gF,EAAA/gF,OAAA,MAAA+gF,EAAA/gF,OAAA,QACAyjF,EAAA,MAAAD,EAAAzqF,KAAA8pF,kBAAA,IACAY,EAAA,OAAA1qF,KAAA8pF,mBAEAY,EAAA,MAAAD,EAAAzqF,KAAA8pF,kBAAA,IACAY,EAAA,OAAA1qF,KAAA8pF,mBAEAY,EAAA,MAAAD,EAAAzqF,KAAA8pF,kBAAA,IACAY,EAAA,OAAA1qF,KAAA8pF,mBAMA,IAAA5oF,EAAAhB,KAAAuB,IACAipF,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAxqF,KAAAC,IACAuqF,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAxpF,EAAAlB,KAAA8pF,kBAAA,IACA9B,EAAA/gF,OAAAyjF,KAGKprF,KAAAU,OAGLspF,EAAA,IAaAN,GAAa10F,UAAAq2F,aAAA,SAAAnuF,EAAAC,EAAAjC,EAAAowF,EAAAC,EAAAC,GACb9qF,KAAA2pF,WAAA5zF,KAAA,CACAkR,OAAA,CAAA2jF,EAAAC,EAAAC,GACAljF,OAAA,CAAApL,EAAAC,EAAAjC,MAoBAwuF,GAAa10F,UAAAk2F,SAAA,SAAAhuF,EAAAC,EAAAjC,EAAAoE,EAAAgsF,EAAAC,EAAAC,EAAAC,EAAAC,GAEb,IAAAC,EAAyBl6D,GAAc,CAAA65D,EAAAC,EAAAC,EAAAC,IACvCG,EAAAlrF,KAAA8pF,kBACI52D,GAAQ+3D,GAAAjrF,KAAA8pF,kBAAA,KACZqB,EAA2CnrF,KAAA,kBAI3CorF,EAAAprF,KAAAopF,YAAApxD,YACAkzD,EAAA,IAAAA,EAAA,EAEAG,GAAA,EAEA,GAAAL,EAAA,GACA,GAAAhrF,KAAAqpF,YAAA9wD,YAAAv4B,KAAA+pF,kBAGAsB,EAD4Bn4D,GADCnC,GAAc,CAAAv0B,EAAAC,EAAAjC,EAAAoE,KACPoB,KAAA+pF,kBAlMpC,KAoMAsB,GAEAD,GAAAprF,KAAAopF,YAAA7wD,YAAA2yD,IACAG,EAAAH,EAvMA,KAwMAG,GAIA,GAAAA,IAAArrF,KAAAypF,kBACSn1D,GAAU22D,EAAAjrF,KAAAypF,kBADnB,CAOA,KAAA4B,GACAC,SAAAV,EAAA,KAAAU,SAAAV,EAAA,KACAU,SAAAT,EAAA,KAAAS,SAAAT,EAAA,KACAS,SAAAR,EAAA,KAAAQ,SAAAR,EAAA,KACAQ,SAAAP,EAAA,KAAAO,SAAAP,EAAA,MACA,KAAAC,EAAA,GAGA,OAFAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAGAntE,EAHA7P,EAAA,EAAA7R,EAAA,GAAAhC,EAAA,OAAAgC,EAAA,GAAAhC,EAAA,OACA+wF,EAAAvrF,KAAAwpF,cAAAn7E,GAGA,GAAA+8E,EAIAltE,GAFawQ,GAAMk8D,EAAA,GAAAO,GACNz8D,GAAMo8D,EAAA,GAAAK,IAAA,EAEPz8D,GAAM68D,EAAA,GAAAJ,QAElBjtE,GAAA0sE,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEA,IAAAntE,GAAAwsE,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEAF,EADAntE,IAAAE,IACApe,KAAA0pF,uBAEA,GAAA2B,EAAA,CACA,GAAAnrF,KAAAie,IAAA3hB,EAAA,GAAAhC,EAAA,KAAA0F,KAAAie,IAAA3hB,EAAA,GAAAhC,EAAA,KAEA,IAAAgxF,EAAA,EAAA/uF,EAAA,GAAAjC,EAAA,OAAAiC,EAAA,GAAAjC,EAAA,OACAixF,EAAAzrF,KAAAwpF,cAAAgC,GACAE,EAAA,EAAA9sF,EAAA,GAAApC,EAAA,OAAAoC,EAAA,GAAApC,EAAA,OACAmvF,EAAA3rF,KAAAwpF,cAAAkC,GAEA1rF,KAAAwqF,SACAhuF,EAAAC,EAAA+uF,EAAAE,EAAAd,EAAAC,EAAAY,EAAAE,EAAAX,EAAA,GACAhrF,KAAAwqF,SACAkB,EAAAF,EAAAhxF,EAAAoE,EAAA+sF,EAAAF,EAAAX,EAAAC,EAAAC,EAAA,OACO,CAEP,IAAAY,EAAA,EAAApvF,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAovF,EAAA7rF,KAAAwpF,cAAAoC,GACAE,EAAA,EAAAtxF,EAAA,GAAAoE,EAAA,OAAApE,EAAA,GAAAoE,EAAA,OACAmtF,EAAA/rF,KAAAwpF,cAAAsC,GAEA9rF,KAAAwqF,SACAhuF,EAAAovF,EAAAE,EAAAltF,EAAAgsF,EAAAiB,EAAAE,EAAAhB,EAAAC,EAAA,GACAhrF,KAAAwqF,SACAoB,EAAAnvF,EAAAjC,EAAAsxF,EAAAD,EAAAhB,EAAAC,EAAAiB,EAAAf,EAAA,GAEA,QAIA,GAAAI,EAAA,CACA,IAAAprF,KAAA6pF,kBACA,OAEA7pF,KAAA4pF,iBAAA,EAGA5pF,KAAA2qF,aAAAnuF,EAAAhC,EAAAoE,EAAAgsF,EAAAE,EAAAC,GACA/qF,KAAA2qF,aAAAnuF,EAAAC,EAAAjC,EAAAowF,EAAAC,EAAAC,KAQA9B,GAAa10F,UAAA03F,sBAAA,WACb,IAAA/6D,EhH1HA,CAAA9vB,SAAA,UgHmIA,OAPAnB,KAAA2pF,WAAAhsF,QAAA,SAAAqqF,EAAAhwF,EAAAkK,GACA,IAAAnH,EAAAitF,EAAA/gF,OACIkqB,GAAgBF,EAAAl2B,EAAA,IAChBo2B,GAAgBF,EAAAl2B,EAAA,IAChBo2B,GAAgBF,EAAAl2B,EAAA,MAGpBk2B,GAMA+3D,GAAa10F,UAAAyzF,aAAA,WACb,OAAA/nF,KAAA2pF,YAGe,IAAAsC,GAAA,GCjCAC,GA3RD,SAAAnH,GACd,SAAAoH,EACAtqD,EACA0/C,EACA0H,EACAmD,EACA3oB,EACAwf,EACAvyC,EACAw5B,EACAmiB,EACAC,EACAlF,GAEArC,EAAAvwF,KAAAwL,KAAAyjE,EAA+Bx5C,GAASC,MAMxClqB,KAAAusF,kBAAAx0F,IAAAqvF,KAMApnF,KAAAy3C,YAAA/G,EAMA1wC,KAAAwsF,QAAAtiB,EAMAlqE,KAAAivD,QAAA,KAMAjvD,KAAAysF,gBAAAlL,EAMAvhF,KAAA0sF,gBAAAN,EAMApsF,KAAA2sF,kBAAA1J,GAAAxf,EAMAzjE,KAAA4sF,aAAA,GAMA5sF,KAAA6sF,qBAAA,KAMA7sF,KAAA8sF,SAAA,EAEA,IAAA5F,EAAAkF,EAAAriB,mBAAA/pE,KAAA2sF,mBACAI,EAAA/sF,KAAA0sF,gBAAAx0D,YACAgxD,EAAAlpF,KAAAysF,gBAAAv0D,YAEA80D,EAAAD,EACM34D,GAAe8yD,EAAA6F,GAAA7F,EAErB,GAAe,IAAPl0D,GAAOg6D,GAAf,CAOA,IAAAC,EAAAprD,EAAA3J,YACA+0D,IAIA/D,EAHAA,EAG0B90D,GAAe80D,EAAA+D,GAFzCA,GAMA,IAAAnjD,EAAAsiD,EAAAz/C,cACA3sC,KAAA2sF,kBAAA,IAGA9iD,EF5GO,SAAAhI,EAAAonD,EACPx/C,EAAAK,GAEA,IAAAN,EAAqB1M,GAAS2M,EAAAw/C,EAAApnD,GAG9BgI,EAAyBjS,GAAkBqxD,EAAAn/C,EAAAL,GAE3CyjD,EAAAjE,EAAA7wD,wBACArgC,IAAAm1F,IACArjD,GAAAqjD,GAEA,IAAAC,EAAAtrD,EAAAzJ,wBACArgC,IAAAo1F,IACAtjD,GAAAsjD,GAOA,IAAAlG,EAAAplD,EAAA3J,YACA,IAAA+uD,GAAuBz1D,GAAkBy1D,EAAAz9C,GAAA,CACzC,IAAA4jD,EAA6Bx1D,GAAkBiK,EAAAgI,EAAAL,GAC/CK,EACAyhD,SAAA8B,MAAA,IACAvjD,GAAAujD,GAIA,OAAAvjD,EE8E2BwjD,CAC3BxrD,EAAAonD,EAFuB71D,GAAS45D,GAEhCljD,GAEA,IAAAwhD,SAAAzhD,OAAA,EAGA7pC,KAAAqtB,MAAmBpD,GAASI,UAH5B,CAOA,IAAAijE,OAAAv1F,IAAAu0F,EACAA,EAA2B59B,GAU3B,GAJA1uD,KAAAutF,eAAA,IAA8BtB,GAC9BpqD,EAAAonD,EAAA+D,EAAA9D,EACAr/C,EAAAyjD,GAEA,IAAAttF,KAAAutF,eAAAxF,eAAA9vF,OAAA,CAMA+H,KAAA8sF,SAAAvL,EAAAlZ,kBAAAx+B,GACA,IAAAo9C,EAAAjnF,KAAAutF,eAAAvB,wBAaA,GAXA9C,IACArnD,EAAA7J,YACAivD,EAAA,GAA0Bl5D,GAC1Bk5D,EAAA,GAAAiC,EAAA,GAAAA,EAAA,IACAjC,EAAA,GAA0Bl5D,GAC1Bk5D,EAAA,GAAAiC,EAAA,GAAAA,EAAA,KAEAjC,EAAuB7yD,GAAe6yD,EAAAiC,IAI7Bl2D,GAAOi0D,GAEX,CAIL,IAHA,IAAAuG,EAAAjM,EAAA/c,0BACAyiB,EAAAjnF,KAAA8sF,UAEAW,EAAAD,EAAAtsF,KAAuCusF,GAAAD,EAAAnsF,KAA0BosF,IACjE,QAAAC,EAAAF,EAAApsF,KAAyCssF,GAAAF,EAAAlsF,KAA0BosF,IAAA,CACnE,IAAAtgE,EAAAi/D,EAAArsF,KAAA8sF,SAAAW,EAAAC,EAAAh9C,GACAtjB,GACAptB,KAAA4sF,aAAA72F,KAAAq3B,GAKA,IAAAptB,KAAA4sF,aAAA30F,SACA+H,KAAAqtB,MAAqBpD,GAASI,YAf9BrqB,KAAAqtB,MAAmBpD,GAASI,WAnB5BrqB,KAAAqtB,MAAmBpD,GAASI,YAxC5BrqB,KAAAqtB,MAAmBpD,GAASI,MAiM5B,OAlHA06D,IAAAoH,EAAAn8E,UAAA+0E,GACAoH,EAAA73F,UAAAD,OAAA+K,OAAA2lF,KAAAzwF,WACA63F,EAAA73F,UAAA2b,YAAAk8E,EAKAA,EAAA73F,UAAAue,gBAAA,WACA7S,KAAAqtB,OAAsBpD,GAASE,SAC/BnqB,KAAA2tF,mBAEA5I,EAAAzwF,UAAAue,gBAAAre,KAAAwL,OAOAmsF,EAAA73F,UAAA+6D,SAAA,WACA,OAAArvD,KAAAivD,SAMAk9B,EAAA73F,UAAAs5F,WAAA,WACA,IAAA5mF,EAAA,GAWA,GAVAhH,KAAA4sF,aAAAjvF,QAAA,SAAAyvB,EAAAp1B,EAAAkK,GACAkrB,KAAAE,YAAqCrD,GAASG,QAC9CpjB,EAAAjR,KAAA,CACAk7B,OAAAjxB,KAAAysF,gBAAA1iB,mBAAA38C,EAAAq2C,WACA5P,MAAAzmC,EAAAiiC,cAGK/vD,KAAAU,OACLA,KAAA4sF,aAAA30F,OAAA,EAEA,IAAA+O,EAAA/O,OACA+H,KAAAqtB,MAAmBpD,GAASpV,UACvB,CACL,IAAAnH,EAAA1N,KAAA2sF,kBAAA,GACAl5D,EAAAzzB,KAAA0sF,gBAAAmB,YAAAngF,GACAyU,EAAA,iBAAAsR,MAAA,GACAzxB,EAAA,iBAAAyxB,MAAA,GACAqW,EAAA9pC,KAAA0sF,gBAAA//C,cAAAj/B,GACAm8B,EAAA7pC,KAAAysF,gBAAA9/C,cAAA3sC,KAAA8sF,UAEA5F,EAAAlnF,KAAA0sF,gBAAA3iB,mBACA/pE,KAAA2sF,mBACA3sF,KAAAivD,QAAqB+3B,GAAiB7kE,EAAAngB,EAAAhC,KAAAy3C,YACtC5N,EAAA7pC,KAAAysF,gBAAAv0D,YACA4R,EAAAo9C,EAAAlnF,KAAAutF,eAAAvmF,EACAhH,KAAAwsF,QAAAxsF,KAAAusF,cAEAvsF,KAAAqtB,MAAmBpD,GAASG,OAE5BpqB,KAAAgW,WAMAm2E,EAAA73F,UAAA0O,KAAA,WACA,GAAAhD,KAAAqtB,OAAsBpD,GAASC,KAAA,CAC/BlqB,KAAAqtB,MAAmBpD,GAASE,QAC5BnqB,KAAAgW,UAEA,IAAA83E,EAAA,EAEA9tF,KAAA6sF,qBAAA,GACA7sF,KAAA4sF,aAAAjvF,QAAA,SAAAyvB,EAAAp1B,EAAAkK,GACA,IAAAmrB,EAAAD,EAAAE,WACA,GAAAD,GAAqBpD,GAASC,MAAAmD,GAAkBpD,GAASE,QAAA,CACzD2jE,IAEA,IAAAC,EAAgC77E,EAAMkb,EAAOhZ,EAASC,OACtD,SAAA1d,GACA,IAAA02B,EAAAD,EAAAE,WACAD,GAA2BpD,GAASG,QACpCiD,GAA6BpD,GAASpV,OACtCwY,GAA6BpD,GAASI,QACtB9X,EAAaw7E,GAE7B,MADAD,IAEA9tF,KAAA2tF,mBACA3tF,KAAA4tF,gBAGa5tF,MACbA,KAAA6sF,qBAAA92F,KAAAg4F,KAEOzuF,KAAAU,OAEPA,KAAA4sF,aAAAjvF,QAAA,SAAAyvB,EAAAp1B,EAAAkK,GACAkrB,EAAAE,YACqBrD,GAASC,MAC9BkD,EAAApqB,SAIA,IAAA8qF,GACA7oE,WAAAjlB,KAAA4tF,WAAAtuF,KAAAU,MAAA,KAQAmsF,EAAA73F,UAAAq5F,iBAAA,WACA3tF,KAAA6sF,qBAAAlvF,QAAsC4U,GACtCvS,KAAA6sF,qBAAA,MAGAV,EAvRc,CAwRZrH,ICrSK,SAAAkJ,GAAAC,EAAAt1D,GACP,IAAAu1D,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOA5qB,EAAA/yB,EAAApiC,GACA,OAAAm1D,EAGAwqB,EAAAnhF,QAAAohF,EAAAzqB,EAAA,GAAAn9D,YACAwG,QAAAqhF,EAAA1qB,EAAA,GAAAn9D,YACAwG,QAAAshF,EAAA,WAEA,QADA3qB,EAAA,MACAn9D,aAEAwG,QAAAuhF,EAAA,WACA,IAAA3gF,EAAA+1D,EAAA,GACA8U,EAAA5/C,EAAA21D,iBAAA5gF,GAGA,OAFY6c,GAAMguD,EAAA,KAClBA,EAAAplD,YAAAswC,EAAA,IACAn9D,kBAbA,GA0BO,SAAAioF,GAAAC,EAAA71D,GAGP,IAFA,IAAA/1B,EAAA4rF,EAAAv2F,OACAw2F,EAAA,IAAAt4E,MAAAvT,GACA5K,EAAA,EAAiBA,EAAA4K,IAAS5K,EAC1By2F,EAAAz2F,GAAAg2F,GAAAQ,EAAAx2F,GAAA2gC,GAEA,OAQO,SAAA81D,GACP,OAAAA,EAAAx2F,OACA,OAAAw2F,EAAA,GAEA,gBAOAhrB,EAAA/yB,EAAApiC,GACA,GAAAm1D,EAEO,CACP,IAAAhpE,ELfO,SAAAgpE,GACP,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GKcgBirB,CAAajrB,GAC7BlgE,EAAoBmrB,GAAMj0B,EAAAg0F,EAAAx2F,QAC1B,OAAAw2F,EAAAlrF,GAAAkgE,EAAA/yB,EAAApiC,KAzBAqgF,CAAAF,GAsCO,SAAAG,GAAAnrB,EAAA/yB,EAAApiC,ICyFP,SAAAugF,GAAAC,GACA,OAAAA,EAGA34E,MAAAC,QAAA04E,GACA,SAAA/1E,GACA,OAAA+1E,GAIA,mBAAAA,EACAA,EAGA,SAAA/1E,GACA,OAAA+1E,IAbA,KAkBe,IAAAC,GA7JL,SAAAn4E,GACV,SAAAo4E,EAAA1zF,GAEAsb,EAAApiB,KAAAwL,MAMAA,KAAAuqC,YAAuB9O,GAAangC,EAAAgT,YAMpCtO,KAAAivF,cAAAJ,GAAAvzF,EAAAsnD,cAMA5iD,KAAAkvF,8BAAAn3F,IAAAuD,EAAA6zF,yBACA7zF,EAAA6zF,wBAOAnvF,KAAAy9C,SAAA,EAMAz9C,KAAAg0C,YAAAj8C,IAAAuD,EAAA+xB,MACA/xB,EAAA+xB,MAAsB6nB,GAAWE,MAMjCp1C,KAAAovF,YAAAr3F,IAAAuD,EAAA+zF,OAAA/zF,EAAA+zF,MAsFA,OAlFAz4E,IAAAo4E,EAAAh/E,UAAA4G,GACAo4E,EAAA16F,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACA06F,EAAA16F,UAAA2b,YAAA++E,EAMAA,EAAA16F,UAAAquD,gBAAA,WACA,OAAA3iD,KAAAivF,eAMAD,EAAA16F,UAAAuuD,2BAAA,WACA,OAAA7iD,KAAAkvF,0BAQAF,EAAA16F,UAAA47C,cAAA,WACA,OAAAlwC,KAAAuqC,aAOAykD,EAAA16F,UAAA67C,eAAA,WACA,OAAW7gC,KAQX0/E,EAAA16F,UAAAg5B,SAAA,WACA,OAAAttB,KAAAg0C,QAMAg7C,EAAA16F,UAAAytE,SAAA,WACA,OAAA/hE,KAAAovF,QAOAJ,EAAA16F,UAAAg7F,QAAA,WACAtvF,KAAAgW,WAUAg5E,EAAA16F,UAAAi7F,gBAAA,SAAA3sC,GACA5iD,KAAAivF,cAAAJ,GAAAjsC,GACA5iD,KAAAgW,WAQAg5E,EAAA16F,UAAA2zE,SAAA,SAAA56C,GACArtB,KAAAg0C,OAAA3mB,EACArtB,KAAAgW,WAGAg5E,EAhIU,CAiIRr4E,GCjKF64E,GAAA,QAmCIC,GAAQ,SAAAn0F,GzI2LL,IAAA4G,EAAAwtF,EACPrtF,EyIzKA2oC,EACA,GAdAhrC,KAAA8qC,aAAA/yC,IAAAuD,EAAAwvC,QAAAxvC,EAAAwvC,QAAA,EAMA9qC,KAAA+rC,aAAAzwC,EAAA2vC,YACE1gB,IzI8KKroB,EyI9KUlC,KAAA+rC,azI8KV2jD,GyI5KJ,EzI6KHrtF,EyI/KiB,SAAA7F,EAAAC,GACjB,OAAAA,EAAAD,IzI8KAkmB,GACAxgB,EAAAytF,MAAA,SAAAC,EAAArsF,GACA,OAAAA,EACA,SAEA,IAAAssF,EAAAxtF,EAAAH,EAAAqB,EAAA,GAAAqsF,GACA,QAAAC,EAAA,GAAAH,GAAA,IAAAG,MyInLG,KAKHv0F,EAAAw0F,QACA,QAAA93F,EAAA,EAAA4Y,EAAA5Q,KAAA+rC,aAAA9zC,OAAA,EAAsDD,EAAA4Y,IAAQ5Y,EAC9D,GAAAgzC,GAGA,GAAAhrC,KAAA+rC,aAAA/zC,GAAAgI,KAAA+rC,aAAA/zC,EAAA,KAAAgzC,EAAA,CACAA,OAAAjzC,EACA,YAJAizC,EAAAhrC,KAAA+rC,aAAA/zC,GAAAgI,KAAA+rC,aAAA/zC,EAAA,GAeAgI,KAAA8rC,YAAAd,EAOAhrC,KAAA+qC,QAAA/qC,KAAA+rC,aAAA9zC,OAAA,EAMA+H,KAAA+vF,aAAAh4F,IAAAuD,EAAAg2E,OAAAh2E,EAAAg2E,OAAA,KAMAtxE,KAAAgwF,SAAA,UACAj4F,IAAAuD,EAAAw0F,UACA9vF,KAAAgwF,SAAA10F,EAAAw0F,QACIvlE,GAAMvqB,KAAAgwF,SAAA/3F,QAAA+H,KAAA+rC,aAAA9zC,OACV,KAGA,IAAAg5B,EAAA31B,EAAA21B,YAEAl5B,IAAAk5B,GACAjxB,KAAA+vF,SAAA/vF,KAAAgwF,WACAhwF,KAAA+vF,QAAmBh9D,GAAU9B,IAG3B1G,IACFvqB,KAAA+vF,SAAA/vF,KAAAgwF,UAAAhwF,KAAA+vF,UAAA/vF,KAAAgwF,SACA,IAMAhwF,KAAAiwF,WAAA,UACAl4F,IAAAuD,EAAA40F,YACAlwF,KAAAiwF,WAAA30F,EAAA40F,UACI3lE,GAAMvqB,KAAAiwF,WAAAh4F,QAAA+H,KAAA+rC,aAAA9zC,OACV,KAOA+H,KAAAmwF,eAAAp4F,IAAAuD,EAAA80F,SACA90F,EAAA80F,SACApwF,KAAAiwF,WAAwC,KAAjBniE,GACrBvD,IACFvqB,KAAAmwF,WAAAnwF,KAAAiwF,YACAjwF,KAAAmwF,YAAAnwF,KAAAiwF,WACA,IAMAjwF,KAAAm3B,aAAAp/B,IAAAk5B,IAAA,KAOAjxB,KAAAqwF,gBAAA,KAMArwF,KAAAswF,SAAA,WAEAv4F,IAAAuD,EAAAi1F,MACAvwF,KAAAqwF,gBAAA/0F,EAAAi1F,MAAAx0F,IAAA,SAAA03B,EAAA/lB,GAIA,OAHA,IAA0Bq5D,GAC1B7mE,KAAAuB,IAAA,EAAAgyB,EAAA,IAAAvzB,KAAAC,IAAAszB,EAAA,SACAvzB,KAAAuB,IAAA,EAAAgyB,EAAA,IAAAvzB,KAAAC,IAAAszB,EAAA,WAEKzzB,MACFixB,GACHjxB,KAAAwwF,qBAAAv/D,IAaAw+D,GAAQn7F,UAAAm8F,iBAAA,SAAAx/D,EAAA1iB,EAAAzW,GAER,IADA,IAAAyrE,EAAAvjE,KAAAwkE,0BAAAvzC,EAAA1iB,GACAvW,EAAAurE,EAAAriE,KAAA0P,EAAA2yD,EAAAliE,KAAmDrJ,GAAA4Y,IAAS5Y,EAC5D,QAAAwD,EAAA+nE,EAAAniE,KAAAoiC,EAAA+/B,EAAAjiE,KAAqD9F,GAAAgoC,IAAShoC,EAC9D1D,EAAA,CAAAyW,EAAAvW,EAAAwD,KAcAi0F,GAAQn7F,UAAA80E,gCAAA,SAAA3F,EAAA3rE,EAAAsZ,EAAAs/E,EAAAr/D,GACR,IAAAkyC,EAAAzlD,EAAAE,EACA2yE,EAAA,KACAjjF,EAAA+1D,EAAA,KAOA,IANA,IAAAzjE,KAAA8rC,aACAhuB,EAAA2lD,EAAA,GACAzlD,EAAAylD,EAAA,IAEAktB,EAAA3wF,KAAA+pE,mBAAAtG,EAAApyC,GAEA3jB,GAAA1N,KAAA8qC,SAAA,CAQA,GAJAy4B,EAHA,IAAAvjE,KAAA8rC,YAGkB+6B,GAFlB/oD,EAAA5d,KAAA4N,MAAAgQ,EAAA,GAEyCA,EADzCE,EAAA9d,KAAA4N,MAAAkQ,EAAA,GACyCA,EAAA0yE,GAEzC1wF,KAAAwkE,0BAAAmsB,EAAAjjF,EAAAgjF,GAEA54F,EAAAtD,KAAA4c,EAAA1D,EAAA61D,GACA,WAEA71D,EAEA,UAOA+hF,GAAQn7F,UAAA4jC,UAAA,WACR,OAAAl4B,KAAAm3B,SAQAs4D,GAAQn7F,UAAAu7C,WAAA,WACR,OAAA7vC,KAAA+qC,SAQA0kD,GAAQn7F,UAAA07C,WAAA,WACR,OAAAhwC,KAAA8qC,SASA2kD,GAAQn7F,UAAA6oE,UAAA,SAAAzvD,GACR,OAAA1N,KAAA+vF,QACA/vF,KAAA+vF,QAEA/vF,KAAAgwF,SAAAtiF,IAUA+hF,GAAQn7F,UAAAq4C,cAAA,SAAAj/B,GACR,OAAA1N,KAAA+rC,aAAAr+B,IAQA+hF,GAAQn7F,UAAA67C,eAAA,WACR,OAAAnwC,KAAA+rC,cASA0jD,GAAQn7F,UAAA40E,2BAAA,SAAAzF,EAAAitB,EAAAr/D,GACR,GAAAoyC,EAAA,GAAAzjE,KAAA+qC,QAAA,CACA,OAAA/qC,KAAA8rC,YAAA,CACA,IAAA5qC,EAAA,EAAAuiE,EAAA,GACAriE,EAAA,EAAAqiE,EAAA,GACA,OAAaoD,GAAuB3lE,IAAA,EAAAE,IAAA,EAAAsvF,GAEpC,IAAAC,EAAA3wF,KAAA+pE,mBAAAtG,EAAApyC,GACA,OAAArxB,KAAAwkE,0BACAmsB,EAAAltB,EAAA,KAAAitB,GAEA,aAUAjB,GAAQn7F,UAAAi0E,mBAAA,SAAA76D,EAAA61D,EAAAlyC,GACR,IAAAigD,EAAAtxE,KAAAm9D,UAAAzvD,GACA8lB,EAAAxzB,KAAA2sC,cAAAj/B,GACA0iF,EAAiB55C,GAAMx2C,KAAA6tF,YAAAngF,GAAA1N,KAAAswF,UACvBpvF,EAAAowE,EAAA,GAAA/N,EAAAriE,KAAAkvF,EAAA,GAAA58D,EACAnyB,EAAAiwE,EAAA,IAAA/N,EAAAliE,KAAA,GAAA+uF,EAAA,GAAA58D,EAGA,OAASzB,GAAc7wB,EAFvBowE,EAAA,GAAA/N,EAAAniE,KAAAgvF,EAAA,GAAA58D,EAEuBnyB,EADvBiwE,EAAA,IAAA/N,EAAAjiE,KAAA,GAAA8uF,EAAA,GAAA58D,EACuBnC,IAUvBo+D,GAAQn7F,UAAAkwE,0BAAA,SAAAvzC,EAAAvjB,EAAAgjF,GACR,IAAAjtB,EAAA+rB,GACAxvF,KAAA4wF,uBAAA3/D,EAAA,GAAAA,EAAA,GAAAvjB,GAAA,EAAA+1D,GACA,IAAAviE,EAAAuiE,EAAA,GACAriE,EAAAqiE,EAAA,GAEA,OADAzjE,KAAA4wF,uBAAA3/D,EAAA,GAAAA,EAAA,GAAAvjB,GAAA,EAAA+1D,GACSoD,GAAuB3lE,EAAAuiE,EAAA,GAAAriE,EAAAqiE,EAAA,GAAAitB,IAOhCjB,GAAQn7F,UAAAowE,mBAAA,SAAAjB,GACR,IAAA6N,EAAAtxE,KAAAm9D,UAAAsG,EAAA,IACAjwC,EAAAxzB,KAAA2sC,cAAA82B,EAAA,IACA2sB,EAAiB55C,GAAMx2C,KAAA6tF,YAAApqB,EAAA,IAAAzjE,KAAAswF,UACvB,OACAhf,EAAA,IAAA7N,EAAA,OAAA2sB,EAAA,GAAA58D,EACA89C,EAAA,IAAA7N,EAAA,OAAA2sB,EAAA,GAAA58D,IAYAi8D,GAAQn7F,UAAAy1E,mBAAA,SAAAtG,EAAApyC,GACR,IAAAigD,EAAAtxE,KAAAm9D,UAAAsG,EAAA,IACAjwC,EAAAxzB,KAAA2sC,cAAA82B,EAAA,IACA2sB,EAAiB55C,GAAMx2C,KAAA6tF,YAAApqB,EAAA,IAAAzjE,KAAAswF,UACvBpvF,EAAAowE,EAAA,GAAA7N,EAAA,GAAA2sB,EAAA,GAAA58D,EACApyB,EAAAkwE,EAAA,GAAA7N,EAAA,GAAA2sB,EAAA,GAAA58D,EAGA,OAASzB,GAAc7wB,EAAAE,EAFvBF,EAAAkvF,EAAA,GAAA58D,EACApyB,EAAAgvF,EAAA,GAAA58D,EACuBnC,IAcvBo+D,GAAQn7F,UAAAu8F,kCAAA,SAAAt3E,EAAAia,EAAA4yD,GACR,OAAApmF,KAAA8wF,gCACAv3E,EAAA,GAAAA,EAAA,GAAAia,GAAA,EAAA4yD,IAgBAqJ,GAAQn7F,UAAAw8F,gCAAA,SAAAhzE,EAAAE,EAAAwV,EAAAu9D,EAAA3K,GACR,IAAA14E,EAAA1N,KAAAqoE,kBAAA70C,GACA7D,EAAA6D,EAAAxzB,KAAA2sC,cAAAj/B,GACA4jE,EAAAtxE,KAAAm9D,UAAAzvD,GACA0iF,EAAiB55C,GAAMx2C,KAAA6tF,YAAAngF,GAAA1N,KAAAswF,UAEvBU,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAhxF,KAAA4N,OAAAgQ,EAAAwzD,EAAA,IAAA99C,EAAAw9D,GACAG,EAAAjxF,KAAA4N,OAAAkQ,EAAAszD,EAAA,IAAA99C,EAAAy9D,GACAG,EAAAzhE,EAAAuhE,EAAAd,EAAA,GACAiB,EAAA1hE,EAAAwhE,EAAAf,EAAA,GAUA,OARAW,GACAK,EAAAlxF,KAAAG,KAAA+wF,GAAA,EACAC,EAAAnxF,KAAAG,KAAAgxF,GAAA,IAEAD,EAAAlxF,KAAA4N,MAAAsjF,GACAC,EAAAnxF,KAAA4N,MAAAujF,IAGSlL,GAAuBz4E,EAAA0jF,EAAAC,EAAAjL,IAkBhCqJ,GAAQn7F,UAAAs8F,uBAAA,SAAA9yE,EAAAE,EAAAtQ,EAAAqjF,EAAA3K,GACR,IAAA9U,EAAAtxE,KAAAm9D,UAAAzvD,GACA8lB,EAAAxzB,KAAA2sC,cAAAj/B,GACA0iF,EAAiB55C,GAAMx2C,KAAA6tF,YAAAngF,GAAA1N,KAAAswF,UAEvBU,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAhxF,KAAA4N,OAAAgQ,EAAAwzD,EAAA,IAAA99C,EAAAw9D,GACAG,EAAAjxF,KAAA4N,OAAAkQ,EAAAszD,EAAA,IAAA99C,EAAAy9D,GACAG,EAAAF,EAAAd,EAAA,GACAiB,EAAAF,EAAAf,EAAA,GAUA,OARAW,GACAK,EAAAlxF,KAAAG,KAAA+wF,GAAA,EACAC,EAAAnxF,KAAAG,KAAAgxF,GAAA,IAEAD,EAAAlxF,KAAA4N,MAAAsjF,GACAC,EAAAnxF,KAAA4N,MAAAujF,IAGSlL,GAAuBz4E,EAAA0jF,EAAAC,EAAAjL,IAWhCqJ,GAAQn7F,UAAAg9F,yBAAA,SAAA/3E,EAAA7L,EAAA04E,GACR,OAAApmF,KAAA4wF,uBACAr3E,EAAA,GAAAA,EAAA,GAAA7L,GAAA,EAAA04E,IAOAqJ,GAAQn7F,UAAAi9F,uBAAA,SAAA9tB,GACR,OAAAzjE,KAAA+rC,aAAA03B,EAAA,KAWAgsB,GAAQn7F,UAAAu5F,YAAA,SAAAngF,GACR,OAAA1N,KAAAmwF,UACAnwF,KAAAmwF,UAEAnwF,KAAAiwF,WAAAviF,IAQA+hF,GAAQn7F,UAAAg6F,iBAAA,SAAA5gF,GACR,OAAA1N,KAAAqwF,gBAGArwF,KAAAqwF,gBAAA3iF,GAFA,MAcA+hF,GAAQn7F,UAAA+zE,kBAAA,SAAA70C,EAAA6b,GAER,OAASthB,GADCpL,GAAiB3iB,KAAA+rC,aAAAvY,EAAA6b,GAAA,GACbrvC,KAAA8qC,QAAA9qC,KAAA+qC,UAOd0kD,GAAQn7F,UAAAk8F,qBAAA,SAAAv/D,GAGR,IAFA,IAAAh5B,EAAA+H,KAAA+rC,aAAA9zC,OACAu5F,EAAA,IAAAr7E,MAAAle,GACAyV,EAAA1N,KAAA8qC,QAA4Bp9B,EAAAzV,IAAYyV,EACxC8jF,EAAA9jF,GAAA1N,KAAAwkE,0BAAAvzC,EAAAvjB,GAEA1N,KAAAqwF,gBAAAmB,GAIe,IAAAC,GAAA,GClhBR,SAAAC,GAAApjF,GACP,IAAAqqB,EAAArqB,EAAAmqB,qBAKA,OAJAE,IACAA,EAiIO,SAAArqB,EAAAqjF,EAAAC,EAAAC,GAEP,OA9FO,SAAA5gE,EAAA0gE,EAAAC,EAAAC,GACP,IAAAv+D,OAAAv7B,IAAA85F,IAAuD1hE,GAAMG,SAE7D2a,EAAA6mD,GAAA7gE,EAAA0gE,EAAAC,GAEA,WAAaH,GAAQ,CACrBxgE,SACAqgD,OAAYj+C,GAASpC,EAAAqC,GACrB2X,cACAmlD,SAAAwB,IAqFAG,CADAC,GAAA1jF,GACAqjF,EAAAC,EAAAC,GAnIAI,CAAA3jF,GACAA,EAAAoqB,mBAAAC,IAEAA,EAgGA,SAAAm5D,GAAA7gE,EAAA0gE,EAAAC,GAcA,IAbA,IAAA7mD,OAAAhzC,IAAA45F,EACAA,EAAkB9jE,GAElB7rB,EAAemxB,GAASlC,GACxB9O,EAAc+Q,GAAQjC,GAEtBm/D,EAAiB55C,QAAMz+C,IAAA65F,EACvBA,EAAmB9jE,IACnB8c,EAAA1qC,KAAAC,IACAgiB,EAAAiuE,EAAA,GAAApuF,EAAAouF,EAAA,IAEAn4F,EAAA8yC,EAAA,EACAE,EAAA,IAAA90B,MAAAle,GACAyV,EAAA,EAAiBA,EAAAzV,IAAYyV,EAC7Bu9B,EAAAv9B,GAAAk9B,EAAA1qC,KAAAiE,IAAA,EAAAuJ,GAEA,OAAAu9B,EAyBO,SAAA+mD,GAAA1jF,GAEP,IAAA2iB,GADA3iB,EAAemtB,GAAantB,IAC5B4pB,YACA,IAAAjH,EAAA,CACA,IAAAihE,EAAA,IAAqBp7D,GAAgBC,GAAKP,SAAAloB,EAAA8pB,mBAC1CnH,EAAac,IAAcmgE,UAE3B,OAAAjhE,ECnIA,IAAIkhE,GAAU,SAAAnD,GACd,SAAAoD,EAAA92F,GAEA0zF,EAAAx6F,KAAAwL,KAAA,CACA4iD,aAAAtnD,EAAAsnD,aACAusC,wBAAA7zF,EAAA6zF,wBACA7gF,WAAAhT,EAAAgT,WACA+e,MAAA/xB,EAAA+xB,MACAgiE,MAAA/zF,EAAA+zF,QAOArvF,KAAAqyF,aAAAt6F,IAAAuD,EAAAg3F,QAAAh3F,EAAAg3F,OAMAtyF,KAAAuyF,qBAAAx6F,IAAAuD,EAAAktE,eACAltE,EAAAktE,eAAA,EAMAxoE,KAAA24B,cAAA5gC,IAAAuD,EAAAq9B,SAAAr9B,EAAAq9B,SAAA,KAMA34B,KAAAwyF,UAAA,IAAyBjM,GAASjrF,EAAAm5D,WAMlCz0D,KAAAyyF,QAAA,MAMAzyF,KAAAixD,KAAA31D,EAAA+D,KAAA,GAMAW,KAAA0yF,YAAA,CAAwBvoB,WAAA7uE,EAAA6uE,YA2NxB,OAvNA6kB,IAAAoD,EAAApiF,UAAAg/E,GACAoD,EAAA99F,UAAAD,OAAA+K,OAAA4vF,KAAA16F,WACA89F,EAAA99F,UAAA2b,YAAAmiF,EAKAA,EAAA99F,UAAAu8D,eAAA,WACA,OAAA7wD,KAAAwyF,UAAA3hC,kBAOAuhC,EAAA99F,UAAA2vE,YAAA,SAAA31D,EAAAwwC,GACA,IAAA0zC,EAAAxyF,KAAA2yF,0BAAArkF,GACAkkF,GACAA,EAAAvuB,YAAAnlB,IAaAszC,EAAA99F,UAAAkvE,kBAAA,SAAAl1D,EAAAZ,EAAA61D,EAAAzrE,GACA,IAAA06F,EAAAxyF,KAAA2yF,0BAAArkF,GACA,IAAAkkF,EACA,SAKA,IAFA,IACAplE,EAAAy8C,EAAA+oB,EADAzpB,GAAA,EAEArrD,EAAAylD,EAAAriE,KAAgC4c,GAAAylD,EAAAliE,OAAqByc,EACrD,QAAAE,EAAAulD,EAAAniE,KAAkC4c,GAAAulD,EAAAjiE,OAAqB0c,EACvD6rD,EAAuBwc,GAAS34E,EAAAoQ,EAAAE,GAChC40E,GAAA,EACAJ,EAAA1hC,YAAA+Y,KAEA+oB,GADAxlE,EAA0DolE,EAAAj8F,IAAAszE,IAC1Dv8C,aAAuCrD,GAASG,UAEhDwoE,GAAA,IAAA96F,EAAAs1B,IAGAwlE,IACAzpB,GAAA,GAIA,OAAAA,GAOAipB,EAAA99F,UAAAw1E,uBAAA,SAAAx7D,GACA,UAQA8jF,EAAA99F,UAAAu4B,OAAA,WACA,OAAA7sB,KAAAixD,MAQAmhC,EAAA99F,UAAAu+F,OAAA,SAAAxzF,GACAW,KAAAixD,OAAA5xD,IACAW,KAAAixD,KAAA5xD,EACAW,KAAAgW,YAQAo8E,EAAA99F,UAAA+1E,UAAA,SAAA/7D,GACA,OAAAtO,KAAAqyF,SAMAD,EAAA99F,UAAA67C,eAAA,WACA,OAAAnwC,KAAA24B,SAAAwX,kBAYAiiD,EAAA99F,UAAAmwE,QAAA,SAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GACA,OAAWgB,KAQX8iF,EAAA99F,UAAAktF,YAAA,WACA,OAAAxhF,KAAA24B,UAOAy5D,EAAA99F,UAAA8zE,yBAAA,SAAA95D,GACA,OAAAtO,KAAA24B,SAGA34B,KAAA24B,SAFa+4D,GAAwBpjF,IAWrC8jF,EAAA99F,UAAAq+F,0BAAA,SAAArkF,GACA,IAAAwkF,EAAA9yF,KAAAkwC,gBACA,OAAA4iD,IAAqBz2D,GAAUy2D,EAAAxkF,GAC/B,KAEAtO,KAAAwyF,WAWAJ,EAAA99F,UAAAm0E,kBAAA,SAAA/3B,GACA,OAAA1wC,KAAAuyF,iBASAH,EAAA99F,UAAAg1E,iBAAA,SAAA57D,EAAAgjC,EAAApiC,GACA,IlFvNqBmlB,EAAAs/D,EAAArjD,EkFuNrB/W,EAAA34B,KAAAooE,yBAAA95D,GACAk6D,EAAAxoE,KAAAyoE,kBAAA/3B,GACA0/C,EAAmB55C,GAAM7d,EAAAk1D,YAAAngF,GAAA1N,KAAAyyF,SACzB,UAAAjqB,EACA4nB,GlF3NqB38D,EkF6NC28D,ElF7ND2C,EkF6NCvqB,OlF5NtBzwE,KADqB23C,EkF6NC1vC,KAAAyyF,WlF3NtB/iD,EAAA,OAEAA,EAAA,GAAAjc,EAAA,GAAAs/D,EAAA,KACArjD,EAAA,GAAAjc,EAAA,GAAAs/D,EAAA,KACArjD,IkFoOA0iD,EAAA99F,UAAA0+F,+BAAA,SAAAvvB,EAAAwvB,GACA,IAAA3kF,OAAAvW,IAAAk7F,EACAA,EAAAjzF,KAAAkwC,gBACAvX,EAAA34B,KAAAooE,yBAAA95D,GAIA,OAHAtO,KAAA+hE,YAAAzzD,EAAAiqB,aACAkrC,ED5PO,SAAA9qC,EAAA8qC,EAAAn1D,GACP,IAAAZ,EAAA+1D,EAAA,GACAp1D,EAAAsqB,EAAA+rC,mBAAAjB,GACA5B,EAAAmwB,GAAA1jF,GACA,GAAOkjB,GAAkBqwC,EAAAxzD,GAMzB,OAAAo1D,EALA,IAAA3B,EAAqB5uC,GAAQ2uC,GAC7BqxB,EAAAhzF,KAAAG,MAAAwhE,EAAA,GAAAxzD,EAAA,IAAAyzD,GAEA,OADAzzD,EAAA,IAAAyzD,EAAAoxB,EACAv6D,EAAA24D,yBAAAjjF,EAAAX,GCoPkB2hF,CAAK12D,EAAA8qC,EAAAn1D,ITvLhB,SAAAm1D,EAAA9qC,GACP,IAAAjrB,EAAA+1D,EAAA,GACA3lD,EAAA2lD,EAAA,GACAzlD,EAAAylD,EAAA,GAEA,GAAA9qC,EAAAqX,aAAAtiC,KAAAirB,EAAAkX,aACA,SAEA,IACA0zB,EADAtyC,EAAA0H,EAAAT,YAOA,QAFAqrC,EAHAtyC,EAGA0H,EAAA6rC,0BAAAvzC,EAAAvjB,GAFAirB,EAAA21D,iBAAA5gF,KAOA61D,EAAApiC,WAAArjB,EAAAE,GSuKWm1E,CAAgB1vB,EAAA9qC,GAAA8qC,EAAA,MAM3B2uB,EAAA99F,UAAAg7F,QAAA,WACAtvF,KAAAwyF,UAAAjyF,QACAP,KAAAgW,WAWAo8E,EAAA99F,UAAAqwE,QAAA,SAAAj3D,EAAAoQ,EAAAE,EAAA1P,KAEA8jF,EA/Qc,CAgRZrD,IAQKqE,GAAA,SAAAlgF,GACP,SAAAkgF,EAAAj3F,EAAAixB,GAEAla,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAotB,OAQA,OAJAla,IAAAkgF,EAAApjF,UAAAkD,GACAkgF,EAAA9+F,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACA8+F,EAAA9+F,UAAA2b,YAAAmjF,EAEAA,EAlBO,CAmBL9/E,GCzUa+/E,GAOf,gBAPeA,GAef,cAfeA,GAsBf,gBCmXA,SAAAC,GAAAC,EAAAx4F,GAC+Cw4F,EAAAlkC,WAAAt0D,MAGhC,IC1SAy4F,GAzCR,SAAAC,GACP,SAAAn+D,EAAAzd,GACA,IAAAvc,EAAAuc,GAAA,GACAvJ,OAAAvW,IAAAuD,EAAAgT,WACAhT,EAAAgT,WAAA,YAEAqqB,OAAA5gC,IAAAuD,EAAAq9B,SAAAr9B,EAAAq9B,SJkBO,SAAA9gB,GAEP,IAAA67E,EAAA77E,GAAA,GAEAoZ,EAAAyiE,EAAAziE,QAAoCwK,GAAa,aAAAvD,YAGjDy7D,EAAA,CACA1iE,SACA6Z,QAAA4oD,EAAA5oD,QACAslD,SAAAsD,EAAAtD,SACAnlD,YAAA6mD,GACA7gE,EACAyiE,EAAA3oD,QACA2oD,EAAAtD,WAGA,WAAaqB,GAAQkC,GIlCfC,CAAS,CACf3iE,OAAgB+gE,GAAoB1jF,GACpCy8B,QAAAzvC,EAAAyvC,QACAD,QAAAxvC,EAAAwvC,QACAslD,SAAA90F,EAAA80F,WAGAqD,EAAAj/F,KAAAwL,KAAA,CACA4iD,aAAAtnD,EAAAsnD,aACA6R,UAAAn5D,EAAAm5D,UACA1lD,YAAAzT,EAAAyT,YACAujF,OAAAh3F,EAAAg3F,OACAhkF,aACAulF,2BAAAv4F,EAAAu4F,2BACAl7D,WACA8sD,iBAAAnqF,EAAAmqF,iBACAjd,eAAAltE,EAAAktE,eACAsrB,gBAAAx4F,EAAAw4F,gBACA7lF,IAAA3S,EAAA2S,IACA8lF,KAAAz4F,EAAAy4F,KACA1E,WAAAt3F,IAAAuD,EAAA+zF,OAAA/zF,EAAA+zF,MACAllB,WAAA7uE,EAAA6uE,WACAglB,wBAAA7zF,EAAA6zF,0BASA,OAJAsE,IAAAn+D,EAAAtlB,UAAAyjF,GACAn+D,EAAAhhC,UAAAD,OAAA+K,OAAAq0F,KAAAn/F,WACAghC,EAAAhhC,UAAA2b,YAAAqlB,EAEAA,EAtCO,CDAM,SAAA0+D,GACb,SAAAP,EAAAn4F,GAEA04F,EAAAx/F,KAAAwL,KAAA,CACA4iD,aAAAtnD,EAAAsnD,aACA6R,UAAAn5D,EAAAm5D,UACA69B,OAAAh3F,EAAAg3F,OACAhkF,WAAAhT,EAAAgT,WACA+e,MAAA/xB,EAAA+xB,MACAsL,SAAAr9B,EAAAq9B,SACA8sD,iBAAAnqF,EAAAmqF,iBACAnqF,EAAAmqF,iBAAA6N,GACA9qB,eAAAltE,EAAAktE,eACAsrB,gBAAAx4F,EAAAw4F,gBACA7lF,IAAA3S,EAAA2S,IACA8lF,KAAAz4F,EAAAy4F,KACA1E,MAAA/zF,EAAA+zF,MACAllB,WAAA7uE,EAAA6uE,WACA9qE,IAAA/D,EAAA+D,IACA8vF,wBAAA7zF,EAAA6zF,0BAOAnvF,KAAA+O,iBACAhX,IAAAuD,EAAAyT,YAAAzT,EAAAyT,YAAA,KAMA/O,KAAAi0F,eAAAl8F,IAAAuD,EAAA24F,UACA34F,EAAA24F,UAA0B1O,GAM1BvlF,KAAAk0F,uBAAA,GAMAl0F,KAAAm0F,sBAAA,GAMAn0F,KAAAo0F,4BAAA94F,EAAAu4F,2BAMA7zF,KAAAq0F,0BAAA,EA6QA,OA1QAL,IAAAP,EAAAzjF,UAAAgkF,GACAP,EAAAn/F,UAAAD,OAAA+K,OAAA40F,KAAA1/F,WACAm/F,EAAAn/F,UAAA2b,YAAAwjF,EAKAA,EAAAn/F,UAAAu8D,eAAA,WAIA,GAAA7wD,KAAAwyF,UAAA3hC,iBACA,SAEA,QAAAxxD,KAAAW,KAAAk0F,uBACA,GAAAl0F,KAAAk0F,uBAAA70F,GAAAwxD,iBACA,SAIA,UAMA4iC,EAAAn/F,UAAA2vE,YAAA,SAAA31D,EAAAwwC,GAKA,IAAAw1C,EAAAt0F,KAAA2yF,0BAAArkF,GAGA,QAAAhV,KADA0G,KAAAwyF,UAAAvuB,YAAAjkE,KAAAwyF,WAAA8B,EAAAx1C,EAAA,IACA9+C,KAAAk0F,uBAAA,CACA,IAAA1B,EAAAxyF,KAAAk0F,uBAAA56F,GACAk5F,EAAAvuB,YAAAuuB,GAAA8B,EAAAx1C,EAAA,MAOA20C,EAAAn/F,UAAAw1E,uBAAA,SAAAx7D,GACA,OACAtO,KAAAkwC,iBAAA5hC,IAA+C+tB,GAAUr8B,KAAAkwC,gBAAA5hC,GACzD,EAEAtO,KAAAu0F,aAOAd,EAAAn/F,UAAAigG,UAAA,WACA,UAMAd,EAAAn/F,UAAA+1E,UAAA,SAAA/7D,GACA,QACAtO,KAAAkwC,iBAAA5hC,IAA+C+tB,GAAUr8B,KAAAkwC,gBAAA5hC,KAGzD0lF,EAAA1/F,UAAA+1E,UAAA71E,KAAAwL,KAAAsO,IAOAmlF,EAAAn/F,UAAA8zE,yBAAA,SAAA95D,GAIA,IAAAwkF,EAAA9yF,KAAAkwC,gBACA,IAAAlwC,KAAA24B,UAAAm6D,IAAuCz2D,GAAUy2D,EAAAxkF,GAE5C,CACL,IAAAkmF,EAAoBhlF,EAAMlB,GAI1B,OAHAkmF,KAAAx0F,KAAAm0F,wBACAn0F,KAAAm0F,sBAAAK,GAA8C9C,GAAwBpjF,IAGRtO,KAAAm0F,sBAAAK,GAP9D,OAAAx0F,KAAA24B,UAeA86D,EAAAn/F,UAAAq+F,0BAAA,SAAArkF,GAIA,IAAAwkF,EAAA9yF,KAAAkwC,gBAAwC,IAAA4iD,GAAkBz2D,GAAUy2D,EAAAxkF,GACpE,OAAAtO,KAAAwyF,UAEA,IAAAgC,EAAoBhlF,EAAMlB,GAI1B,OAHAkmF,KAAAx0F,KAAAk0F,yBACAl0F,KAAAk0F,uBAAAM,GAAA,IAAmDjO,GAASvmF,KAAAwyF,UAAAhiC,gBAE5DxwD,KAAAk0F,uBAAAM,IAcAf,EAAAn/F,UAAAmgG,YAAA,SAAA/mF,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,EAAAjP,GACA,IAAAokE,EAAA,CAAA/1D,EAAAoQ,EAAAE,GACA02E,EAAA10F,KAAAgzF,+BACAvvB,EAAAn1D,GACAqmF,EAAAD,EACA10F,KAAA8zF,gBAAAY,EAAAhkD,EAAApiC,QAAAvW,EACAq1B,EAAA,IAAAptB,KAAAi0F,UACAxwB,OACA1rE,IAAA48F,EAA8B1qE,GAASC,KAAQD,GAASI,WACxDtyB,IAAA48F,IAAA,GACA30F,KAAA+O,YACA/O,KAAAylF,iBACAzlF,KAAA0yF,aAIA,OAHAtlE,EAAA/tB,MACI6S,EAAMkb,EAAOhZ,EAASC,OAC1BrU,KAAAktB,iBAAAltB,MACAotB,GAMAqmE,EAAAn/F,UAAAmwE,QAAA,SAAA/2D,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GACA,IAAAmuB,EAA+Ez8B,KAAAkwC,gBAC/E,GACAzT,GAAAnuB,IAA4C+tB,GAAUI,EAAAnuB,GAEjD,CACL,IAEA8e,EAFAmyB,EAAAv/C,KAAA2yF,0BAAArkF,GACAm1D,EAAA,CAAA/1D,EAAAoQ,EAAAE,GAEA6rD,EAAyByc,GAAM7iB,GAC/BlkB,EAAAuR,YAAA+Y,KACAz8C,EAAwDmyB,EAAAhpD,IAAAszE,IAExD,IAAAxqE,EAAAW,KAAA6sB,SACA,GAAAO,KAAA/tB,OACA,OAAA+tB,EAEA,IAAAm0D,EAAAvhF,KAAAooE,yBAAA3rC,GACA2vD,EAAApsF,KAAAooE,yBAAA95D,GACA20E,EACAjjF,KAAAgzF,+BAAAvvB,EAAAn1D,GACAsmF,EAAA,IAA0B1I,GAC1BzvD,EAAA8kD,EACAjzE,EAAA89E,EACA3oB,EAAAwf,EAAAjjF,KAAAyoE,kBAAA/3B,GACA1wC,KAAAu0F,YACA,SAAA7mF,EAAAoQ,EAAAE,EAAA0yB,GACA,OAAA1wC,KAAA60F,gBAAAnnF,EAAAoQ,EAAAE,EAAA0yB,EAAAjU,IACWn9B,KAAAU,WAAAo0F,4BACXp0F,KAAAq0F,0BAUA,OATAO,EAAAv1F,MAEA+tB,GACAwnE,EAAA5P,YAAA53D,EACAwnE,EAAAzP,sBACA5lC,EAAAzyC,QAAA+8D,EAAA+qB,IAEAr1C,EAAA/oD,IAAAqzE,EAAA+qB,GAEAA,EAnCA,OAAA50F,KAAA60F,gBAAAnnF,EAAAoQ,EAAAE,EAAA0yB,EAAAjU,GAAAnuB,IAiDAmlF,EAAAn/F,UAAAugG,gBAAA,SAAAnnF,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,GACA,IAAA8e,EAAA,KACAy8C,EAAuBwc,GAAS34E,EAAAoQ,EAAAE,GAChC3e,EAAAW,KAAA6sB,SACA,GAAA7sB,KAAAwyF,UAAA1hC,YAAA+Y,IAKA,IADAz8C,EAAAptB,KAAAwyF,UAAAj8F,IAAAszE,IACAxqE,OAAA,CAIA,IAAA2lF,EAAA53D,EACAA,EAAAptB,KAAAy0F,YAAA/mF,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,EAAAjP,GAGA2lF,EAAA13D,YAAsCrD,GAASC,KAE/CkD,EAAA43D,0BAEA53D,EAAA43D,cAEA53D,EAAA+3D,sBACAnlF,KAAAwyF,UAAA1lF,QAAA+8D,EAAAz8C,SAnBAA,EAAAptB,KAAAy0F,YAAA/mF,EAAAoQ,EAAAE,EAAA0yB,EAAApiC,EAAAjP,GACAW,KAAAwyF,UAAAh8F,IAAAqzE,EAAAz8C,GAqBA,OAAAA,GAQAqmE,EAAAn/F,UAAAwgG,2BAAA,SAAAl3C,GACA,GACA59C,KAAAq0F,0BAAAz2C,EADA,CAKA,QAAAtkD,KADA0G,KAAAq0F,yBAAAz2C,EACA59C,KAAAk0F,uBACAl0F,KAAAk0F,uBAAA56F,GAAAiH,QAEAP,KAAAgW,YAeAy9E,EAAAn/F,UAAAygG,yBAAA,SAAAzmF,EAAA0mF,GAEA,IAAAC,EAAiBx5D,GAAantB,GAC9B,GAAA2mF,EAAA,CACA,IAAAT,EAAsBhlF,EAAMylF,GAC5BT,KAAAx0F,KAAAm0F,wBACAn0F,KAAAm0F,sBAAAK,GAAAQ,KAMAvB,EAvUa,CE7BF,SAAArB,GACX,SAAA4B,EAAA14F,GAEA82F,EAAA59F,KAAAwL,KAAA,CACA4iD,aAAAtnD,EAAAsnD,aACA6R,UAAAn5D,EAAAm5D,UACA69B,OAAAh3F,EAAAg3F,OACAhkF,WAAAhT,EAAAgT,WACA+e,MAAA/xB,EAAA+xB,MACAsL,SAAAr9B,EAAAq9B,SACA6vC,eAAAltE,EAAAktE,eACA6mB,MAAA/zF,EAAA+zF,MACAllB,WAAA7uE,EAAA6uE,WACA9qE,IAAA/D,EAAA+D,IACA8vF,wBAAA7zF,EAAA6zF,0BAOAnvF,KAAAk1F,0BAAA55F,EAAAw4F,gBAMA9zF,KAAAylF,iBAAAnqF,EAAAmqF,iBAMAzlF,KAAA8zF,gBAAAx4F,EAAAw4F,gBAAAx4F,EAAAw4F,gBAAAx0F,KAAAU,MAA0F4uF,GAM1F5uF,KAAA+zF,KAAA,KAEAz4F,EAAAy4F,KACA/zF,KAAAm1F,QAAA75F,EAAAy4F,MACKz4F,EAAA2S,KACLjO,KAAAo1F,OAAA95F,EAAA2S,KAGA3S,EAAAw4F,iBACA9zF,KAAAq1F,mBAAA/5F,EAAAw4F,gBAAA9zF,KAAAixD,MAOAjxD,KAAAs1F,iBAAA,GA2HA,OAvHAlD,IAAA4B,EAAAhkF,UAAAoiF,GACA4B,EAAA1/F,UAAAD,OAAA+K,OAAAgzF,KAAA99F,WACA0/F,EAAA1/F,UAAA2b,YAAA+jF,EAOAA,EAAA1/F,UAAAihG,oBAAA,WACA,OAAAv1F,KAAAylF,kBAQAuO,EAAA1/F,UAAAkhG,mBAAA,WACA,OAAAx1F,KAAA8zF,iBAUAE,EAAA1/F,UAAAmhG,QAAA,WACA,OAAAz1F,KAAA+zF,MAQAC,EAAA1/F,UAAA44B,iBAAA,SAAApZ,GACA,IAGA3X,EAHAixB,EAAuDtZ,EAAA,OACvDg1D,EAAct5D,EAAM4d,GACpBy6C,EAAAz6C,EAAAE,WAEAu6C,GAAqB59C,GAASE,SAC9BnqB,KAAAs1F,iBAAAxsB,IAAA,EACA3sE,EAAak3F,IACRvqB,KAAA9oE,KAAAs1F,0BACLt1F,KAAAs1F,iBAAAxsB,GACA3sE,EAAA0rE,GAA0B59C,GAASpV,MAASw+E,GAC5CxrB,GAAsB59C,GAASG,QAAAy9C,GAAwB59C,GAASK,MACtD+oE,QAAat7F,GAEvBA,MAAAoE,GACA6D,KAAA6T,cAAA,IAA6Bu/E,GAAej3F,EAAAixB,KAS5C4mE,EAAA1/F,UAAAohG,oBAAA,SAAAjQ,GACAzlF,KAAAwyF,UAAAjyF,QACAP,KAAAylF,mBACAzlF,KAAAgW,WASAg+E,EAAA1/F,UAAA+gG,mBAAA,SAAAvB,EAAAz0F,GACAW,KAAA8zF,kBACA9zF,KAAAwyF,UAAA/L,0BACA,IAAApnF,EACAW,KAAA6yF,OAAAxzF,GAEAW,KAAAgW,WASAg+E,EAAA1/F,UAAA8gG,OAAA,SAAAnnF,GACA,IAAA8lF,EAAA/zF,KAAA+zF,KR/EO,SAAA9lF,GACP,IAAA8lF,EAAA,GACA4B,EAAA,sBAAkCC,KAAA3nF,GAClC,GAAA0nF,EAAA,CAEA,IAEA/pC,EAFAiqC,EAAAF,EAAA,GAAA9pC,WAAA,GACAiqC,EAAAH,EAAA,GAAA9pC,WAAA,GAEA,IAAAD,EAAAiqC,EAAkCjqC,GAAAkqC,IAA0BlqC,EAC5DmoC,EAAAh+F,KAAAkY,EAAAnB,QAAA6oF,EAAA,GAAAjmF,OAAAqmF,aAAAnqC,KAEA,OAAAmoC,EAGA,GADA4B,IAAA,kBAAkCC,KAAA3nF,GAClC,CAGA,IADA,IAAA+nF,EAAA9mD,SAAAymD,EAAA,OACA39F,EAAAk3C,SAAAymD,EAAA,OAAwC39F,GAAAg+F,EAAWh+F,IACnD+7F,EAAAh+F,KAAAkY,EAAAnB,QAAA6oF,EAAA,GAAA39F,EAAAsO,aAEA,OAAAytF,EAGA,OADAA,EAAAh+F,KAAAkY,GACA8lF,EQwD2BkC,CAAShoF,GACpCjO,KAAAm1F,QAAApB,IAQAC,EAAA1/F,UAAA6gG,QAAA,SAAApB,GACA/zF,KAAA+zF,OACA,IAAA10F,EAAA00F,EAAA92F,KAAA,MACA+C,KAAAk1F,yBACAl1F,KAAAq1F,mBAA8B9G,GAAmBwF,EAAA/zF,KAAA24B,UAAAt5B,GAEjDW,KAAA6yF,OAAAxzF,IAOA20F,EAAA1/F,UAAAqwE,QAAA,SAAAj3D,EAAAoQ,EAAAE,GACA,IAAA6rD,EAAuBwc,GAAS34E,EAAAoQ,EAAAE,GAChChe,KAAAwyF,UAAA1hC,YAAA+Y,IACA7pE,KAAAwyF,UAAAj8F,IAAAszE,IAIAmqB,EAlLW,CJ8SI,gBKxUAkC,GAAA,CACf9lE,YAAA,cACA+lE,cAAA,gBACA9lE,aAAA,eACA+lE,YAAA,cACAC,cAAA,gBACAC,aAAA,eACAhmE,SAAA,WACAimE,WAAA,aACAhmE,UAAA,aCgDIimE,GAAQ,CACZC,QAAA,UACAC,IAAA,MACAC,OAAA,SACAC,SAAA,WACAC,YAAA,eAkgBeC,GA1eJ,SAAAlgF,GACX,SAAAmgF,EAAAz7F,GAEAsb,EAAApiB,KAAAwL,MAMAA,KAAA1E,UAMA0E,KAAA1G,GAAAgC,EAAAhC,GAMA0G,KAAAg3F,iBAAAj/F,IAAAuD,EAAA07F,aACA17F,EAAA07F,YAMAh3F,KAAAumD,eAAAxuD,IAAAuD,EAAAirD,WAAAjrD,EAAAirD,UAMAvmD,KAAAyX,QAAA7c,SAAAC,cAAA,OACAmF,KAAAyX,QAAA6gC,eAAAvgD,IAAAuD,EAAAg9C,UACAh9C,EAAAg9C,UAAA,wBAAoDwH,GACpD9/C,KAAAyX,QAAAvO,MAAA4oC,SAAA,WAMA9xC,KAAAi3F,aAAAl/F,IAAAuD,EAAA27F,SAAA37F,EAAA27F,QAMAj3F,KAAAk3F,iBAAA57F,EAAA47F,kBAA8E,GAM9El3F,KAAAm3F,mBAAAp/F,IAAAuD,EAAA67F,cACA77F,EAAA67F,cAAA,GAUAn3F,KAAAo3F,SAAA,CACAC,QAAA,GACAC,MAAA,GACAC,OAAA,GACAC,KAAA,GACA1jD,SAAA,GAOA9zC,KAAAy3F,yBAAA,KAEIvlF,EACJlS,KAAY0W,EAAmB8/E,GAAQC,SACvCz2F,KAAA03F,qBAAA13F,MAEIkS,EACJlS,KAAY0W,EAAmB8/E,GAAQE,KACvC12F,KAAA23F,iBAAA33F,MAEIkS,EACJlS,KAAY0W,EAAmB8/E,GAAQG,QACvC32F,KAAA43F,oBAAA53F,MAEIkS,EACJlS,KAAY0W,EAAmB8/E,GAAQI,UACvC52F,KAAA63F,sBAAA73F,MAEIkS,EACJlS,KAAY0W,EAAmB8/E,GAAQK,aACvC72F,KAAA83F,yBAAA93F,WAEAjI,IAAAuD,EAAAmc,SACAzX,KAAA+3F,WAAAz8F,EAAAmc,SAGAzX,KAAAg4F,eAAAjgG,IAAAuD,EAAA62B,OAAA72B,EAAA62B,OAAA,OAEAnyB,KAAAi4F,oBAAAlgG,IAAAuD,EAAA48F,YACoC58F,EAAA,YAC9B46F,GAAkB5lE,eAExBv4B,IAAAuD,EAAAw2C,UACA9xC,KAAAm4F,YAAA78F,EAAAw2C,UAuXA,OAlXAl7B,IAAAmgF,EAAA/mF,UAAA4G,GACAmgF,EAAAziG,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACAyiG,EAAAziG,UAAA2b,YAAA8mF,EAQAA,EAAAziG,UAAAqT,WAAA,WACA,OAA4C3H,KAAAzJ,IAAcigG,GAAQC,UAQlEM,EAAAziG,UAAA+lD,MAAA,WACA,OAAAr6C,KAAA1G,IAUAy9F,EAAAziG,UAAAsrD,OAAA,WACA,OAC+D5/C,KAAAzJ,IAAcigG,GAAQE,MAUrFK,EAAAziG,UAAA8jG,UAAA,WACA,OAAoCp4F,KAAAzJ,IAAcigG,GAAQG,SAU1DI,EAAAziG,UAAA+jG,YAAA,WACA,OACgEr4F,KAAAzJ,IAAcigG,GAAQI,WAWtFG,EAAAziG,UAAAgkG,eAAA,WACA,OACoCt4F,KAAAzJ,IAAcigG,GAAQK,cAO1DE,EAAAziG,UAAAojG,qBAAA,WACIxkD,GAAclzC,KAAAyX,SAClB,IAAAA,EAAAzX,KAAA2H,aACA8P,GACAzX,KAAAyX,QAAAxc,YAAAwc,IAOAs/E,EAAAziG,UAAAqjG,iBAAA,WACA33F,KAAAy3F,2BACMxkD,GAAUjzC,KAAAyX,SACVlF,EAAavS,KAAAy3F,0BACnBz3F,KAAAy3F,yBAAA,MAEA,IAAA17F,EAAAiE,KAAA4/C,SACA,GAAA7jD,EAAA,CACAiE,KAAAy3F,yBAAsCvlF,EAAMnW,EACpC2tB,GAAY1pB,KAAA49C,OAAA59C,MACpBA,KAAAu4F,sBACA,IAAA1wE,EAAA7nB,KAAAumD,UACAxqD,EAAA0gD,+BAAA1gD,EAAAygD,sBACAx8C,KAAAg3F,YACAnvE,EAAAte,aAAAvJ,KAAAyX,QAAAoQ,EAAA3b,WAAA,UAEA2b,EAAA5sB,YAAA+E,KAAAyX,WAQAs/E,EAAAziG,UAAAspD,OAAA,WACA59C,KAAAu4F,uBAMAxB,EAAAziG,UAAAsjG,oBAAA,WACA53F,KAAAu4F,uBAMAxB,EAAAziG,UAAAujG,sBAAA,WACA73F,KAAAu4F,sBACAv4F,KAAAzJ,IAAiBigG,GAAQI,WAAA52F,KAAAi3F,SACzBj3F,KAAAw4F,eAOAzB,EAAAziG,UAAAwjG,yBAAA,WACA93F,KAAAu4F,uBASAxB,EAAAziG,UAAAyjG,WAAA,SAAAtgF,GACAzX,KAAAxJ,IAAaggG,GAAQC,QAAAh/E,IAUrBs/E,EAAAziG,UAAA4lD,OAAA,SAAAn+C,GACAiE,KAAAxJ,IAAaggG,GAAQE,IAAA36F,IASrBg7F,EAAAziG,UAAA0jG,UAAA,SAAA7lE,GACAnyB,KAAAxJ,IAAaggG,GAAQG,OAAAxkE,IAWrB4kE,EAAAziG,UAAA6jG,YAAA,SAAArmD,GACA9xC,KAAAxJ,IAAaggG,GAAQI,SAAA9kD,IAQrBilD,EAAAziG,UAAAkkG,YAAA,WACA,IAAAz8F,EAAAiE,KAAA4/C,SAEA,GAAA7jD,KAAAigD,mBAAA,CAIA,IAAAy8C,EAAAz4F,KAAA04F,QAAA38F,EAAAigD,mBAAAjgD,EAAAugD,WACA7kC,EAAAzX,KAAA2H,aACAgxF,EAAA34F,KAAA04F,QAAAjhF,EAAA,CAA6C66B,GAAU76B,GAAWi7B,GAAWj7B,KAE7EzR,EAAAhG,KAAAm3F,cACA,IAASzlE,GAAc+mE,EAAAE,GAAA,CAEvB,IAAAC,EAAAD,EAAA,GAAAF,EAAA,GACAI,EAAAJ,EAAA,GAAAE,EAAA,GACAG,EAAAH,EAAA,GAAAF,EAAA,GACAM,EAAAN,EAAA,GAAAE,EAAA,GAEA5pE,EAAA,MAgBA,GAfA6pE,EAAA,EAEA7pE,EAAA,GAAA6pE,EAAA5yF,EACO6yF,EAAA,IAEP9pE,EAAA,GAAA7uB,KAAAie,IAAA06E,GAAA7yF,GAEA8yF,EAAA,EAEA/pE,EAAA,GAAA+pE,EAAA9yF,EACO+yF,EAAA,IAEPhqE,EAAA,GAAA7uB,KAAAie,IAAA46E,GAAA/yF,GAGA,IAAA+oB,EAAA,QAAAA,EAAA,IACA,IAAA1gB,EAAqEtS,EAAAwgD,UAAAvP,YACrEgsD,EAAAj9F,EAAAogD,uBAAA9tC,GACA4qF,EAAA,CACAD,EAAA,GAAAjqE,EAAA,GACAiqE,EAAA,GAAAjqE,EAAA,IAGAhzB,EAAAwgD,UAAArP,QAAA,CACA7+B,OAAAtS,EAAAyd,uBAAAy/E,GACAprD,SAAA7tC,KAAAk3F,iBAAArpD,SACAC,OAAA9tC,KAAAk3F,iBAAAppD,aAaAipD,EAAAziG,UAAAokG,QAAA,SAAAjhF,EAAAgc,GACA,IAAAk+C,EAAAl6D,EAAAmkC,wBACA6X,EAAAke,EAAAxvE,KAAApO,OAAAmlG,YACAxlC,EAAAie,EAAA71B,IAAA/nD,OAAAolG,YACA,OACA1lC,EACAC,EACAD,EAAAhgC,EAAA,GACAigC,EAAAjgC,EAAA,KAWAsjE,EAAAziG,UAAA2jG,eAAA,SAAAC,GACAl4F,KAAAxJ,IAAaggG,GAAQK,YAAAqB,IAQrBnB,EAAAziG,UAAAygD,WAAA,SAAAjB,GACA9zC,KAAAo3F,SAAAtjD,cACA9zC,KAAAyX,QAAAvO,MAAA65C,QAAAjP,EAAA,UACA9zC,KAAAo3F,SAAAtjD,YAQAijD,EAAAziG,UAAAikG,oBAAA,WACA,IAAAx8F,EAAAiE,KAAA4/C,SACA9N,EAAA9xC,KAAAq4F,cACA,GAAAt8F,KAAAkiD,cAAAnM,EAAA,CAKA,IAAAz4B,EAAAtd,EAAAogD,uBAAArK,GACAsnD,EAAAr9F,EAAAugD,UACAt8C,KAAAq5F,uBAAAhgF,EAAA+/E,QANAp5F,KAAA+0C,YAAA,IAcAgiD,EAAAziG,UAAA+kG,uBAAA,SAAAhgF,EAAA+/E,GACA,IAAAlwF,EAAAlJ,KAAAyX,QAAAvO,MACAipB,EAAAnyB,KAAAo4F,YAEAF,EAAAl4F,KAAAs4F,iBAEAt4F,KAAA+0C,YAAA,GAEA,IAAA0e,EAAAthC,EAAA,GACAuhC,EAAAvhC,EAAA,GACA,GAAA+lE,GAAuBhC,GAAkB7lE,cACzC6nE,GAAuBhC,GAAkBI,cACzC4B,GAAuBhC,GAAkB3lE,UAAA,CACzC,KAAAvwB,KAAAo3F,SAAAE,QACAt3F,KAAAo3F,SAAAE,MAAApuF,EAAA/G,KAAA,IAEA,IAAAC,EAAAlC,KAAAykC,MAAAy0D,EAAA,GAAA//E,EAAA,GAAAo6C,GAAA,KACAzzD,KAAAo3F,SAAAG,QAAAn1F,IACApC,KAAAo3F,SAAAG,OAAAruF,EAAA9G,aAEK,CACL,KAAApC,KAAAo3F,SAAAG,SACAv3F,KAAAo3F,SAAAG,OAAAruF,EAAA9G,MAAA,IAEA81F,GAAyBhC,GAAkBC,eAC3C+B,GAAyBhC,GAAkBG,eAC3C6B,GAAyBhC,GAAkBK,aAC3C9iC,GAAAzzD,KAAAyX,QAAA86B,YAAA,GAEA,IAAApwC,EAAAjC,KAAAykC,MAAAtrB,EAAA,GAAAo6C,GAAA,KACAzzD,KAAAo3F,SAAAE,OAAAn1F,IACAnC,KAAAo3F,SAAAE,MAAApuF,EAAA/G,QAGA,GAAA+1F,GAAuBhC,GAAkB9lE,aACzC8nE,GAAuBhC,GAAkBC,eACzC+B,GAAuBhC,GAAkB7lE,aAAA,CACzC,KAAArwB,KAAAo3F,SAAAI,OACAx3F,KAAAo3F,SAAAI,KAAAtuF,EAAA4yC,IAAA,IAEA,IAAA8xB,EAAA1tE,KAAAykC,MAAAy0D,EAAA,GAAA//E,EAAA,GAAAq6C,GAAA,KACA1zD,KAAAo3F,SAAAC,SAAAzpB,IACA5tE,KAAAo3F,SAAAC,QAAAnuF,EAAA0kE,cAEK,CACL,KAAA5tE,KAAAo3F,SAAAC,UACAr3F,KAAAo3F,SAAAC,QAAAnuF,EAAA0kE,OAAA,IAEAsqB,GAAyBhC,GAAkBE,aAC3C8B,GAAyBhC,GAAkBG,eAC3C6B,GAAyBhC,GAAkBI,eAC3C5iC,GAAA1zD,KAAAyX,QAAAk7B,aAAA,GAEA,IAAAmJ,EAAA57C,KAAAykC,MAAAtrB,EAAA,GAAAq6C,GAAA,KACA1zD,KAAAo3F,SAAAI,MAAA17C,IACA97C,KAAAo3F,SAAAI,KAAAtuF,EAAA4yC,SASAi7C,EAAAziG,UAAAglG,WAAA,WACA,OAAAt5F,KAAA1E,SAGAy7F,EAteW,CAueTpgF,GCLK,SAAS4iF,GAAMt4C,GACtBjhD,KAAAw5F,kBACAx5F,KAAAy5F,aAIe,IAAAC,GAvgBA,SAAAj6C,GACf,SAAAk6C,EAAA9hF,GAEA,IAAAvc,EAAAuc,GAAA,GAEA4nC,EAAAjrD,KAAAwL,KAAA,CACAyX,QAAA7c,SAAAC,cAAA,OACA+iD,OAAAtiD,EAAAsiD,QAAgC27C,GAChC3xF,OAAAtM,EAAAsM,SAOA5H,KAAAshD,gBAAAvpD,IAAAuD,EAAAimD,WAAAjmD,EAAAimD,UAMAvhD,KAAA0hD,kBAAA3pD,IAAAuD,EAAAmmD,aACAnmD,EAAAmmD,YAEAzhD,KAAA0hD,eACA1hD,KAAAshD,YAAA,GAGA,IAAAhJ,OAAAvgD,IAAAuD,EAAAg9C,UAAAh9C,EAAAg9C,UAAA,iBAEAqJ,OAAA5pD,IAAAuD,EAAAqmD,SAAArmD,EAAAqmD,SAAA,eAEAC,OAAA7pD,IAAAuD,EAAAsmD,cAAAtmD,EAAAsmD,cAAA,IAEA,iBAAAA,GAKA5hD,KAAA6hD,eAAAjnD,SAAAC,cAAA,QACAmF,KAAA6hD,eAAAC,YAAAF,GAEA5hD,KAAA6hD,eAAAD,EAGA,IAAAG,OAAAhqD,IAAAuD,EAAAymD,MAAAzmD,EAAAymD,MAAA,IAGA,iBAAAA,GAKA/hD,KAAAgiD,OAAApnD,SAAAC,cAAA,QACAmF,KAAAgiD,OAAAF,YAAAC,GAEA/hD,KAAAgiD,OAAAD,EAGA,IAAAE,EAAAjiD,KAAA0hD,eAAA1hD,KAAAshD,WACAthD,KAAA6hD,eAAA7hD,KAAAgiD,OACAnlC,EAAAjiB,SAAAC,cAAA,UACAgiB,EAAAzS,aAAA,iBACAyS,EAAAqlC,MAAAP,EACA9kC,EAAA5hB,YAAAgnD,GAEI/vC,EAAM2K,EAASzI,EAASI,MAC5BxU,KAAAmiD,aAAAniD,MAMAA,KAAA45F,UAAAh/F,SAAAC,cAAA,OACAmF,KAAA45F,UAAAthD,UAAA,qBAMAt4C,KAAA65F,OAAA,IAAsBzW,GAAG,CACzBtsC,SAAA,IAAoBp/B,EACpBq/B,aAAA,IAAwBr/B,EACxBgK,KAAApmB,EAAAomB,OAEA,IAAAo4E,EAAA95F,KAAA65F,OAEAv+F,EAAAm6C,QAC4Dn6C,EAAA,OAAAqC,QAI5D,SAAAu2C,GACA4lD,EAAAp/C,SAAAxG,IACS50C,KAAAU,OAGT,IAAA2xE,EAAA/2E,SAAAC,cAAA,OACA82E,EAAAr5B,UAAA,qBACAq5B,EAAAzoE,MAAA6wF,UAAA,aAMA/5F,KAAAg6F,YAAA,IAA2BlD,GAAO,CAClChlD,SAAA,MACAomD,YAAmBhC,GAAkB9lE,YACrC3Y,QAAAk6D,IAEA3xE,KAAA65F,OAAAj/C,WAAA56C,KAAAg6F,aAEA,IAAA53C,EAAA9J,EAAA,IAAuCyH,GAAkB,IAASC,IAClEhgD,KAAAshD,YAAAthD,KAAA0hD,aAAA,IAAsDzB,GAAe,KACrEjgD,KAAA0hD,aAAA,wBACAjqC,EAAAzX,KAAAyX,QACAA,EAAA6gC,UAAA8J,EACA3qC,EAAAxc,YAAA+E,KAAA45F,WACAniF,EAAAxc,YAAA4hB,GAIA,IAAAo9E,EAAAj6F,KAEA66C,EAAA76C,KAAAg6F,YACAE,EAAAl6F,KAAAg6F,YAAAryF,aAWAgV,EAAA,SAAA7I,GACA,IARAqmF,EAQAroD,EAPA,CACA/zB,SAFAo8E,EAQkCrmF,GANlCiK,QAAAm8E,EAAA3nD,YAAA,EACAt0B,QAAAk8E,EAAAl8E,QAAAi8E,EAAAvnD,aAAA,GAMA3hB,EAAA8oE,EAAAp+C,mBAAkE,GAElEb,EAAAs9C,YAAAnnE,IAGAopE,EAAA,SAAAtmF,GACA,IAAAkd,EAAA8oE,EAAAp+C,mBAAA5nC,GAEAmmF,EAAAr6C,SAAArD,UAAAjP,UAAAtc,GAEAj9B,OAAAge,oBAAA,YAAA4K,GACA5oB,OAAAge,oBAAA,UAAAqoF,IAKAF,EAAA7nF,iBAAA,uBACAte,OAAAse,iBAAA,YAAAsK,GACA5oB,OAAAse,iBAAA,UAAA+nF,KA2VA,OAvVA36C,IAAAk6C,EAAA3pF,UAAAyvC,GACAk6C,EAAArlG,UAAAD,OAAA+K,OAAAqgD,KAAAnrD,WACAqlG,EAAArlG,UAAA2b,YAAA0pF,EAMAA,EAAArlG,UAAA4lD,OAAA,SAAAn+C,GACA,IAAAs+F,EAAAr6F,KAAA4/C,SACA,GAAA7jD,IAAAs+F,EAAA,CAGA,GAAAA,EAAA,CACA,IAAAC,EAAAD,EAAA99C,UACA+9C,GACAt6F,KAAAu6F,YAAAD,GAEAt6F,KAAA65F,OAAA9+C,UAAA,MAIA,GAFA0E,EAAAnrD,UAAA4lD,OAAA1lD,KAAAwL,KAAAjE,GAEAA,EAAA,CACAiE,KAAA65F,OAAA9+C,UAAA/6C,KAAA45F,WACA55F,KAAA2/C,aAAA5pD,KAA6Bmc,EAC7BnW,EAAasU,EACbrQ,KAAAw6F,yBAAAx6F,OAGA,IAAAA,KAAA65F,OAAA9jD,YAAA59B,aACAnY,KAAA65F,OAAA76C,cAAAjjD,EAAA4+C,iBAGA,IAAAj5B,EAAA3lB,EAAAwgD,UACA76B,IACA1hB,KAAAy6F,UAAA/4E,GACAA,EAAA2rB,UACArtC,KAAA65F,OAAA/7C,aACA99C,KAAA06F,oBAWAf,EAAArlG,UAAAkmG,yBAAA,SAAA1mF,GACA,GAAAA,EAAAzU,MAAsBsqB,GAAWI,KAAA,CACjC,IAAAuwE,EAA4DxmF,EAAA,SAC5DwmF,GACAt6F,KAAAu6F,YAAAD,GAEA,IAAAK,EAAA36F,KAAA4/C,SAAArD,UACAv8C,KAAAy6F,UAAAE,KASAhB,EAAArlG,UAAAmmG,UAAA,SAAA/4E,GACIxP,EAAMwP,EACJhL,EAAmBwY,IACzBlvB,KAAA46F,uBAAA56F,OAQA25F,EAAArlG,UAAAimG,YAAA,SAAA74E,GACIhP,EAAQgP,EACNhL,EAAmBwY,IACzBlvB,KAAA46F,uBAAA56F,OASA25F,EAAArlG,UAAAsmG,uBAAA,WACA56F,KAAA65F,OAAAt9C,UAAA/O,YAAAxtC,KAAA4/C,SAAArD,UAAAtP,gBAcA0sD,EAAArlG,UAAAklG,gBAAA,WACA,IAAAz9F,EAAAiE,KAAA4/C,SACAk6C,EAAA95F,KAAA65F,OAEA,GAAA99F,EAAAkiD,cAAA67C,EAAA77C,aAAA,CAIA,IAAAm7C,EAAuDr9F,EAAAugD,UAGvDrrB,EADAl1B,EAAAwgD,UACA9M,gBAAA2pD,GAEAyB,EAAyDf,EAAAx9C,UAGzDw+C,EADAhB,EAAAv9C,UACA9M,gBAAAorD,GAEAE,EACAjB,EAAA39C,uBAAqCppB,GAAU9B,IAC/C+pE,EACAlB,EAAA39C,uBAAqCtpB,GAAc5B,IAEnDgqE,EAAA/6F,KAAAie,IAAA48E,EAAA,GAAAC,EAAA,IACAE,EAAAh7F,KAAAie,IAAA48E,EAAA,GAAAC,EAAA,IAEAG,EAAAN,EAAA,GACAO,EAAAP,EAAA,GAEAI,EAnUA,GAmUAE,GACAD,EApUA,GAoUAE,GACAH,EA7UA,IA6UAE,GACAD,EA9UA,IA8UAE,EACAp7F,KAAA06F,eACgBhpE,GAAcopE,EAAA7pE,IAC9BjxB,KAAAq7F,cASA1B,EAAArlG,UAAAomG,aAAA,WAKA,IAAA3+F,EAAAiE,KAAA4/C,SACAk6C,EAAA95F,KAAA65F,OAEAT,EAAuDr9F,EAAAugD,UAGvDrrB,EADAl1B,EAAAwgD,UACA9M,gBAAA2pD,GAEAkC,EAAAxB,EAAAv9C,UAKAg/C,EAAAr7F,KAAAgE,IACAs3F,KAAAt7F,KAAAu7F,IAEIlnE,GAAetD,EADnB,GAtWA,GAsWA/wB,KAAAiE,IAAA,EAAAo3F,EAAA,KAEAD,EAAAxqD,IAAA7f,IAQA0oE,EAAArlG,UAAA+mG,UAAA,WACA,IAAAt/F,EAAAiE,KAAA4/C,SACAk6C,EAAA95F,KAAA65F,OAEAn4E,EAAA3lB,EAAAwgD,UAEAu9C,EAAAv9C,UAEAjP,UAAA5rB,EAAAsrB,cAOA2sD,EAAArlG,UAAAmlG,WAAA,WACA,IAAA19F,EAAAiE,KAAA4/C,SACAk6C,EAAA95F,KAAA65F,OAEA,GAAA99F,EAAAkiD,cAAA67C,EAAA77C,aAAA,CAIA,IAAAm7C,EAAuDr9F,EAAAugD,UAEvD56B,EAAA3lB,EAAAwgD,UAEA++C,EAAAxB,EAAAv9C,UAEAztB,EAAApN,EAAAurB,cAEA4N,EAAA76C,KAAAg6F,YACAroB,EAAA3xE,KAAAg6F,YAAAryF,aACAspB,EAAAvP,EAAA+tB,gBAAA2pD,GACAsC,EAAAJ,EAAA3uD,gBACAm2B,EAAqBlwC,GAAa3B,GAClC2xC,EAAmB9vC,GAAW7B,GAG9B0qE,EAAA37F,KAAA47F,2BAAA9sE,EAAAg0C,GACAjoB,EAAAs9C,YAAAwD,GAGAhqB,IACAA,EAAAzoE,MAAAiZ,MAAAjiB,KAAAie,KAAA2kD,EAAA,GAAAF,EAAA,IAAA84B,GAAA,KACA/pB,EAAAzoE,MAAAlH,OAAA9B,KAAAie,KAAAykD,EAAA,GAAAE,EAAA,IAAA44B,GAAA,QAUA/B,EAAArlG,UAAAsnG,2BAAA,SAAA9sE,EAAAvV,GACA,IAAAsiF,EAKAjtD,EAHA5uC,KAAA4/C,SACArD,UAEAvP,YAUA,OARA4B,IAKMxf,GAJNysE,EAAA,CACAtiF,EAAA,GAAAq1B,EAAA,GACAr1B,EAAA,GAAAq1B,EAAA,IAEsB9f,GAChBK,GAAa0sE,EAAAjtD,IAEnBitD,GAOAlC,EAAArlG,UAAA6tD,aAAA,SAAAruC,GACAA,EAAAT,iBACArT,KAAAijD,iBAMA02C,EAAArlG,UAAA2uD,cAAA,WACAjjD,KAAAyX,QAAAyrC,UAAAC,OAAkClD,IAClCjgD,KAAAshD,WACMxO,GAAW9yC,KAAA6hD,eAAA7hD,KAAAgiD,QAEXlP,GAAW9yC,KAAAgiD,OAAAhiD,KAAA6hD,gBAEjB7hD,KAAAshD,YAAAthD,KAAAshD,WAIA,IAAAw4C,EAAA95F,KAAA65F,OACA75F,KAAAshD,YAAAw4C,EAAA77C,eACA67C,EAAAh8C,aACA99C,KAAA06F,eACMjoF,EAAUqnF,EAAQpwE,GACxB,SAAA5V,GACA9T,KAAAy5F,cAEAz5F,QASA25F,EAAArlG,UAAA8uD,eAAA,WACA,OAAApjD,KAAA0hD,cAQAi4C,EAAArlG,UAAAwuD,eAAA,SAAArB,GACAzhD,KAAA0hD,eAAAD,IAGAzhD,KAAA0hD,aAAAD,EACAzhD,KAAAyX,QAAAyrC,UAAAC,OAAA,qBACA1B,GAAAzhD,KAAAshD,YACAthD,KAAAijD,kBAWA02C,EAAArlG,UAAA+uD,aAAA,SAAA9B,GACAvhD,KAAA0hD,cAAA1hD,KAAAshD,aAAAC,GAGAvhD,KAAAijD,iBAQA02C,EAAArlG,UAAAgvD,aAAA,WACA,OAAAtjD,KAAAshD,YAQAq4C,EAAArlG,UAAAwnG,eAAA,WACA,OAAA97F,KAAA65F,QAGAF,EAvfe,CAwfbn6C,IC1iBF,IAAAu8C,GAAA,QAOWC,GAAK,CAChBxlE,QAAA,UACAylE,SAAA,WACAC,SAAA,WACAC,OAAA,SACAC,GAAA,MAQAC,GAAA,QA4PO,SAASC,GAAMr7C,GACtB,IAAAloC,EAAAkoC,EAAAloC,WAIA/Y,KAAAu8F,WAHAxjF,EAGAA,EAAAylC,UAFA,KAIAx+C,KAAAkhD,iBAIe,IAAAs7C,GA5OF,SAAA/8C,GACb,SAAAg9C,EAAA5kF,GAEA,IAAAvc,EAAAuc,GAAA,GAEAygC,OAAAvgD,IAAAuD,EAAAg9C,UAAAh9C,EAAAg9C,UAAA,gBAEAmH,EAAAjrD,KAAAwL,KAAA,CACAyX,QAAA7c,SAAAC,cAAA,OACA+iD,OAAAtiD,EAAAsiD,QAAgC0+C,GAChC10F,OAAAtM,EAAAsM,SAOA5H,KAAA08F,cAAA9hG,SAAAC,cAAA,OACAmF,KAAA08F,cAAApkD,YAAA,SAEAt4C,KAAAyX,QAAA6gC,YAAA,IAA+CyH,GAC/C//C,KAAAyX,QAAAxc,YAAA+E,KAAA08F,eAMA18F,KAAAu8F,WAAA,KAMAv8F,KAAA28F,eAAA5kG,IAAAuD,EAAAshG,SAAAthG,EAAAshG,SAAA,GAMA58F,KAAAsiD,kBAAA,EAMAtiD,KAAA68F,oBAAA9kG,EAMAiI,KAAA88F,cAAA,GAEI5qF,EACJlS,KAAY0W,EAAkBqlF,IAC9B/7F,KAAA+8F,oBAAA/8F,MAEAA,KAAAg9F,SAAmC1hG,EAAA,OAAuB0gG,GAAKG,QA8J/D,OA1JA18C,IAAAg9C,EAAAzsF,UAAAyvC,GACAg9C,EAAAnoG,UAAAD,OAAA+K,OAAAqgD,KAAAnrD,WACAmoG,EAAAnoG,UAAA2b,YAAAwsF,EASAA,EAAAnoG,UAAA6jC,SAAA,WACA,OAAAn4B,KAAAzJ,IAAAwlG,KAMAU,EAAAnoG,UAAAyoG,oBAAA,WACA/8F,KAAAkhD,kBASAu7C,EAAAnoG,UAAA0oG,SAAA,SAAAvjE,GACAz5B,KAAAxJ,IAAAulG,GAAAtiE,IAMAgjE,EAAAnoG,UAAA4sD,eAAA,WACA,IAAA1C,EAAAx+C,KAAAu8F,WAEA,GAAA/9C,EAAA,CAQA,IAAAnwC,EAAAmwC,EAAAnwC,OACAC,EAAAkwC,EAAAlwC,WACAmrB,EAAAz5B,KAAAm4B,WACA8kE,EAAAxjE,GAAwCuiE,GAAKxlE,QACvCO,GAASP,QACTO,GAASL,OACfkF,EACQhE,GAAkBtpB,EAAAkwC,EAAAhrB,WAAAnlB,EAAA4uF,GAC1B3uF,EAAA6pB,YAAiCpB,GAASP,SAAAloB,EAAA8pB,oBAC1C6kE,GAAiClmE,GAASL,SAC1CkF,GAAAttB,EAAA8pB,oBAGA,IAAA8kE,EAAAl9F,KAAA28F,UAAA/gE,EACAuhE,EAAA,GACA,GAAA1jE,GAAiBuiE,GAAKxlE,QAAA,CACtB,IAAA4mE,EAA4BtmE,GAAgBC,GAASP,SACrDloB,EAAA6pB,YAAmCpB,GAASP,QAC5C0mE,GAAAE,EAEAxhE,GAAAwhE,EAEAF,EAAAE,EAAA,IACAD,EAAA,IACAvhE,GAAA,MACOshE,EAAAE,GACPD,EAAA,IACAvhE,GAAA,IAEAuhE,EAAA,SAEK1jE,GAAmBuiE,GAAKC,SAC7BiB,EAAA,OACAC,EAAA,KACAvhE,GAAA,OACOshE,EAAA,UACPC,EAAA,KACAvhE,GAAA,QAEAuhE,EAAA,KACAvhE,GAAA,UAEKnC,GAAmBuiE,GAAKE,UAC7BtgE,GAAA,KACAuhE,EAAA,MACK1jE,GAAmBuiE,GAAKG,OAC7Be,EAAA,MACAC,EAAA,KACAvhE,GAAA,KACOshE,EAAA,GACPC,EAAA,KACAvhE,GAAA,KACOshE,EAAA,IACPC,EAAA,KAEAA,EAAA,KACAvhE,GAAA,KAEKnC,GAAmBuiE,GAAKI,GAC7Bc,EAAA,OACAC,EAAA,KACAvhE,GAAA,OACOshE,EAAA,UACPC,EAAA,KACAvhE,GAAA,YAEAuhE,EAAA,KACAvhE,GAAA,WAGMrR,IAAM,MAMZ,IAHA,IAEA3F,EAAAzC,EAFAnqB,EAAA,EAAAkI,KAAA4N,MACA5N,KAAAgE,IAAAlE,KAAA28F,UAAA/gE,GAAA17B,KAAAgE,IAAA,OAEA,CAIA,GAHA0gB,EAAAy3E,IAAArkG,EAAA,QACAkI,KAAAiE,IAAA,GAAAjE,KAAA4N,MAAA9V,EAAA,IACAmqB,EAAAjiB,KAAAykC,MAAA/f,EAAAgX,GACAqK,MAAA9jB,GAGA,OAFAniB,KAAAyX,QAAAvO,MAAA65C,QAAA,YACA/iD,KAAAsiD,kBAAA,GAEO,GAAAngC,GAAAniB,KAAA28F,UACP,QAEA3kG,EAGA,IAAAqlG,EAAAz4E,EAAA,IAAAu4E,EACAn9F,KAAA88F,eAAAO,IACAr9F,KAAA08F,cAAA15C,UAAAq6C,EACAr9F,KAAA88F,cAAAO,GAGAr9F,KAAA68F,gBAAA16E,IACAniB,KAAA08F,cAAAxzF,MAAAiZ,QAAA,KACAniB,KAAA68F,eAAA16E,GAGAniB,KAAAsiD,mBACAtiD,KAAAyX,QAAAvO,MAAA65C,QAAA,GACA/iD,KAAAsiD,kBAAA,QA9GAtiD,KAAAsiD,mBACAtiD,KAAAyX,QAAAvO,MAAA65C,QAAA,OACA/iD,KAAAsiD,kBAAA,IAiHAm6C,EAvNa,CAwNXj9C,UC7QF,MAAA89C,GAAA,CACAz9C,aAAA,cACAC,iBAAA,kBACAC,mBAAA,oBACAC,cAAA,gBAGAu9C,GAAA,CACAC,SAAA,EACAC,WAAA,GAIe,MAAMC,GACrBC,YAAA/uF,GACA5O,KAAA1E,QAAAsT,GAAA,GAEA5O,KAAA49F,wBAAA7lG,EAEAiI,KAAA69F,WAAAN,GAAAC,SAEAx9F,KAAAsoB,WAAA,EAEAtoB,KAAA89F,aAAA,EAEA99F,KAAA+9F,YAAA,EAEA/9F,KAAAg+F,WAAA,KAEAh+F,KAAAi+F,WAAA,KAEAj+F,KAAAk+F,WAAA,KAEAl+F,KAAAm+F,oBAAA,EAEAn+F,KAAAgkD,eAAAjsD,IAAAiI,KAAA1E,QAAA,SAAA0E,KAAA1E,QAAA,aAEA0E,KAAAo+F,SAAA,CACAC,UAAA,EACAC,YAAA,GAGAt+F,KAAAqrD,iBAAAtzD,IAAAiI,KAAA1E,QAAA,WAAA0E,KAAA1E,QAAA,eAEA,IAAAg9C,OAAAvgD,IAAAiI,KAAA1E,QAAAg9C,UAAAt4C,KAAA1E,QAAAg9C,UAAA,mBAEAt4C,KAAAyX,QAAAzX,KAAAnF,cAAA,MAAAy9C,EAAA,IAAAglD,GAAAv9C,oBAEA,IAAAw+C,EAAAv+F,KAAAnF,cACA,MACA,sCAAAyiG,GAAAx9C,iBACA9/C,KAAAyX,SAGA+mF,EAAAx+F,KAAAnF,cACA,MACA,4BAAAyiG,GAAAx9C,iBACA9/C,KAAAyX,SAGAgnF,EAAAz+F,KAAAnF,cACA,MACA,wDAAAyiG,GAAAx9C,iBACAy+C,GAEAE,EAAAr0F,aAAA,gBACApK,KAAA0+F,OAAAD,EAAA,QAAAz+F,KAAA2+F,sBAAAr/F,KAAAU,KAAA,eACA,IAAA4+F,EAAA5+F,KAAAnF,cACA,MACA,wDAAAyiG,GAAAx9C,iBACAy+C,GAEAK,EAAAx0F,aAAA,gBACApK,KAAA0+F,OAAAE,EAAA,QAAA5+F,KAAA2+F,sBAAAr/F,KAAAU,KAAA,eACA,IAAA6+F,EAAA7+F,KAAAnF,cACA,MACA,wDAAAyiG,GAAAx9C,iBACAy+C,GAEAM,EAAAz0F,aAAA,gBACApK,KAAA0+F,OAAAG,EAAA,QAAA7+F,KAAA2+F,sBAAAr/F,KAAAU,KAAA,eACA,IAAA8+F,EAAA9+F,KAAAnF,cACA,MACA,wDAAAyiG,GAAAx9C,iBACAy+C,GAEAO,EAAA10F,aAAA,gBACApK,KAAA0+F,OAAAI,EAAA,QAAA9+F,KAAA2+F,sBAAAr/F,KAAAU,KAAA,eACA,IAAA++F,EAAA/+F,KAAAnF,cACA,MACA,4BAAAyiG,GAAAx9C,iBACA0+C,GAEAO,EAAA30F,aAAA,cACApK,KAAA0+F,OAAAK,EAAA,QAAA/+F,KAAAg/F,iBAAA1/F,KAAAU,KAAA,IAEA,IAAAi/F,EAAAj/F,KAAAnF,cACA,MACA,6BAAAyiG,GAAAx9C,iBACA0+C,GAEAS,EAAA70F,aAAA,cACApK,KAAA0+F,OAAAO,EAAA,QAAAj/F,KAAAg/F,iBAAA1/F,KAAAU,MAAA,IAEA,IAAAk/F,EAAAl/F,KAAAnF,cACA,MACA,gCAAAyiG,GAAAx9C,iBACA0+C,GAEAx+F,KAAAm/F,oBAAAn/F,KAAAnF,cACA,MACA,yBAAAyiG,GAAAx9C,iBACAo/C,GAEAl/F,KAAAo/F,uBAAAp/F,KAAAnF,cACA,MACA,4BAAAyiG,GAAAx9C,iBACAo/C,GAEAl/F,KAAAnF,cACA,MACA,0BAAAyiG,GAAAx9C,iBACAo/C,GAEA90F,aAAA,kBACApK,KAAAq/F,UAAAr/F,KAAAnF,cAAA,oBAAAyiG,GAAAx9C,iBAAAo/C,GACAl/F,KAAAq/F,UAAAj1F,aAAA,kBAEApK,KAAAw+F,gBAEAx+F,KAAA0+F,OAAA1+F,KAAAw+F,cAAA,cAAAx+F,KAAAs/F,oBAAAt/F,MACAA,KAAA0+F,OAAA1+F,KAAAw+F,cAAA,cAAAx+F,KAAAu/F,mBAAAv/F,MACAA,KAAA0+F,OAAA1+F,KAAAw+F,cAAA,YAAAx+F,KAAAw/F,kBAAAx/F,MACAA,KAAA0+F,OAAA1+F,KAAAw+F,cAAA,QAAAx+F,KAAAy/F,sBAAAz/F,MACAA,KAAA0+F,OAAA1+F,KAAAq/F,UAAA,iBAAAvrF,GACAA,EAAAV,oBAEA,IAAAwqC,EAAA59C,KAAA1E,QAAA,OAAA0E,KAAA1E,QAAA,OAAA0E,KAAA49C,OACQ4B,GAAOhrD,KAAAwL,KAAA,CACfyX,QAAAzX,KAAAyX,QACAmmC,SACAh2C,OAAA5H,KAAA1E,QAAA,SAMAqiG,iBAAA5uE,EAAAjb,GACAA,EAAAT,iBACArT,KAAA2kD,aAAA51B,GAGA4uE,sBAAAxhG,EAAA2X,GACAA,EAAAT,iBACA,IAAAqO,EAAA1hB,KAAA4/C,SAAArD,UACA6O,EAAA1pC,EAAAirB,gBAAA3sC,KAAAqrD,YACA72B,EAAA,EACAC,EAAA,EAEA,OAAAt4B,GACA,iBACAs4B,EAAA22B,EACA,MACA,iBACA32B,GAAA22B,EACA,MACA,iBACA52B,GAAA42B,EACA,MACA,iBACA52B,EAAA42B,EAGA,IAAAr8B,EAAA,CAAAyF,EAAAC,GACQrF,GAAML,EAAArN,EAAAurB,eACdjtC,KAAAsrD,IAAA5pC,EAAAqN,EAAA/uB,KAAAgkD,WAEA25C,IAAAj8E,EAAAqN,EAAA2wE,GACA,IAAA9wD,EAAAltB,EAAAsrB,YACA,GAAA4B,EAAA,CACA,IAAAvgC,EAAAqT,EAAAytB,gBAAA,CAAAP,EAAA,GAAA7f,EAAA,GAAA6f,EAAA,GAAA7f,EAAA,KACA2wE,EACAh+E,EAAAwrB,QAAA,CACAW,SAAA6xD,EACA5xD,OAA4B5d,GAC5B7hB,WAGAqT,EAAA4rB,UAAAj/B,IAKAsvF,aAAA5uE,GACA,IAAArN,EAAA1hB,KAAA4/C,SAAArD,UACA,GAAA76B,EAAA,CACA,IAAAmtB,EAAAntB,EAAAirB,gBACA,GAAAkC,EAAA,CACA,IAAA+V,EAAAljC,EAAAgrB,oBAAAmC,EAAA9f,GACA/uB,KAAAgkD,UAAA,GACAtiC,EAAAssB,gBACAtsB,EAAAwsB,mBAEAxsB,EAAAwrB,QAAA,CACA1Z,WAAAoxB,EACA/W,SAAA7tC,KAAAgkD,UACAlW,OAAgC9d,MAGhCtO,EAAAkwB,cAAAgT,KAMA+4C,OAAA18C,GACA,GAAAA,EAAAloC,WAAA,CAGA/Y,KAAAm+F,oBACAn+F,KAAA2/F,cAEA,IAAA9P,EAAA5uC,EAAAloC,WAAAylC,UAAAhrB,WACAq8D,IAAA7vF,KAAA49F,qBACA59F,KAAA49F,mBAAA/N,EACA7vF,KAAA4/F,kBAAA/P,KAIA8N,OAAA5hG,GACA,IAAAA,EAMA,MAAAxC,MAAA,cALYimD,GAAOlrD,UAAA4lD,OAAA1lD,KAAAwL,KAAAjE,GACnBA,GACAA,EAAA6hD,SAOA+/C,SACA,OAAA39F,KAAAooB,KAGAu1E,kBACAe,OAAA1+F,KAAAw+F,cAAA,yBAAA1qF,KAAsE9T,MAC9Dw/C,GAAOlrD,UAAAue,gBAAAre,KAAAwL,MAGf29F,cACA,IAAA91E,EAAA7nB,KAAAw+F,cACAqB,EACAh4E,EAAA0qB,YADAstD,EAEAh4E,EAAA8qB,aAEAmtD,EAAA9/F,KAAA2H,WAAA,cAAAkgB,GAAA,GACAu3B,EAAAnQ,iBAAA6wD,GACAC,EACAD,EAAAvtD,YAAA8M,WAAAD,EAAA,aAAAC,WAAAD,EAAA,YACA4gD,EACAF,EAAAntD,aAAA0M,WAAAD,EAAA,WAAAC,WAAAD,EAAA,cACAp/C,KAAAk+F,WAAA,CAAA6B,EAAAC,GACAH,KACA7/F,KAAA69F,WAAAN,GAAAE,WACAz9F,KAAA+9F,YAAA8B,EAAAE,IAEA//F,KAAA69F,WAAAN,GAAAC,SACAx9F,KAAA89F,aAAA+B,EAAAG,GAEAhgG,KAAAm+F,oBAAA,EAGAR,sBAAA7pF,GACA,IAAA4N,EAAA1hB,KAAA4/C,SAAArD,UACA0jD,EAAAjgG,KAAAkgG,qBACApsF,EAAA2/C,QAAAzzD,KAAAk+F,WAAA,KACApqF,EAAA4/C,QAAA1zD,KAAAk+F,WAAA,MAEA1qE,EAAAxzB,KAAAmgG,0BAAAF,GACAv+E,EAAAwrB,QAAA,CACA1Z,WAAA9R,EAAAgrB,oBAAAlZ,GACAqa,SAAA7tC,KAAAgkD,UACAlW,OAAoB9d,KAIpB2tE,oBAAA7pF,GACA9T,KAAAsoB,WAAAxU,EAAAlM,SAAA5H,KAAA2H,WAAA,cAAA3H,KAAAw+F,iBACAx+F,KAAAg+F,WAAAlqF,EAAAiK,QACA/d,KAAAi+F,WAAAnqF,EAAAmK,QACAje,KAAAsoB,WAAA,GAIAq1E,mBAAA7pF,GACA,GAAA9T,KAAAsoB,UAAA,CACA,IAAA7Q,EAAAzX,KAAA2H,WAAA,cAAA3H,KAAAw+F,eAAA,GACAhqE,EAAA1gB,EAAAiK,QAAA/d,KAAAg+F,WAAA9uD,SAAAz3B,EAAAvO,MAAA/G,KAAA,IACAsyB,EAAA3gB,EAAAmK,QAAAje,KAAAi+F,WAAA/uD,SAAAz3B,EAAAvO,MAAA4yC,IAAA,IACAmkD,EAAAjgG,KAAAkgG,qBAAA1rE,EAAAC,GACAz0B,KAAA49F,mBAAA59F,KAAAmgG,0BAAAF,GACAjgG,KAAA4/C,SACArD,UACA3K,cAAA5xC,KAAA49F,oBACA59F,KAAA4/F,kBAAA5/F,KAAA49F,oBACA59F,KAAAg+F,WAAAlqF,EAAAiK,QACA/d,KAAAi+F,WAAAnqF,EAAAmK,SAIA0/E,kBAAA7pF,GACA,GAAA9T,KAAAsoB,UAAA,CACA,IAAA5G,EAAA1hB,KAAA4/C,SAAArD,UAEA76B,EAAAwrB,QAAA,CACA1Z,WAAA9R,EAAAgrB,oBAAA1sC,KAAA49F,oBACA/vD,SAAA7tC,KAAAgkD,UACAlW,OAAwB9d,KAExBhwB,KAAAsoB,WAAA,EACAtoB,KAAAg+F,gBAAAjmG,EACAiI,KAAAi+F,gBAAAlmG,GAIA4lG,kBAAA9N,GACA,IAAA/9C,EAAA9xC,KAAAogG,0BAAAvQ,GACAiQ,EAAA9/F,KAAA2H,WAAA,cAAA3H,KAAAw+F,eAAA,GACAx+F,KAAA69F,aAAAN,GAAAE,YACAqC,EAAA52F,MAAA/G,KAAAnC,KAAA+9F,YAAAjsD,EAAA,KACA9xC,KAAAo/F,uBAAAl2F,MAAAiZ,MAAAniB,KAAA+9F,aAAA/9F,KAAA+9F,YAAAjsD,EAAA,UAEAguD,EAAA52F,MAAA4yC,IAAA97C,KAAA89F,aAAAhsD,EAAA,KACA9xC,KAAAo/F,uBAAAl2F,MAAAlH,OAAAhC,KAAA89F,cAAA99F,KAAA89F,aAAAhsD,EAAA,SAIA6rD,qBAAA7/E,EAAAE,GACA,IAAAqiF,OAAA,EAMA,OAJAA,EADArgG,KAAA69F,aAAAN,GAAAE,WACA3/E,EAAA9d,KAAA+9F,YAEA//E,EAAAhe,KAAA89F,aAEA59F,KAAAuB,IAAAvB,KAAAC,IAAAkgG,EAAA,MAGA1C,0BAAA7rD,GAEA,GADA9xC,KAAA4/C,SAAArD,UAEA,OAAAv8C,KAAAuwC,8BAAA,EAAAuB,GAIA6rD,8BAAAnqE,EAAA8sE,GACA,IAAAp1D,EAAAo1D,GAAA,EACA5+E,EAAA1hB,KAAA4/C,SAAArD,UACA3R,EAAAlpB,EAAAiuB,mBACA9E,EAAAnpB,EAAAkuB,mBACAzvC,EAAAD,KAAAgE,IAAA0mC,EAAAC,GAAA3qC,KAAAgE,IAAAgnC,GACA,OAAAhrC,KAAAgE,IAAA0mC,EAAApX,GAAAtzB,KAAAgE,IAAAgnC,GAAA/qC,EAGAw9F,8BAAAlnG,EAAA6pG,GACA,IAAAp1D,EAAAo1D,GAAA,EACA5+E,EAAA1hB,KAAA4/C,SAAArD,UACA3R,EAAAlpB,EAAAiuB,mBACA9E,EAAAnpB,EAAAkuB,mBACAzvC,EAAAD,KAAAgE,IAAA0mC,EAAAC,GAAA3qC,KAAAgE,IAAAgnC,GACA,OAAAN,EAAA1qC,KAAAiE,IAAA+mC,EAAAz0C,EAAA0J,GAGAw9F,0BAAA9N,GAEA,GADA7vF,KAAA4/C,SAAArD,UAEA,SAAAv8C,KAAAywC,8BAAAo/C,GAIA8N,cAAAx2C,EAAA7O,EAAAzwB,EAAAvuB,GACA,IAAA6Q,EAAAvP,SAAAC,cAAAssD,GAMA,OALA7tD,IAAA6Q,EAAA7Q,MACAg/C,GAAAt4C,KAAAugG,SAAAp2F,EAAAmuC,GACAzwB,GACAA,EAAA5sB,YAAAkP,GAEAA,EAGAwzF,WAAA5uD,EAAAyxD,GACA,IAEAle,EAFAme,EAAAD,GAAAzsG,OAAA6G,SAaA,OAXA0nF,OAAA,EACAme,EAAA7lG,UAAA,cAAAyS,KAAA0hC,IACAuzC,EAAAme,EAAA5pD,eAAA6pD,OAAAtzF,KAAA,CAAAk1E,GAAA,GACAnsE,MAAA7hB,UAAAwH,MAAAtH,KACA,eAAA6Y,KAAA0hC,GACA0xD,EAAAE,uBAAAD,OAAAtzF,IACA,WAAAC,KAAA0hC,GACA0xD,EAAAG,qBAAA7xD,GACA0xD,EAAAI,iBAAA9xD,IAMA4uD,UAAAp3F,GACA,GAAAA,aAAAu6F,QACA,OAAAv6F,EACS,GAAAvG,KAAA+gG,SAAAx6F,GACT,OAAA3L,SAAAi8C,eAAAtwC,GAEA,UAAAhN,MAAA,0BAIAokG,SAAAxzF,EAAA62F,GACA,IAAA72F,IAAA62F,EAAA,SACA,QAAAA,EAAAlrG,QAAA,KACA,UAAAyD,MAAA,uCAEA,OAAA4Q,EAAA+4C,UACA/4C,EAAA+4C,UAAAphD,SAAAk/F,IAEA,IAAA72F,EAAAmuC,UAAA,KAAAxiD,QAAA,IAAAkrG,EAAA,QAIArD,SAAAxzF,EAAA62F,GACA,GAAA72F,EAAA,CAGA,IAFA,IAAA82F,EAAA92F,EAAAmuC,UACA4oD,GAAAF,GAAA,IAAAjxF,MAAA,KACA/X,EAAA,EAAAwD,EAAA0lG,EAAAjpG,OAA2CD,EAAAwD,EAAOxD,IAAA,CAClD,IAAAmpG,EAAAD,EAAAlpG,GACAmpG,IACAh3F,EAAA+4C,UACA/4C,EAAA+4C,UAAA/zB,IAAAgyE,GACanhG,KAAAohG,SAAAj3F,EAAAg3F,KACbF,GAAA,IAAAE,IAGAh3F,EAAA+4C,YACA/4C,EAAAmuC,UAAA2oD,IAIAtD,YAAAxzF,EAAA62F,GACA,GAAA72F,GAAA62F,EAAA,CAGA,IAFA,IAAAE,EAAAF,EAAAjxF,MAAA,KACAkxF,EAAA,IAAA92F,EAAAmuC,UAAA,IACAtgD,EAAA,EAAAwD,EAAA0lG,EAAAjpG,OAA2CD,EAAAwD,EAAOxD,IAAA,CAClD,IAAAmpG,EAAAD,EAAAlpG,GACAmpG,IACAh3F,EAAA+4C,UACA/4C,EAAA+4C,UAAA5/C,OAAA69F,GACanhG,KAAAohG,SAAAj3F,EAAAg3F,KACbF,IAAAn0F,QAAA,IAAAq0F,EAAA,WAGAh3F,EAAA+4C,YACA/4C,EAAAmuC,UAAAt4C,KAAAmN,KAAA8zF,KAIAtD,MAAAtzF,GACA,IAAAhL,EAAA,aAEA,OADAgL,EAAAhL,GAAAgL,EAAAhL,IAAAW,KAAAqhG,UACAh3F,EAAAhL,GAGAs+F,KAAA2D,GACA,OAAAA,EAAAn0F,KAAAm0F,EAAAn0F,OAAAm0F,EAAAx0F,QAAA,iBAGA6wF,UAIA,IAHA,IAAAj+F,EAAA,GAGA1H,EAAA,EAAuBA,EAAA,GAAQA,IAC/B0H,EAAA1H,GAHA,mBAGAupG,OAAArhG,KAAA4N,MAAA,GAAA5N,KAAAshG,UAAA,GAKA,OAHA9hG,EAAA,QACAA,EAAA,IANA,mBAMA6hG,OAAA,EAAA7hG,EAAA,SACAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,QACAA,EAAAzC,KAAA,IAGA0gG,SAAAlnG,GACA,aAAAA,IAGA,iBAAAA,GAAA,OAAAA,EAAAwZ,aAAAxZ,EAAAwZ,cAAAP,QAGAiuF,aAAArsF,GACA,IAAAU,EAAA,SAAAM,GACA,IAAAnB,EAAAG,EAAAH,SACAI,EAAAD,EAAAC,QAAAD,EAAA1J,OAIA,OAHA0J,EAAAc,UACApS,KAAAyhG,cAAAnwF,GAEAH,EAAA3c,KAAA+c,EAAAe,IAGA,OADAhB,EAAAU,gBACAA,EAGA2rF,aAAAzsF,EAAAC,EAAAuwF,EAAAC,GAEA,IADA,IAAArwF,EAAA,KACAtZ,EAAA,EAAA4Y,EAAAM,EAAAjZ,OAA8CD,EAAA4Y,IAAQ5Y,EAEtD,IADAsZ,EAAAJ,EAAAlZ,IACAmZ,cAAAG,EAAAC,SAAAmwF,EAIA,OAHAC,IACArwF,EAAAE,YAAAxZ,GAEAsZ,EAMAqsF,aAAA/1F,EAAAzL,GACA,IAAAuV,EAAA9J,EAAAg6F,IACA,OAAAlwF,IAAAvV,QAAApE,EAGA4lG,eAAA/1F,GACA,IAAA8J,EAAA9J,EAAAg6F,IAIA,OAHAlwF,IACAA,EAAA9J,EAAAg6F,IAAA,IAEAlwF,EAGAisF,gBAAA/1F,EAAAzL,GACA,IAAA+U,EAAAlR,KAAAyR,aAAA7J,EAAAzL,GACA,GAAA+U,EAAA,CACA,QAAAlZ,EAAA,EAAA4Y,EAAAM,EAAAjZ,OAAkDD,EAAA4Y,IAAQ5Y,EAC1D4P,EAAAmK,oBAAA5V,EAAA+U,EAAAlZ,GAAAga,eACAhS,KAAAO,MAAA2Q,EAAAlZ,IAEAkZ,EAAAjZ,OAAA,EACA,IAAAyZ,EAAA9J,EAAAg6F,IACAlwF,WACAA,EAAAvV,GACA,IAAA9H,OAAAqJ,KAAAgU,GAAAzZ,eACA2P,EAAAg6F,MAMAjE,OAAA/1F,EAAAzL,EAAAgV,EAAAuwF,EAAAG,GACA,IAAAnwF,EAAA1R,KAAA2R,eAAA/J,GACAsJ,EAAAQ,EAAAvV,GACA+U,IACAA,EAAAQ,EAAAvV,GAAA,IAEA,IAAAmV,EAAAtR,KAAAiR,aAAAC,EAAAC,EAAAuwF,GAAA,GAgBA,OAfApwF,EACAuwF,IACAvwF,EAAAc,UAAA,IAGAd,EAAA,CACAC,OAAAmwF,EACAtvF,WAAAyvF,EACA1wF,WACAvJ,SACAzL,QAEAyL,EAAAyK,iBAAAlW,EAAA6D,KAAAwS,aAAAlB,IACAJ,EAAAnb,KAAAub,IAEAA,EAGAqsF,WAAA/1F,EAAAzL,EAAAgV,EAAAuwF,GACA,OAAA1hG,KAAA0+F,OAAA92F,EAAAzL,EAAAgV,EAAAuwF,GAAA,GAGA/D,SAAA/1F,EAAAzL,EAAAgV,EAAAuwF,GACA,IAAAxwF,EAAAlR,KAAAyR,aAAA7J,EAAAzL,GACA,GAAA+U,EAAA,CACA,IAAAI,EAAAtR,KAAAiR,aAAAC,EAAAC,EAAAuwF,GAAA,GACApwF,GACAtR,KAAAyhG,cAAAnwF,IAKAqsF,cAAAt+F,GACA,GAAAA,KAAAuI,OAAA,CACAvI,EAAAuI,OAAAmK,oBAAA1S,EAAAlD,KAAAkD,EAAA2S,eACA,IAAAd,EAAAlR,KAAAyR,aAAApS,EAAAuI,OAAAvI,EAAAlD,MACA,GAAA+U,EAAA,CACA,IAAAlZ,EAAA,gBAAAqH,IAAAmS,YAAAN,EAAApb,QAAAuJ,IACA,IAAArH,GACAkZ,EAAA3Y,OAAAP,EAAA,GAEA,IAAAkZ,EAAAjZ,QACA+H,KAAA8R,gBAAAzS,EAAAuI,OAAAvI,EAAAlD,MAGA6D,KAAAO,MAAAlB,IAIAs+F,MAAAn+F,GACA,QAAAC,KAAAD,SACAA,EAAAC,GAIAk+F,eAAAxhG,EAAA1G,EAAA06D,GACA,oBAAAh0D,EAAA,IAAA6D,KAAA8hG,MAAArsG,IAAA06D,EAAA,IAAAnwD,KAAA8hG,MAAA3xC,GAAA,IAGAwtC,YAAAlmF,EAAAtb,EAAA1G,EAAA06D,GACA,IAAA4xC,EAAA/hG,KAAAgiG,eAAA7lG,EAAA1G,EAAA06D,GACAjpC,EAAAzP,EAAAsqF,GACA,OAAA76E,EACAlnB,MAEAknB,EAAA,SAAAvwB,GACA,OAAAlB,EAAAjB,KAAA27D,GAAA14C,EAAA9gB,IAEA,qBAAA8gB,EACAA,EAAApF,iBAAAlW,EAAA+qB,GAAA,GACS,gBAAAzP,GACTA,EAAAwqF,YAAA,KAAA9lG,EAAA+qB,GAEAzP,EAAAsqF,GAAA76E,EACAlnB,OCjVe,IAAAkiG,GArPJ,SAAAtrF,GACX,SAAAurF,EAAAC,GAuCA,GArCAxrF,EAAApiB,KAAAwL,MAMAA,KAAAqiG,SAAAtqG,EAMAiI,KAAAsiG,cAAA,WAOAtiG,KAAAuiG,OAAA,KAMAviG,KAAAwiG,oBAAAzqG,EAMAiI,KAAAyiG,mBAAA,KAEIvwF,EACJlS,KAAY0W,EAAkB1W,KAAAsiG,eAC9BtiG,KAAA0iG,uBAAA1iG,MAEAoiG,EACA,GAA8B,qBAAA/iE,sBAAA,CAC9B,IAAA2R,EAAuE,EACvEhxC,KAAA2iG,YAAA3xD,OACO,CAEP,IAAAvG,EAAA23D,EACApiG,KAAA+W,cAAA0zB,IAqKA,OAhKA7zB,IAAAurF,EAAAnyF,UAAA4G,GACAurF,EAAA7tG,UAAAD,OAAA+K,OAAAwX,KAAAtiB,WACA6tG,EAAA7tG,UAAA2b,YAAAkyF,EAQAA,EAAA7tG,UAAAysC,MAAA,WACA,IAAAA,EAAA,IAAAohE,EAAAniG,KAAAiX,iBACA8pB,EAAA6hE,gBAAA5iG,KAAA6iG,mBACA,IAAA7xD,EAAAhxC,KAAA+pD,cACA/Y,GACAjQ,EAAA4hE,YAAA3xD,EAAAjQ,SAEA,IAAA73B,EAAAlJ,KAAA8iG,WAIA,OAHA55F,GACA63B,EAAAk0B,SAAA/rD,GAEA63B,GAWAohE,EAAA7tG,UAAAy1D,YAAA,WACA,OACgE/pD,KAAAzJ,IAAAyJ,KAAAsiG,gBAWhEH,EAAA7tG,UAAA+lD,MAAA,WACA,OAAAr6C,KAAAqiG,KAUAF,EAAA7tG,UAAAuuG,gBAAA,WACA,OAAA7iG,KAAAsiG,eASAH,EAAA7tG,UAAAwuG,SAAA,WACA,OAAA9iG,KAAAuiG,QASAJ,EAAA7tG,UAAAyrF,iBAAA,WACA,OAAA//E,KAAAwiG,gBAMAL,EAAA7tG,UAAAyuG,sBAAA,WACA/iG,KAAAgW,WAMAmsF,EAAA7tG,UAAAouG,uBAAA,WACA1iG,KAAAyiG,qBACMlwF,EAAavS,KAAAyiG,oBACnBziG,KAAAyiG,mBAAA,MAEA,IAAAzxD,EAAAhxC,KAAA+pD,cACA/Y,IACAhxC,KAAAyiG,mBAAgCvwF,EAAM8+B,EAC9B58B,EAASC,OAAArU,KAAA+iG,sBAAA/iG,OAEjBA,KAAAgW,WAUAmsF,EAAA7tG,UAAAquG,YAAA,SAAA3xD,GACAhxC,KAAAxJ,IAAAwJ,KAAAsiG,cAAAtxD,IAWAmxD,EAAA7tG,UAAA2gE,SAAA,SAAA/rD,GACAlJ,KAAAuiG,OAAAr5F,EACAlJ,KAAAwiG,eAAAt5F,EAgDO,SAAAmB,GACP,sBAAAA,EACA,OAAAA,EAKA,IAAA/B,EACA,GAAA6N,MAAAC,QAAA/L,GACA/B,EAAA+B,MACK,CACCkgB,GAA2B,qBAAAiqB,UACjC,IACA,IAAAtrC,EAAgE,EAChEZ,EAAA,CAAAY,GAEA,kBACA,OAAAZ,GAjEA06F,CAAA95F,QAAAnR,EACAiI,KAAAgW,WAYAmsF,EAAA7tG,UAAA2uG,MAAA,SAAA3pG,GACA0G,KAAAqiG,IAAA/oG,EACA0G,KAAAgW,WAUAmsF,EAAA7tG,UAAAsuG,gBAAA,SAAAxsG,GACIsc,EACJ1S,KAAY0W,EAAkB1W,KAAAsiG,eAC9BtiG,KAAA0iG,uBAAA1iG,MACAA,KAAAsiG,cAAAlsG,EACI8b,EACJlS,KAAY0W,EAAkB1W,KAAAsiG,eAC9BtiG,KAAA0iG,uBAAA1iG,MACAA,KAAA0iG,0BAGAP,EApNW,CAqNTxrF,GCnQEusF,GAAM,SAAApkE,GACV,SAAAu4C,EAAAhpE,EAAA2nB,EAAA+J,GAEA,GADAjB,EAAAtqC,KAAAwL,WACAjI,IAAAgoC,QAAAhoC,IAAAi+B,EACAh2B,KAAA6/B,mBAAAE,EAAA1xB,OACK,CACL,IAAA4nB,EAAAD,GAAA,EACAh2B,KAAAmjG,mBAAA90F,EAAA4nB,EAAA8J,IA8LA,OA1LAjB,IAAAu4C,EAAArnE,UAAA8uB,GACAu4C,EAAA/iF,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACA+iF,EAAA/iF,UAAA2b,YAAAonE,EAQAA,EAAA/iF,UAAAysC,MAAA,WACA,WAAAs2C,EAAAr3E,KAAAkyB,gBAAAp2B,aAAA/D,EAAAiI,KAAA2+B,SAMA04C,EAAA/iF,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,IAAAhP,EAAAlyB,KAAAkyB,gBACAhU,EAAAJ,EAAAoU,EAAA,GACA9T,EAAAJ,EAAAkU,EAAA,GACA8Q,EAAA9kB,IAAAE,IACA,GAAA4kB,EAAA9B,EAAA,CACA,OAAA8B,EACA,QAAAhrC,EAAA,EAAuBA,EAAAgI,KAAAoyB,SAAiBp6B,EACxCipC,EAAAjpC,GAAAk6B,EAAAl6B,OAEO,CACP,IAAA+2B,EAAA/uB,KAAAojG,YAAAljG,KAAAsE,KAAAw+B,GACA/B,EAAA,GAAA/O,EAAA,GAAAnD,EAAA7Q,EACA+iB,EAAA,GAAA/O,EAAA,GAAAnD,EAAA3Q,EACA,QAAA4H,EAAA,EAAyBA,EAAAhmB,KAAAoyB,SAAmBpM,EAC5Cib,EAAAjb,GAAAkM,EAAAlM,GAIA,OADAib,EAAAhpC,OAAA+H,KAAAoyB,OACA4Q,EAEA,OAAA9B,GAOAm2C,EAAA/iF,UAAA6sC,WAAA,SAAArjB,EAAAE,GACA,IAAAkU,EAAAlyB,KAAAkyB,gBACAhU,EAAAJ,EAAAoU,EAAA,GACA9T,EAAAJ,EAAAkU,EAAA,GACA,OAAAhU,IAAAE,KAAApe,KAAAqjG,qBAQAhsB,EAAA/iF,UAAA04C,UAAA,WACA,OAAAhtC,KAAAkyB,gBAAAp2B,MAAA,EAAAkE,KAAAoyB,SAMAilD,EAAA/iF,UAAAyqC,cAAA,SAAA9N,GACA,IAAAiB,EAAAlyB,KAAAkyB,gBACA+D,EAAA/D,EAAAlyB,KAAAoyB,QAAAF,EAAA,GACA,OAAWH,GACXG,EAAA,GAAA+D,EAAA/D,EAAA,GAAA+D,EACA/D,EAAA,GAAA+D,EAAA/D,EAAA,GAAA+D,EACAhF,IAQAomD,EAAA/iF,UAAA8uG,UAAA,WACA,OAAAljG,KAAAsE,KAAAxE,KAAAqjG,sBAOAhsB,EAAA/iF,UAAA+uG,kBAAA,WACA,IAAAnlF,EAAAle,KAAAkyB,gBAAAlyB,KAAAoyB,QAAApyB,KAAAkyB,gBAAA,GACA9T,EAAApe,KAAAkyB,gBAAAlyB,KAAAoyB,OAAA,GAAApyB,KAAAkyB,gBAAA,GACA,OAAAhU,IAAAE,KAOAi5D,EAAA/iF,UAAAqtC,QAAA,WACA,OAAWjN,GAAYS,QAOvBkiD,EAAA/iF,UAAAstC,iBAAA,SAAA3Q,GAEA,GAAQqD,GAAUrD,EADlBjxB,KAAAk4B,aACkB,CAClB,IAAA7pB,EAAArO,KAAAgtC,YAEA,OAAA/b,EAAA,IAAA5iB,EAAA,IAAA4iB,EAAA,IAAA5iB,EAAA,KAGA4iB,EAAA,IAAA5iB,EAAA,IAAA4iB,EAAA,IAAA5iB,EAAA,IAIaqkB,GAAazB,EAAAjxB,KAAAuhC,qBAAAvhC,OAE1B,UASAq3E,EAAA/iF,UAAAg5C,UAAA,SAAAj/B,GACA,IAAA+jB,EAAApyB,KAAAoyB,OACA6D,EAAAj2B,KAAAkyB,gBAAAE,GAAApyB,KAAAkyB,gBAAA,GACAA,EAAA7jB,EAAAvS,QACAo2B,EAAAE,GAAAF,EAAA,GAAA+D,EACA,QAAAj+B,EAAA,EAAmBA,EAAAo6B,IAAYp6B,EAC/Bk6B,EAAAE,EAAAp6B,GAAAqW,EAAArW,GAEAgI,KAAA6/B,mBAAA7/B,KAAA2+B,OAAAzM,GACAlyB,KAAAgW,WAWAqhE,EAAA/iF,UAAA6uG,mBAAA,SAAA90F,EAAA4nB,EAAA8J,GACA//B,KAAAggC,UAAAD,EAAA1xB,EAAA,GACArO,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAGA,IAAAA,EAAAlyB,KAAAkyB,gBACAC,EAAiBgR,GACjBjR,EAAA,EAAA7jB,EAAArO,KAAAoyB,QACAF,EAAAC,KAAAD,EAAA,GAAA+D,EACA,QAAAj+B,EAAA,EAAA4Y,EAAA5Q,KAAAoyB,OAAqCp6B,EAAA4Y,IAAQ5Y,EAC7Ck6B,EAAAC,KAAAD,EAAAl6B,GAEAk6B,EAAAj6B,OAAAk6B,EACAnyB,KAAAgW,WAMAqhE,EAAA/iF,UAAA0qC,eAAA,WACA,aAMAq4C,EAAA/iF,UAAAwrC,eAAA,SAAA9O,EAAA+O,KAOAs3C,EAAA/iF,UAAAgvG,UAAA,SAAArtE,GACAj2B,KAAAkyB,gBAAAlyB,KAAAoyB,QAAApyB,KAAAkyB,gBAAA,GAAA+D,EACAj2B,KAAAgW,WAGAqhE,EArMU,CAsMRz4C,IAyBFskE,GAAM5uG,UAAAgW,UACS,IAAAi5F,GAAA,GC9NR,SAAAC,GAAAtxE,EAAAC,EAAApP,EAAAqP,EAAAmc,EAAA7Y,GACP,IAAAoQ,EAAAxE,IACAmiE,EAAAniE,IACA/hC,GAAAwjB,EAAAoP,GAAAC,EACA,OAAA7yB,EACAumC,EAAA5T,EAAAC,GACAsxE,EAAAvxE,EAAAC,EAAA,QACG,MAAA5yB,EACHumC,GAAA,EAAAyI,GAAArc,EAAAC,GACAoc,EAAArc,EAAAC,EAAAC,GACAqxE,GAAA,EAAAl1D,GAAArc,EAAAC,EAAA,GACAoc,EAAArc,EAAAC,EAAAC,EAAA,QACG,OAAA7yB,EAAA,CAKH,IAJA,IAAA2uB,EAAAgE,EAAAC,GACAhE,EAAA+D,EAAAC,EAAA,GACAl6B,EAAA,EACAyrG,EAAA,IACA1rG,EAAAm6B,EAAAC,EAAiCp6B,EAAA+qB,EAAS/qB,GAAAo6B,EAAA,CAC1C,IAAAhE,EAAA8D,EAAAl6B,GACAq2B,EAAA6D,EAAAl6B,EAAA,GACAC,GAAAiI,KAAAsE,MAAA4pB,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,IACAu1E,EAAA3tG,KAAAkC,GACAi2B,EAAAE,EACAD,EAAAE,EAEA,IAAAzmB,EAAA2mC,EAAAt2C,EACAsL,EvJ5BO,SAAAogG,EAAAC,EAAAC,GAOP,IANA,IAAAvhG,EAAAwhG,EACAC,EAAAF,GAAAnhF,GACAshF,EAAA,EACAC,EAAAN,EAAA1rG,OACAqqF,GAAA,EAEA0hB,EAAAC,IAIAH,GAAAC,EAAAJ,EADArhG,EAAA0hG,GAAAC,EAAAD,GAAA,IACAJ,IAEA,EACAI,EAAA1hG,EAAA,GAGA2hG,EAAA3hG,EACAggF,GAAAwhB,GAKA,OAAAxhB,EAAA0hB,KuJKgBE,CAAYR,EAAA97F,GAC5B,GAAArE,EAAA,GACA,IAAApM,GAAAyQ,EAAA87F,GAAAngG,EAAA,KACAmgG,GAAAngG,EAAA,GAAAmgG,GAAAngG,EAAA,IACAzE,EAAAqzB,IAAA5uB,EAAA,GAAA6uB,EACA0T,EAAenX,GACfuD,EAAApzB,GAAAozB,EAAApzB,EAAAszB,GAAAj7B,GACAssG,EAAe90E,GACfuD,EAAApzB,EAAA,GAAAozB,EAAApzB,EAAAszB,EAAA,GAAAj7B,QAEA2uC,EAAA5T,EAAAC,EAAA5uB,EAAA6uB,GACAqxE,EAAAvxE,EAAAC,EAAA5uB,EAAA6uB,EAAA,GAGA,OAAAsD,GACAA,EAAA,GAAAoQ,EACApQ,EAAA,GAAA+tE,EACA/tE,GAEA,CAAAoQ,EAAA29D,GAcO,SAAAU,GAAAjyE,EAAAC,EAAApP,EAAAqP,EAAAzzB,EAAAylG,GACP,GAAArhF,GAAAoP,EACA,YAEA,IAAA5Y,EACA,GAAA5a,EAAAuzB,EAAAC,EAAAC,EAAA,GACA,OAAAgyE,IACA7qF,EAAA2Y,EAAAp2B,MAAAq2B,IAAAC,IACAA,EAAA,GAAAzzB,EACA4a,GAEA,KAEG,GAAA2Y,EAAAnP,EAAA,GAAApkB,EACH,OAAAylG,IACA7qF,EAAA2Y,EAAAp2B,MAAAinB,EAAAqP,EAAArP,IACAqP,EAAA,GAAAzzB,EACA4a,GAEA,KAIA,GAAA5a,GAAAuzB,EAAAC,EAAAC,EAAA,GACA,OAAAF,EAAAp2B,MAAAq2B,IAAAC,GAIA,IAFA,IAAAiyE,EAAAlyE,EAAAC,EACAkyE,EAAAvhF,EAAAqP,EACAiyE,EAAAC,GAAA,CACA,IAAAhiG,EAAA+hG,EAAAC,GAAA,EACA3lG,EAAAuzB,GAAA5vB,EAAA,GAAA8vB,EAAA,GACAkyE,EAAAhiG,EAEA+hG,EAAA/hG,EAAA,EAGA,IAAAiiG,EAAAryE,EAAAmyE,EAAAjyE,EAAA,GACA,GAAAzzB,GAAA4lG,EACA,OAAAryE,EAAAp2B,OAAAuoG,EAAA,GAAAjyE,GAAAiyE,EAAA,GAAAjyE,KAEA,IACAj7B,GAAAwH,EAAA4lG,IADAryE,GAAAmyE,EAAA,GAAAjyE,EAAA,GACAmyE,GACAhrF,EAAA,GACA,QAAAvhB,EAAA,EAAiBA,EAAAo6B,EAAA,IAAgBp6B,EACjCuhB,EAAAxjB,KAAoB44B,GAAIuD,GAAAmyE,EAAA,GAAAjyE,EAAAp6B,GACxBk6B,EAAAmyE,EAAAjyE,EAAAp6B,GAAAb,IAGA,OADAoiB,EAAAxjB,KAAA4I,GACA4a,ECpGA,IA2NeirF,GA3ND,SAAA1lE,GACd,SAAA04C,EAAAxmD,EAAA+O,GAEAjB,EAAAtqC,KAAAwL,MAMAA,KAAAykG,cAAA,KAMAzkG,KAAA0kG,uBAAA,EAMA1kG,KAAAglC,WAAA,EAMAhlC,KAAAilC,mBAAA,OAEAltC,IAAAgoC,GAAA5pB,MAAAC,QAAA4a,EAAA,IAGAhxB,KAAA8/B,eAAkF,EAAAC,GAFlF//B,KAAA6/B,mBAAAE,EAAmE,GAyLnE,OAlLAjB,IAAA04C,EAAAxnE,UAAA8uB,GACA04C,EAAAljF,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACAkjF,EAAAljF,UAAA2b,YAAAunE,EAOAA,EAAAljF,UAAAqwG,iBAAA,SAAAprF,GACAvZ,KAAAkyB,gBAGM3wB,GAAMvB,KAAAkyB,gBAAA3Y,GAFZvZ,KAAAkyB,gBAAA3Y,EAAAzd,QAIAkE,KAAAgW,WASAwhE,EAAAljF,UAAAysC,MAAA,WACA,WAAAy2C,EAAAx3E,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,SAMA64C,EAAAljF,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,OAAAA,EAA6B3P,GAAwBvxB,KAAAk4B,YAAApa,EAAAE,GACrDkjB,GAEAlhC,KAAAilC,mBAAAjlC,KAAAiW,gBACAjW,KAAAglC,UAAA9kC,KAAAsE,KAAiCi+B,GACjCziC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OAAA,IACApyB,KAAAilC,kBAAAjlC,KAAAiW,eAEW2sB,GACX5iC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OACApyB,KAAAglC,WAAA,EAAAlnB,EAAAE,EAAAijB,EAAAC,KAcAs2C,EAAAljF,UAAAswG,eAAA,SAAA9sG,GACA,OAAW6F,GAAcqC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OAAAt6B,IAiBzB0/E,EAAAljF,UAAAuwG,iBAAA,SAAAlmG,EAAAmmG,GACA,GAAA9kG,KAAA2+B,QAAuBvJ,GAAcG,KACrCv1B,KAAA2+B,QAAuBvJ,GAAcI,KACrC,YAEA,IAAA4uE,OAAArsG,IAAA+sG,KACA,OAAWX,GAAuBnkG,KAAAkyB,gBAAA,EAClClyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OAAAzzB,EAAAylG,IASA5sB,EAAAljF,UAAA0qC,eAAA,WACA,OAAWyE,GACXzjC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,SAaAolD,EAAAljF,UAAAywG,gBAAA,SAAAx2D,EAAA7Y,GACA,OAAW8tE,GACXxjG,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OACAmc,EAAA7Y,IAQA8hD,EAAAljF,UAAA6jB,UAAA,WACA,OAAW+yD,GACXlrE,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,SAMAolD,EAAAljF,UAAAqmE,gBAAA,WAKA,OAJA36D,KAAA0kG,uBAAA1kG,KAAAiW,gBACAjW,KAAAykG,cAAAzkG,KAAA+kG,gBAAA,GAAA/kG,KAAAykG,eACAzkG,KAAA0kG,sBAAA1kG,KAAAiW,eAEAjW,KAAAykG,eAMAjtB,EAAAljF,UAAAqrC,8BAAA,SAAAL,GACA,IAAA4E,EAAA,GAIA,OAHAA,EAAAjsC,OAAuCgsC,GACvCjkC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OACAkN,EAAA4E,EAAA,GACA,IAAAszC,EAAAtzC,EAAqD9O,GAAcC,KAOnEmiD,EAAAljF,UAAAqtC,QAAA,WACA,OAAWjN,GAAYE,aAOvB4iD,EAAAljF,UAAAstC,iBAAA,SAAA3Q,GACA,OAAWoV,GACXrmC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OACAnB,IAUAumD,EAAAljF,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEAlyB,KAAAkyB,gBAAAj6B,OAAkCmrC,GAClCpjC,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,QACApyB,KAAAgW,WAGAwhE,EAvNc,CAwNZ54C,ICiCaomE,GA1PI,SAAAlmE,GACnB,SAAA09C,EAAAxrD,EAAA+O,EAAAwD,GAsBA,GApBAzE,EAAAtqC,KAAAwL,MAMAA,KAAA4nC,MAAA,GAMA5nC,KAAAglC,WAAA,EAMAhlC,KAAAilC,mBAAA,EAEA9uB,MAAAC,QAAA4a,EAAA,IACAhxB,KAAA8/B,eAAyF,EAAAC,QACpF,QAAAhoC,IAAAgoC,GAAAwD,EACLvjC,KAAA6/B,mBAAAE,EAAmE,GACnE//B,KAAA4nC,MAAArE,MACK,CAKL,IAJA,IAAA5E,EAAA3+B,KAAAo/B,YACA6lE,EAAqD,EACrD/yE,EAAA,GACAmQ,EAAA,GACArqC,EAAA,EAAA4Y,EAAAq0F,EAAAhtG,OAA8CD,EAAA4Y,IAAQ5Y,EAAA,CACtD,IAAAktG,EAAAD,EAAAjtG,GACA,IAAAA,IACA2mC,EAAAumE,EAAA9lE,aAEQ79B,GAAM2wB,EAAAgzE,EAAAhmE,sBACdmD,EAAAtsC,KAAAm8B,EAAAj6B,QAEA+H,KAAA6/B,mBAAAlB,EAAAzM,GACAlyB,KAAA4nC,MAAAvF,GA4MA,OAvMAvD,IAAA09C,EAAAxsE,UAAA8uB,GACA09C,EAAAloF,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACAkoF,EAAAloF,UAAA2b,YAAAusE,EAOAA,EAAAloF,UAAA6wG,iBAAA,SAAAD,GACAllG,KAAAkyB,gBAGM3wB,GAAMvB,KAAAkyB,gBAAAgzE,EAAAhmE,qBAAApjC,SAFZkE,KAAAkyB,gBAAAgzE,EAAAhmE,qBAAApjC,QAIAkE,KAAA4nC,MAAA7xC,KAAAiK,KAAAkyB,gBAAAj6B,QACA+H,KAAAgW,WASAwmE,EAAAloF,UAAAysC,MAAA,WACA,WAAAy7C,EAAAx8E,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,OAAA3+B,KAAA4nC,MAAA9rC,UAMA0gF,EAAAloF,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,OAAAA,EAA6B3P,GAAwBvxB,KAAAk4B,YAAApa,EAAAE,GACrDkjB,GAEAlhC,KAAAilC,mBAAAjlC,KAAAiW,gBACAjW,KAAAglC,UAAA9kC,KAAAsE,KAAiCm+B,GACjC3iC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OAAA,IACApyB,KAAAilC,kBAAAjlC,KAAAiW,eAEWitB,GACXljC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OACApyB,KAAAglC,WAAA,EAAAlnB,EAAAE,EAAAijB,EAAAC,KAyBAs7C,EAAAloF,UAAAuwG,iBAAA,SAAAlmG,EAAAmmG,EAAAM,GACA,GAAAplG,KAAA2+B,QAAwBvJ,GAAcG,KACtCv1B,KAAA2+B,QAAwBvJ,GAAcI,MACtC,IAAAx1B,KAAAkyB,gBAAAj6B,OACA,YAEA,IAAAmsG,OAAArsG,IAAA+sG,KACA54B,OAAAn0E,IAAAqtG,KACA,OFRO,SACPlzE,EAAAC,EAAAkQ,EAAAjQ,EAAAzzB,EAAAylG,EAAAl4B,GACA,GAAAA,EACA,OAAAi4B,GACAjyE,EAAAC,EAAAkQ,IAAApqC,OAAA,GAAAm6B,EAAAzzB,EAAAylG,GAEA,IAAA7qF,EACA,GAAA5a,EAAAuzB,EAAAE,EAAA,GACA,OAAAgyE,IACA7qF,EAAA2Y,EAAAp2B,MAAA,EAAAs2B,IACAA,EAAA,GAAAzzB,EACA4a,GAEA,KAGA,GAAA2Y,IAAAj6B,OAAA,GAAA0G,EACA,OAAAylG,IACA7qF,EAAA2Y,EAAAp2B,MAAAo2B,EAAAj6B,OAAAm6B,IACAA,EAAA,GAAAzzB,EACA4a,GAEA,KAGA,QAAAvhB,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,IAAA+qB,EAAAsf,EAAArqC,GACA,GAAAm6B,GAAApP,EAAA,CAGA,GAAApkB,EAAAuzB,EAAAC,EAAAC,EAAA,GACA,YACK,GAAAzzB,GAAAuzB,EAAAnP,EAAA,GACL,OAAAohF,GACAjyE,EAAAC,EAAApP,EAAAqP,EAAAzzB,GAAA,GAEAwzB,EAAApP,GAEA,YE9BWsiF,CAAwBrlG,KAAAkyB,gBAAA,EACnClyB,KAAA4nC,MAAA5nC,KAAAoyB,OAAAzzB,EAAAylG,EAAAl4B,IASAsQ,EAAAloF,UAAA0qC,eAAA,WACA,OAAW2E,GACX3jC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,SAMAoqD,EAAAloF,UAAA8zC,QAAA,WACA,OAAApoC,KAAA4nC,OASA40C,EAAAloF,UAAAgxG,cAAA,SAAA/hG,GACA,OAAAA,EAAA,GAAAvD,KAAA4nC,MAAA3vC,QAAAsL,EACA,KAEA,IAAeihG,GAAUxkG,KAAAkyB,gBAAAp2B,MACzB,IAAAyH,EAAA,EAAAvD,KAAA4nC,MAAArkC,EAAA,GAAAvD,KAAA4nC,MAAArkC,IAAAvD,KAAA2+B,SAQA69C,EAAAloF,UAAAixG,eAAA,WAOA,IANA,IAAArzE,EAAAlyB,KAAAkyB,gBACAmQ,EAAAriC,KAAA4nC,MACAjJ,EAAA3+B,KAAA2+B,OAEAsmE,EAAA,GACA9yE,EAAA,EACAn6B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAqCD,EAAA4Y,IAAQ5Y,EAAA,CAC7C,IAAA+qB,EAAAsf,EAAArqC,GACAktG,EAAA,IAA2BV,GAAUtyE,EAAAp2B,MAAAq2B,EAAApP,GAAA4b,GACrCsmE,EAAAlvG,KAAAmvG,GACA/yE,EAAApP,EAEA,OAAAkiF,GAMAzoB,EAAAloF,UAAAwmE,iBAAA,WAMA,IALA,IAAA0qC,EAAA,GACAtzE,EAAAlyB,KAAAkyB,gBACAC,EAAA,EACAkQ,EAAAriC,KAAA4nC,MACAxV,EAAApyB,KAAAoyB,OACAp6B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAqCD,EAAA4Y,IAAQ5Y,EAAA,CAC7C,IAAA+qB,EAAAsf,EAAArqC,GAGMuJ,GAAMikG,EAFShC,GACrBtxE,EAAAC,EAAApP,EAAAqP,EAAA,KAEAD,EAAApP,EAEA,OAAAyiF,GAMAhpB,EAAAloF,UAAAqrC,8BAAA,SAAAL,GACA,IAAA4E,EAAA,GACAO,EAAA,GAIA,OAHAP,EAAAjsC,OAAuCusC,GACvCxkC,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OAAAkN,EACA4E,EAAA,EAAAO,GACA,IAAA+3C,EAAAt4C,EAA0D9O,GAAcC,GAAAoP,IAOxE+3C,EAAAloF,UAAAqtC,QAAA,WACA,OAAWjN,GAAYM,mBAOvBwnD,EAAAloF,UAAAstC,iBAAA,SAAA3Q,GACA,O3GhMO,SAAAiB,EAAAC,EAAAkQ,EAAAjQ,EAAAnB,GACP,QAAAj5B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAmCD,EAAA4Y,IAAQ5Y,EAAA,CAC3C,GAAAquC,GACAnU,EAAAC,EAAAkQ,EAAArqC,GAAAo6B,EAAAnB,GACA,SAEAkB,EAAAkQ,EAAArqC,GAEA,S2GwLWytG,CACXzlG,KAAAkyB,gBAAA,EAAAlyB,KAAA4nC,MAAA5nC,KAAAoyB,OAAAnB,IAUAurD,EAAAloF,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEA,IAAAmQ,EAAegB,GACfrjC,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,OAAApyB,KAAA4nC,OACA5nC,KAAAkyB,gBAAAj6B,OAAA,IAAAoqC,EAAApqC,OAAA,EAAAoqC,IAAApqC,OAAA,GACA+H,KAAAgW,WAGAwmE,EAtPmB,CAuPjB59C,ICnGa8mE,GAxJD,SAAA5mE,GACd,SAAAy9C,EAAAvrD,EAAA+O,GACAjB,EAAAtqC,KAAAwL,MACA+/B,IAAA5pB,MAAAC,QAAA4a,EAAA,IACAhxB,KAAA6/B,mBAAAE,EAAmE,GAEnE//B,KAAA8/B,eAAkF,EAAAC,GA8IlF,OA1IAjB,IAAAy9C,EAAAvsE,UAAA8uB,GACAy9C,EAAAjoF,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACAioF,EAAAjoF,UAAA2b,YAAAssE,EAOAA,EAAAjoF,UAAAqxG,YAAA,SAAAjsE,GACA15B,KAAAkyB,gBAGM3wB,GAAMvB,KAAAkyB,gBAAAwH,EAAAwF,sBAFZl/B,KAAAkyB,gBAAAwH,EAAAwF,qBAAApjC,QAIAkE,KAAAgW,WASAumE,EAAAjoF,UAAAysC,MAAA,WAEA,OADA,IAAAw7C,EAAAv8E,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,SAOA49C,EAAAjoF,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,GAAAA,EAA6B3P,GAAwBvxB,KAAAk4B,YAAApa,EAAAE,GACrD,OAAAkjB,EAIA,IAFA,IAAAhP,EAAAlyB,KAAAkyB,gBACAE,EAAApyB,KAAAoyB,OACAp6B,EAAA,EAAA4Y,EAAAshB,EAAAj6B,OAAgDD,EAAA4Y,EAAQ5Y,GAAAo6B,EAAA,CACxD,IAAA4Q,EAA4B1U,GAC5BxQ,EAAAE,EAAAkU,EAAAl6B,GAAAk6B,EAAAl6B,EAAA,IACA,GAAAgrC,EAAA9B,EAAA,CACAA,EAAA8B,EACA,QAAAxnC,EAAA,EAAuBA,EAAA42B,IAAY52B,EACnCylC,EAAAzlC,GAAA02B,EAAAl6B,EAAAwD,GAEAylC,EAAAhpC,OAAAm6B,GAGA,OAAA8O,GASAq7C,EAAAjoF,UAAA0qC,eAAA,WACA,OAAWyE,GACXzjC,KAAAkyB,gBAAA,EAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,SASAmqD,EAAAjoF,UAAAsxG,SAAA,SAAAriG,GACA,IAAAhE,EAAAS,KAAAkyB,gBAAAlyB,KAAAkyB,gBAAAj6B,OAAA+H,KAAAoyB,OAAA,EACA,OAAA7uB,EAAA,GAAAhE,GAAAgE,EACA,KAEA,IAAe4hC,GAAKnlC,KAAAkyB,gBAAAp2B,MACpByH,EAAAvD,KAAAoyB,QAAA7uB,EAAA,GAAAvD,KAAAoyB,QAAApyB,KAAA2+B,SAQA49C,EAAAjoF,UAAAuxG,UAAA,WAMA,IALA,IAAA3zE,EAAAlyB,KAAAkyB,gBACAyM,EAAA3+B,KAAA2+B,OACAvM,EAAApyB,KAAAoyB,OAEA0zE,EAAA,GACA9tG,EAAA,EAAA4Y,EAAAshB,EAAAj6B,OAAgDD,EAAA4Y,EAAQ5Y,GAAAo6B,EAAA,CACxD,IAAAsH,EAAA,IAAsByL,GAAKjT,EAAAp2B,MAAA9D,IAAAo6B,GAAAuM,GAC3BmnE,EAAA/vG,KAAA2jC,GAEA,OAAAosE,GAOAvpB,EAAAjoF,UAAAqtC,QAAA,WACA,OAAWjN,GAAYK,aAOvBwnD,EAAAjoF,UAAAstC,iBAAA,SAAA3Q,GAGA,IAFA,IAAAiB,EAAAlyB,KAAAkyB,gBACAE,EAAApyB,KAAAoyB,OACAp6B,EAAA,EAAA4Y,EAAAshB,EAAAj6B,OAAgDD,EAAA4Y,EAAQ5Y,GAAAo6B,EAAA,CAGxD,GAAUX,GAAUR,EAFpBiB,EAAAl6B,GACAk6B,EAAAl6B,EAAA,IAEA,SAGA,UAUAukF,EAAAjoF,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEAlyB,KAAAkyB,gBAAAj6B,OAAkCmrC,GAClCpjC,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,QACApyB,KAAAgW,WAGAumE,EApJc,CAqJZ39C,IC5IF,IA4VemnE,GA5VC,SAAAjnE,GAChB,SAAA29C,EAAAzrD,EAAA+O,EAAAimE,GA8CA,GA5CAlnE,EAAAtqC,KAAAwL,MAMAA,KAAAimG,OAAA,GAMAjmG,KAAAkmG,6BAAA,EAMAlmG,KAAAmmG,oBAAA,KAMAnmG,KAAAglC,WAAA,EAMAhlC,KAAAilC,mBAAA,EAMAjlC,KAAA+nC,mBAAA,EAMA/nC,KAAAgoC,yBAAA,MAEAg+D,IAAA7vF,MAAAC,QAAA4a,EAAA,KAKA,IAJA,IAAA2N,EAAA3+B,KAAAo/B,YACAgnE,EAA+C,EAC/Cl0E,EAAA,GACA4R,EAAA,GACA9rC,EAAA,EAAA4Y,EAAAw1F,EAAAnuG,OAA2CD,EAAA4Y,IAAQ5Y,EAAA,CACnD,IAAA+wC,EAAAq9D,EAAApuG,GACA,IAAAA,IACA2mC,EAAAoK,EAAA3J,aAIA,IAFA,IAAAjN,EAAAD,EAAAj6B,OACAoqC,EAAA0G,EAAAX,UACA5sC,EAAA,EAAAgoC,EAAAnB,EAAApqC,OAAyCuD,EAAAgoC,IAAQhoC,EACjD6mC,EAAA7mC,IAAA22B,EAEQ5wB,GAAM2wB,EAAA6W,EAAA7J,sBACd4E,EAAA/tC,KAAAssC,GAEAtC,EAAApB,EACA3N,EAAAkB,EACA8zE,EAAAliE,OAEA/rC,IAAAgoC,GAAAimE,GACAhmG,KAAA6/B,mBAAAE,EAAmE,GACnE//B,KAAAimG,OAAAD,GAEAhmG,KAAA8/B,eAAgG,EAChGC,GA8QA,OAzQAjB,IAAA29C,EAAAzsE,UAAA8uB,GACA29C,EAAAnoF,UAAAD,OAAA+K,OAAA0/B,KAAAxqC,WACAmoF,EAAAnoF,UAAA2b,YAAAwsE,EAOAA,EAAAnoF,UAAA+xG,cAAA,SAAAt9D,GAEA,IAAA1G,EACA,GAAAriC,KAAAkyB,gBAIK,CACL,IAAAC,EAAAnyB,KAAAkyB,gBAAAj6B,OACMsJ,GAAMvB,KAAAkyB,gBAAA6W,EAAA7J,sBAEZ,QAAAlnC,EAAA,EAAA4Y,GADAyxB,EAAA0G,EAAAX,UAAAtsC,SACA7D,OAAuCD,EAAA4Y,IAAQ5Y,EAC/CqqC,EAAArqC,IAAAm6B,OARAnyB,KAAAkyB,gBAAA6W,EAAA7J,qBAAApjC,QACAumC,EAAA0G,EAAAX,UAAAtsC,QACAkE,KAAAimG,OAAAlwG,OASAiK,KAAAimG,OAAAlwG,KAAAssC,GACAriC,KAAAgW,WASAymE,EAAAnoF,UAAAysC,MAAA,WAGA,IAFA,IAAAn+B,EAAA5C,KAAAimG,OAAAhuG,OACAquG,EAAA,IAAAnwF,MAAAvT,GACA5K,EAAA,EAAmBA,EAAA4K,IAAS5K,EAC5BsuG,EAAAtuG,GAAAgI,KAAAimG,OAAAjuG,GAAA8D,QAGA,WAAA2gF,EACAz8E,KAAAkyB,gBAAAp2B,QAAAkE,KAAA2+B,OAAA2nE,IAMA7pB,EAAAnoF,UAAA0sC,eAAA,SAAAljB,EAAAE,EAAAijB,EAAAC,GACA,OAAAA,EAA6B3P,GAAwBvxB,KAAAk4B,YAAApa,EAAAE,GACrDkjB,GAEAlhC,KAAAilC,mBAAAjlC,KAAAiW,gBACAjW,KAAAglC,UAAA9kC,KAAAsE,KtHzDO,SAAA0tB,EAAAC,EAAA2R,EAAA1R,EAAAjyB,GACP,QAAAnI,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACAmI,EAAAwiC,GACAzQ,EAAAC,EAAAkQ,EAAAjQ,EAAAjyB,GACAgyB,EAAAkQ,IAAApqC,OAAA,GAEA,OAAAkI,EsHkDiComG,CACjCvmG,KAAAkyB,gBAAA,EAAAlyB,KAAAimG,OAAAjmG,KAAAoyB,OAAA,IACApyB,KAAAilC,kBAAAjlC,KAAAiW,etH4EO,SAAAic,EAAAC,EACP2R,EAAA1R,EAAAyQ,EAAAC,EAAAhlB,EAAAE,EAAAijB,EAAAC,EACA6B,GAEA,IADA,IAAAE,EAAAF,GAAA,CAAAzB,SACAtpC,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACAkpC,EAAAgC,GACAhR,EAAAC,EAAAkQ,EAAAjQ,EACAyQ,EAAAC,EAAAhlB,EAAAE,EAAAijB,EAAAC,EAAA+B,GACA9Q,EAAAkQ,IAAApqC,OAAA,GAEA,OAAAipC,EsHrFWslE,CACXxmG,KAAAmoC,6BAAA,EAAAnoC,KAAAimG,OAAAjmG,KAAAoyB,OACApyB,KAAAglC,WAAA,EAAAlnB,EAAAE,EAAAijB,EAAAC,KAMAu7C,EAAAnoF,UAAA6sC,WAAA,SAAArjB,EAAAE,GACA,OhH1EO,SAAAkU,EAAAC,EAAA2R,EAAA1R,EAAAtU,EAAAE,GACP,OAAA8lB,EAAA7rC,OACA,SAEA,QAAAD,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACA,GAAAwtC,GAAAtT,EAAAC,EAAAkQ,EAAAjQ,EAAAtU,EAAAE,GACA,SAEAmU,EAAAkQ,IAAApqC,OAAA,GAEA,SgH+DWwuG,CAAsBzmG,KAAAmoC,6BAAA,EAAAnoC,KAAAimG,OAAAjmG,KAAAoyB,OAAAtU,EAAAE,IAQjCy+D,EAAAnoF,UAAA4wC,QAAA,WACA,OvHjIO,SAAAhT,EAAAC,EAAA2R,EAAA1R,GAEP,IADA,IAAAxtB,EAAA,EACA5M,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACA4M,GAAYw9B,GAAWlQ,EAAAC,EAAAkQ,EAAAjQ,GACvBD,EAAAkQ,IAAApqC,OAAA,GAEA,OAAA2M,EuH0HW8hG,CAAgB1mG,KAAAmoC,6BAAA,EAAAnoC,KAAAimG,OAAAjmG,KAAAoyB,SAiB3BqqD,EAAAnoF,UAAA0qC,eAAA,SAAAsI,GACA,IAAApV,EASA,YARAn6B,IAAAuvC,EAEMG,GADNvV,EAAAlyB,KAAAmoC,6BAAArsC,QAEA,EAAAkE,KAAAimG,OAAAjmG,KAAAoyB,OAAAkV,GAEApV,EAAAlyB,KAAAkyB,gBAGW2R,GACX3R,EAAA,EAAAlyB,KAAAimG,OAAAjmG,KAAAoyB,SAMAqqD,EAAAnoF,UAAA0mE,SAAA,WACA,OAAAh7D,KAAAimG,QAMAxpB,EAAAnoF,UAAA4mE,sBAAA,WACA,GAAAl7D,KAAAkmG,6BAAAlmG,KAAAiW,cAAA,CACA,IAAAyvB,ECnNO,SAAqBxT,EAAAC,EAAA2R,EAAA1R,GAG5B,IAFA,IAAAsT,EAAA,GACAzU,EvI0LA,CAAA9vB,SAAA,UuIzLAnJ,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACAi5B,EAAagB,GAAiCC,EAAAC,EAAAkQ,EAAA,GAAAjQ,GAC9CsT,EAAA3vC,MAAAk7B,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OACAkB,EAAAkQ,IAAApqC,OAAA,GAEA,OAAAytC,ED0MwBihE,CACxB3mG,KAAAkyB,gBAAA,EAAAlyB,KAAAimG,OAAAjmG,KAAAoyB,QACApyB,KAAAmmG,oB/G/IO,SAAAj0E,EAAAC,EAAA2R,EAAA1R,EAAAsT,GAEP,IADA,IAAA+yC,EAAA,GACAzgF,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACAygF,EAAAhzC,GAAAvT,EACAC,EAAAkQ,EAAAjQ,EAAAsT,EAAA,EAAA1tC,EAAAygF,GACAtmD,EAAAkQ,IAAApqC,OAAA,GAEA,OAAAwgF,E+GuIiCmuB,CACjC5mG,KAAAmoC,6BAAA,EAAAnoC,KAAAimG,OAAAjmG,KAAAoyB,OACAsT,GACA1lC,KAAAkmG,4BAAAlmG,KAAAiW,cAEA,OAAAjW,KAAAmmG,qBASA1pB,EAAAnoF,UAAAuyG,kBAAA,WACA,WAAenB,GAAU1lG,KAAAk7D,wBAAAp/D,QAAuCs5B,GAAcG,MAM9EknD,EAAAnoF,UAAA6zC,2BAAA,WACA,GAAAnoC,KAAA+nC,mBAAA/nC,KAAAiW,cAAA,CACA,IAAAic,EAAAlyB,KAAAkyB,iB3G5KO,SAAAA,EAAAC,EAAA2R,EAAA1R,EAAAkV,GACP,QAAAtvC,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAC5C,IAAAqvC,GACAnV,EAAAC,EAAA2R,EAAA9rC,GAAAo6B,EAAAkV,GACA,SAGA,S2GsKUw/D,CACV50E,EAAA,EAAAlyB,KAAAimG,OAAAjmG,KAAAoyB,SAGApyB,KAAAgoC,yBAAA9V,EAAAp2B,QACAkE,KAAAgoC,yBAAA/vC,OACYwvC,GACZznC,KAAAgoC,yBAAA,EAAAhoC,KAAAimG,OAAAjmG,KAAAoyB,SALApyB,KAAAgoC,yBAAA9V,EAOAlyB,KAAA+nC,kBAAA/nC,KAAAiW,cAEA,OAAAjW,KAAAgoC,0BAMAy0C,EAAAnoF,UAAAqrC,8BAAA,SAAAL,GACA,IAAA4E,EAAA,GACA6iE,EAAA,GAKA,OAJA7iE,EAAAjsC,OnH6GO,SACPi6B,EAAAC,EAAA2R,EAAA1R,EACAsP,EACAwC,EAAAC,EAAA4iE,GACA,QAAA/uG,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACAysC,EAAA,GACAN,EAAAU,GACA3S,EAAAC,EAAAkQ,EAAAjQ,EACAsP,EACAwC,EAAAC,EAAAM,GACAsiE,EAAAhxG,KAAA0uC,GACAtS,EAAAkQ,IAAApqC,OAAA,GAEA,OAAAksC,EmH3HuC6iE,CACvChnG,KAAAkyB,gBAAA,EAAAlyB,KAAAimG,OAAAjmG,KAAAoyB,OACAlyB,KAAAsE,KAAA86B,GACA4E,EAAA,EAAA6iE,GACA,IAAAtqB,EAAAv4C,EAAuD9O,GAAcC,GAAA0xE,IASrEtqB,EAAAnoF,UAAA2yG,WAAA,SAAA1jG,GACA,GAAAA,EAAA,GAAAvD,KAAAimG,OAAAhuG,QAAAsL,EACA,YAEA,IAAA4uB,EACA,OAAA5uB,EACA4uB,EAAA,MACK,CACL,IAAA+0E,EAAAlnG,KAAAimG,OAAA1iG,EAAA,GACA4uB,EAAA+0E,IAAAjvG,OAAA,GAEA,IAAAoqC,EAAAriC,KAAAimG,OAAA1iG,GAAAzH,QACAinB,EAAAsf,IAAApqC,OAAA,GACA,OAAAk6B,EACA,QAAAn6B,EAAA,EAAA4Y,EAAAyxB,EAAApqC,OAAuCD,EAAA4Y,IAAQ5Y,EAC/CqqC,EAAArqC,IAAAm6B,EAGA,WAAeyW,GAAO5oC,KAAAkyB,gBAAAp2B,MAAAq2B,EAAApP,GAAA/iB,KAAA2+B,OAAA0D,IAQtBo6C,EAAAnoF,UAAA6yG,YAAA,WAMA,IALA,IAAAxoE,EAAA3+B,KAAA2+B,OACAzM,EAAAlyB,KAAAkyB,gBACA4R,EAAA9jC,KAAAimG,OACAG,EAAA,GACAj0E,EAAA,EACAn6B,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAsCD,EAAA4Y,IAAQ5Y,EAAA,CAC9C,IAAAqqC,EAAAyB,EAAA9rC,GAAA8D,QACAinB,EAAAsf,IAAApqC,OAAA,GACA,OAAAk6B,EACA,QAAA32B,EAAA,EAAAgoC,EAAAnB,EAAApqC,OAAyCuD,EAAAgoC,IAAQhoC,EACjD6mC,EAAA7mC,IAAA22B,EAGA,IAAA4W,EAAA,IAAwBH,GAAO1W,EAAAp2B,MAAAq2B,EAAApP,GAAA4b,EAAA0D,GAC/B+jE,EAAArwG,KAAAgzC,GACA5W,EAAApP,EAEA,OAAAqjF,GAOA3pB,EAAAnoF,UAAAqtC,QAAA,WACA,OAAWjN,GAAYO,eAOvBwnD,EAAAnoF,UAAAstC,iBAAA,SAAA3Q,GACA,O7GrNO,SAAAiB,EAAAC,EAAA2R,EAAA1R,EAAAnB,GACP,QAAAj5B,EAAA,EAAA4Y,EAAAkzB,EAAA7rC,OAAoCD,EAAA4Y,IAAQ5Y,EAAA,CAC5C,IAAAqqC,EAAAyB,EAAA9rC,GACA,GAAAgvC,GACA9U,EAAAC,EAAAkQ,EAAAjQ,EAAAnB,GACA,SAEAkB,EAAAkQ,IAAApqC,OAAA,GAEA,S6G4MWmvG,CACXpnG,KAAAmoC,6BAAA,EAAAnoC,KAAAimG,OAAAjmG,KAAAoyB,OAAAnB,IAUAwrD,EAAAnoF,UAAAwrC,eAAA,SAAA9O,EAAA+O,GACA//B,KAAAggC,UAAAD,EAAA/O,EAAA,GACAhxB,KAAAkyB,kBACAlyB,KAAAkyB,gBAAA,IAEA,IAAA4R,ErHnSO,SAAA5R,EAAAC,EAAA6R,EAAA5R,EAAA4zE,GAGP,IAFA,IAAAliE,EAAAkiE,GAAA,GACAhuG,EAAA,EACAwD,EAAA,EAAAgoC,EAAAQ,EAAA/rC,OAA4CuD,EAAAgoC,IAAQhoC,EAAA,CACpD,IAAA6mC,EAAAgB,GACAnR,EAAAC,EAAA6R,EAAAxoC,GAAA42B,EAAA0R,EAAA9rC,IACA8rC,EAAA9rC,KAAAqqC,EACAlQ,EAAAkQ,IAAApqC,OAAA,GAGA,OADA6rC,EAAA7rC,OAAAD,EACA8rC,EqHyRgBujE,CAChBrnG,KAAAkyB,gBAAA,EAAAlB,EAAAhxB,KAAAoyB,OAAApyB,KAAAimG,QACA,OAAAniE,EAAA7rC,OACA+H,KAAAkyB,gBAAAj6B,OAAA,MACK,CACL,IAAAqvG,EAAAxjE,IAAA7rC,OAAA,GACA+H,KAAAkyB,gBAAAj6B,OAAA,IAAAqvG,EAAArvG,OACA,EAAAqvG,IAAArvG,OAAA,GAEA+H,KAAAgW,WAGAymE,EAxVgB,CAyVd79C,IE7VE2oE,GAAU,SAAAjsG,GAMd0E,KAAAm1E,SAAA75E,EAAAu4C,QAMA7zC,KAAAs1E,gBAAAh6E,EAAAu3E,eAMA7yE,KAAAwjD,UAAAloD,EAAAwzB,SAMA9uB,KAAAu1E,OAAAj6E,EAAAq0B,OASA43E,GAAUjzG,UAAAysC,MAAA,WACV,WAAawmE,GAAU,CACvB1zD,QAAA7zC,KAAAo0C,aACAzkB,MAAA3vB,KAAAs9D,WACAxuC,SAAA9uB,KAAAitC,cACA4lC,eAAA7yE,KAAAq9D,uBASAkqC,GAAUjzG,UAAA8/C,WAAA,WACV,OAAAp0C,KAAAm1E,UAQAoyB,GAAUjzG,UAAA+oE,kBAAA,WACV,OAAAr9D,KAAAs1E,iBAQAiyB,GAAUjzG,UAAA24C,YAAA,WACV,OAAAjtC,KAAAwjD,WAQA+jD,GAAUjzG,UAAAgpE,SAAA,WACV,OAAAt9D,KAAAu1E,QASAgyB,GAAUjzG,UAAAkzG,eAAA,WACV,UASAD,GAAUjzG,UAAA0oE,UAAA,WACV,OAAS1tD,KASTi4F,GAAUjzG,UAAA+6D,SAAA,SAAA3e,GACV,OAASphC,KAQTi4F,GAAUjzG,UAAAshF,qBAAA,SAAAllC,GACV,OAASphC,KAOTi4F,GAAUjzG,UAAA4nF,cAAA,WACV,OAAS5sE,KAOTi4F,GAAUjzG,UAAAmzG,aAAA,WACV,OAASn4F,KAOTi4F,GAAUjzG,UAAAozG,yBAAA,WACV,OAASp4F,KAQTi4F,GAAUjzG,UAAA6oE,UAAA,WACV,OAAS7tD,KAQTi4F,GAAUjzG,UAAAgoD,QAAA,WACV,OAAShtC,KASTi4F,GAAUjzG,UAAAwgD,WAAA,SAAAjB,GACV7zC,KAAAm1E,SAAAthC,GASA0zD,GAAUjzG,UAAAqzG,kBAAA,SAAA90B,GACV7yE,KAAAs1E,gBAAAzC,GASA00B,GAAUjzG,UAAAk5C,YAAA,SAAA1e,GACV9uB,KAAAwjD,UAAA10B,GAQAy4E,GAAUjzG,UAAAszG,SAAA,SAAAj4E,GACV3vB,KAAAu1E,OAAA5lD,GASA43E,GAAUjzG,UAAAuzG,eAAA,SAAAr4B,KASV+3B,GAAUjzG,UAAA8oF,kBAAA,SAAAjsE,EAAA2vD,GACV,OAASxxD,KAOTi4F,GAAUjzG,UAAA0O,KAAA,WACRsM,KASFi4F,GAAUjzG,UAAA6oF,oBAAA,SAAAhsE,EAAA2vD,GACRxxD,KAGa,ICvLAw4F,GApDf,SAAAC,GACA,SAAAC,EAAAnwF,GAEA,IAAAvc,EAAAuc,GAAoD,GAEpDkwF,EAAAvzG,KAAAwL,KAAA,CACA8lG,OAAA3kG,IACA+4D,KAAA5+D,EAAA4+D,KACAjkC,OAAA36B,EAAA26B,OACAkkC,OAAA7+D,EAAA6+D,OACA8tC,aAAA3sG,EAAA2sG,eAsCA,OAjCAF,IAAAC,EAAAh4F,UAAA+3F,GACAC,EAAA1zG,UAAAD,OAAA+K,OAAA2oG,KAAAzzG,WACA0zG,EAAA1zG,UAAA2b,YAAA+3F,EAQAA,EAAA1zG,UAAAysC,MAAA,WACA,IAAA73B,EAAA,IAAA8+F,EAAA,CACA9tC,KAAAl6D,KAAAo6D,UAAAp6D,KAAAo6D,UAAAr5B,aAAAhpC,EACAoiE,OAAAn6D,KAAAq6D,YAAAr6D,KAAAq6D,YAAAt5B,aAAAhpC,EACAk+B,OAAAj2B,KAAAojG,YACA6E,aAAAjoG,KAAAkoG,gBAIA,OAFAh/F,EAAA4rC,WAAA90C,KAAAo0C,cACAlrC,EAAA0+F,SAAA5nG,KAAAs9D,YACAp0D,GASA8+F,EAAA1zG,UAAAgvG,UAAA,SAAArtE,GACAj2B,KAAAmoG,QAAAlyE,EACAj2B,KAAA0pD,QAAA1pD,KAAAkoG,gBAGAF,EAhDA,CC6BgB,SAAAI,GAChB,SAAAL,EAAAzsG,GAIA,IAAAu3E,OAAA96E,IAAAuD,EAAAu3E,gBACAv3E,EAAAu3E,eAEAu1B,EAAA5zG,KAAAwL,KAAA,CACA6zC,QAAA,EACAg/B,iBACA/jD,cAAA/2B,IAAAuD,EAAAwzB,SAAAxzB,EAAAwzB,SAAA,EACAa,MAAA,IAOA3vB,KAAAqoG,WAAA,KAMAroG,KAAAivD,QAAA,KAMAjvD,KAAAsoG,oBAAA,KAMAtoG,KAAAovE,WAAAr3E,IAAAuD,EAAA4+D,KAAA5+D,EAAA4+D,KAAA,KAMAl6D,KAAA+vF,QAAA,MAMA/vF,KAAAolD,QAAA9pD,EAAAwqG,OAMA9lG,KAAAmoG,aAAqCpwG,IAAAuD,EAAA26B,OACrC36B,EAAA26B,OAAA36B,EAAAitG,QAMAvoG,KAAAwoG,SAAAltG,EAAAmtG,QAMAzoG,KAAAqlD,YAAAttD,IAAAuD,EAAA+zB,MAAA/zB,EAAA+zB,MAAA,EAMArvB,KAAA0oG,aAAA3wG,IAAAuD,EAAA6+D,OAAA7+D,EAAA6+D,OAAA,KAMAn6D,KAAA6tD,QAAA,KAMA7tD,KAAA2oG,MAAA,KAMA3oG,KAAA4oG,WAAA,KAMA5oG,KAAA6oG,uBAAA,KAMA7oG,KAAAkoG,cAAA5sG,EAAA2sG,aAEAjoG,KAAA0pD,QAAA1pD,KAAAkoG,eA0aA,OAtaAE,IAAAL,EAAA/3F,UAAAo4F,GACAL,EAAAzzG,UAAAD,OAAA+K,OAAAgpG,KAAA9zG,WACAyzG,EAAAzzG,UAAA2b,YAAA83F,EAOAA,EAAAzzG,UAAAysC,MAAA,WACA,IAAA73B,EAAA,IAAA6+F,EAAA,CACA7tC,KAAAl6D,KAAAo6D,UAAAp6D,KAAAo6D,UAAAr5B,aAAAhpC,EACA+tG,OAAA9lG,KAAA6lG,YACA5vE,OAAAj2B,KAAAojG,YACAqF,QAAAzoG,KAAA8oG,aACAz5E,MAAArvB,KAAAylD,WACA0U,OAAAn6D,KAAAq6D,YAAAr6D,KAAAq6D,YAAAt5B,aAAAhpC,EACA+2B,SAAA9uB,KAAAitC,cACA4lC,eAAA7yE,KAAAq9D,oBACA4qC,aAAAjoG,KAAAkoG,gBAIA,OAFAh/F,EAAA4rC,WAAA90C,KAAAo0C,cACAlrC,EAAA0+F,SAAA5nG,KAAAs9D,YACAp0D,GAOA6+F,EAAAzzG,UAAA0oE,UAAA,WACA,OAAAh9D,KAAA6tD,SAQAk6C,EAAAzzG,UAAAmxD,SAAA,WACA,OAAAzlD,KAAAqlD,QAQA0iD,EAAAzzG,UAAA8lE,QAAA,WACA,OAAAp6D,KAAAovE,OAMA24B,EAAAzzG,UAAAshF,qBAAA,SAAAllC,GACA,OAAA1wC,KAAAsoG,qBAOAP,EAAAzzG,UAAA+6D,SAAA,SAAA3e,GACA,OAAA1wC,KAAAivD,SAMA84C,EAAAzzG,UAAAmzG,aAAA,WACA,OAAAznG,KAAA4oG,YAMAb,EAAAzzG,UAAAozG,yBAAA,WACA,OAAA1nG,KAAA6oG,wBAMAd,EAAAzzG,UAAA4nF,cAAA,WACA,OAAWvtB,GAAUvkC,QAOrB29E,EAAAzzG,UAAA6oE,UAAA,WACA,OAAAn9D,KAAA+vF,SAQAgY,EAAAzzG,UAAAuxG,UAAA,WACA,OAAA7lG,KAAAolD,SAQA2iD,EAAAzzG,UAAA8uG,UAAA,WACA,OAAApjG,KAAAmoG,SAQAJ,EAAAzzG,UAAAw0G,WAAA,WACA,OAAA9oG,KAAAwoG,UAOAT,EAAAzzG,UAAAgoD,QAAA,WACA,OAAAt8C,KAAA2oG,OAQAZ,EAAAzzG,UAAA+lE,UAAA,WACA,OAAAr6D,KAAA0oG,SAMAX,EAAAzzG,UAAA8oF,kBAAA,SAAAjsE,EAAA2vD,KAOAinC,EAAAzzG,UAAA0O,KAAA,aAKA+kG,EAAAzzG,UAAA6oF,oBAAA,SAAAhsE,EAAA2vD,KAMAinC,EAAAzzG,UAAAo1D,QAAA,SAAAu+C,GACA,IAAA7qC,EAMA9G,EALAiF,EAAA,GACAG,EAAA,GACAE,EAAA,EACAJ,EAAA,KACAC,EAAA,EAEA0X,EAAA,EAEAnzE,KAAA0oG,UAEA,QADApyC,EAAAt2D,KAAA0oG,QAAAxsC,cAEA5F,EAAsB5E,IAEtB4E,EAAoB1B,GAAW0B,QAE/Bv+D,KADAo7E,EAAAnzE,KAAA0oG,QAAAx1E,cAEAigD,ErEtLO,GqEwLP3X,EAAAx7D,KAAA0oG,QAAAnsC,cACAd,EAAAz7D,KAAA0oG,QAAAjsC,oBACWriD,IACXohD,EAAA,KACAC,EAAA,QAGA1jE,KADA2jE,EAAA17D,KAAA0oG,QAAA/rC,iBAEAjB,ErE1OO,cqE6OP3jE,KADAwjE,EAAAv7D,KAAA0oG,QAAArsC,gBAEAd,ErEnQO,cqEsQPxjE,KADA6jE,EAAA57D,KAAA0oG,QAAA5rC,mBAEAlB,ErE3OO,KqE+OP,IAAAnoC,EAAA,GAAAzzB,KAAAmoG,QAAAh1B,GAAA,EAGA41B,EAAA,CACAzyC,cACA6c,cACA1/C,OACA8nC,UACAC,WACAC,iBACAC,WACAE,cAGA,QAAA7jE,IAAAkwG,EAAA,CAEA,IAAA93C,EAAoBje,GAAqBze,KACzCzzB,KAAAivD,QAAAkB,EAAA9d,OAIA+qB,EADA3pC,EAAAzzB,KAAAivD,QAAA9sC,MAGAniB,KAAAgpG,MAAAD,EAAA54C,EAAA,KAEAnwD,KAAAipG,0BAAAF,OACK,CAELt1E,EAAAvzB,KAAAykC,MAAAlR,GAEA,IACAy1E,EADAC,GAAAnpG,KAAAovE,MAEA+5B,IAEAD,EACAlpG,KAAAopG,wBAAA9pG,KAAAU,KAAA+oG,IAGA,IAAAzvG,EAAA0G,KAAAqpG,cACAC,EAAArB,EAAA94E,IACA71B,EAAAm6B,IAAAzzB,KAAAgpG,MAAA1pG,KAAAU,KAAA+oG,GACAG,GAEAlpG,KAAAivD,QAAAq6C,EAAAz1C,MACA7zD,KAAA+vF,QAAA,CAAAuZ,EAAA71C,QAAA61C,EAAA51C,SACA0J,EAAAksC,EAAAz1C,MAAA1xC,MAEAgnF,GACAnpG,KAAAsoG,oBAAAgB,EAAAC,SACAvpG,KAAA6oG,uBACA,CAAAS,EAAAC,SAAApnF,MAAAmnF,EAAAC,SAAAvnG,UAEAhC,KAAAsoG,oBAAAtoG,KAAAivD,QACAjvD,KAAA6oG,uBAAA,CAAAzrC,MAIAp9D,KAAA6tD,QAAA,CAAAp6B,EAAA,EAAAA,EAAA,GACAzzB,KAAA2oG,MAAA,CAAAl1E,KACAzzB,KAAA4oG,WAAA,CAAAxrC,MAUA2qC,EAAAzzG,UAAA00G,MAAA,SAAAD,EAAA54C,EAAAryC,EAAAE,GACA,IAAAhmB,EAAAwxG,EAAAC,EAEAt5C,EAAAgE,aAAA,aAGAhE,EAAAvvB,UAAA9iB,EAAAE,GAEAmyC,EAAA6J,YAEA,IAAA8rC,EAAA9lG,KAAAolD,QACA,GAAA0gD,IAAA3kG,IACAgvD,EAAA8J,IACA8uC,EAAAt1E,KAAA,EAAAs1E,EAAAt1E,KAAA,EACAzzB,KAAAmoG,QAAA,IAAAjoG,KAAAuuB,IAAA,OACK,CACL,IAAAg6E,OAAA1wG,IAAAiI,KAAAwoG,SAAAxoG,KAAAwoG,SACAxoG,KAAAmoG,QAIA,IAHAM,IAAAzoG,KAAAmoG,UACArC,GAAA,GAEA9tG,EAAA,EAAiBA,GAAA8tG,EAAa9tG,IAC9BwxG,EAAA,EAAAxxG,EAAAkI,KAAAuuB,GAAAq3E,EAAA5lG,KAAAuuB,GAAA,EAAAzuB,KAAAqlD,OACAokD,EAAAzxG,EAAA,KAAAgI,KAAAmoG,QAAAM,EACAt4C,EAAAwJ,OAAAovC,EAAAt1E,KAAA,EAAAg2E,EAAAvpG,KAAAqvB,IAAAi6E,GACAT,EAAAt1E,KAAA,EAAAg2E,EAAAvpG,KAAAuvB,IAAA+5E,IAKA,GAAAxpG,KAAAovE,MAAA,CACA,IAAA7a,EAAAv0D,KAAAovE,MAAAlT,WACA,OAAA3H,IACAA,EAAgB/C,IAEhBrB,EAAAkG,UAA0BzB,GAAWL,GACrCpE,EAAA+J,OAEAl6D,KAAA0oG,UACAv4C,EAAAmG,YAAAyyC,EAAAzyC,YACAnG,EAAAwL,UAAAotC,EAAA51B,YACA41B,EAAAvtC,WACArL,EAAA51C,YAAAwuF,EAAAvtC,UACArL,EAAAsL,eAAAstC,EAAAttC,gBAEAtL,EAAAoL,QAAiDwtC,EAAA,QACjD54C,EAAAuL,SAAmDqtC,EAAA,SACnD54C,EAAAyL,WAAAmtC,EAAAntC,WACAzL,EAAAgK,UAEAhK,EAAAyJ,aAOAmuC,EAAAzzG,UAAA20G,0BAAA,SAAAF,GAEA,GADA/oG,KAAA6oG,uBAAA,CAAAE,EAAAt1E,KAAAs1E,EAAAt1E,MACAzzB,KAAAovE,MACApvE,KAAAsoG,oBAAAtoG,KAAAivD,YADA,CAOA,IAAAkB,EAAkBje,GAAqB62D,EAAAt1E,KAAAs1E,EAAAt1E,MACvCzzB,KAAAsoG,oBAAAn4C,EAAA9d,OAEAryC,KAAAopG,wBAAAL,EAAA54C,EAAA,OAUA43C,EAAAzzG,UAAA80G,wBAAA,SAAAL,EAAA54C,EAAAryC,EAAAE,GAEAmyC,EAAAgE,aAAA,aAGAhE,EAAAvvB,UAAA9iB,EAAAE,GAEAmyC,EAAA6J,YAEA,IAAA8rC,EAAA9lG,KAAAolD,QACA,GAAA0gD,IAAA3kG,IACAgvD,EAAA8J,IACA8uC,EAAAt1E,KAAA,EAAAs1E,EAAAt1E,KAAA,EACAzzB,KAAAmoG,QAAA,IAAAjoG,KAAAuuB,IAAA,OACK,CACL,IAKAz2B,EAAAyxG,EAAAD,EALAf,OAAA1wG,IAAAiI,KAAAwoG,SAAAxoG,KAAAwoG,SACAxoG,KAAAmoG,QAKA,IAJAM,IAAAzoG,KAAAmoG,UACArC,GAAA,GAGA9tG,EAAA,EAAiBA,GAAA8tG,EAAa9tG,IAC9BwxG,EAAA,EAAAxxG,EAAAkI,KAAAuuB,GAAAq3E,EAAA5lG,KAAAuuB,GAAA,EAAAzuB,KAAAqlD,OACAokD,EAAAzxG,EAAA,KAAAgI,KAAAmoG,QAAAM,EACAt4C,EAAAwJ,OAAAovC,EAAAt1E,KAAA,EAAAg2E,EAAAvpG,KAAAqvB,IAAAi6E,GACAT,EAAAt1E,KAAA,EAAAg2E,EAAAvpG,KAAAuvB,IAAA+5E,IAIAr5C,EAAAkG,UAAwB/B,GAAS9C,IACjCrB,EAAA+J,OACAl6D,KAAA0oG,UACAv4C,EAAAmG,YAAAyyC,EAAAzyC,YACAnG,EAAAwL,UAAAotC,EAAA51B,YACA41B,EAAAvtC,WACArL,EAAA51C,YAAAwuF,EAAAvtC,UACArL,EAAAsL,eAAAstC,EAAAttC,gBAEAtL,EAAAgK,UAEAhK,EAAAyJ,aAMAmuC,EAAAzzG,UAAA+0G,YAAA,WACA,IAAAK,EAAA1pG,KAAA0oG,QACA1oG,KAAA0oG,QAAAW,cAAA,IACAM,EAAA3pG,KAAAovE,MACApvE,KAAAovE,MAAAi6B,cAAA,IAUA,IARArpG,KAAAqoG,YACAqB,GAAA1pG,KAAAqoG,WAAA,IACAsB,GAAA3pG,KAAAqoG,WAAA,IACAroG,KAAAmoG,SAAAnoG,KAAAqoG,WAAA,IACAroG,KAAAwoG,UAAAxoG,KAAAqoG,WAAA,IACAroG,KAAAqlD,QAAArlD,KAAAqoG,WAAA,IACAroG,KAAAolD,SAAAplD,KAAAqoG,WAAA,GAEA,CACA,IAAAuB,EAAA,IAAAF,EAAAC,QACA5xG,IAAAiI,KAAAmoG,QAAAnoG,KAAAmoG,QAAA7hG,WAAA,WACAvO,IAAAiI,KAAAwoG,SAAAxoG,KAAAwoG,SAAAliG,WAAA,WACAvO,IAAAiI,KAAAqlD,OAAArlD,KAAAqlD,OAAA/+C,WAAA,WACAvO,IAAAiI,KAAAolD,QAAAplD,KAAAolD,QAAA9+C,WAAA,KACAtG,KAAAqoG,WAAA,CAAAuB,EAAAF,EAAAC,EACA3pG,KAAAmoG,QAAAnoG,KAAAwoG,SAAAxoG,KAAAqlD,OAAArlD,KAAAolD,SAGA,OAA6BplD,KAAAqoG,WAAA,IAG7BN,EAphBgB,CF8MD,KG9Of8B,GAAA,SAAAhyF,GAEA,IAAAvc,EAAAuc,GAAA,GAMA7X,KAAA8pG,YAAA/xG,IAAAuD,EAAAi5D,MAAAj5D,EAAAi5D,MAAA,KAMAv0D,KAAA+pG,eAAAhyG,GAQA8xG,GAAAv1G,UAAAysC,MAAA,WACA,IAAAwzB,EAAAv0D,KAAAk8D,WACA,WAAA2tC,GAAA,CACAt1C,MAAAp+C,MAAAC,QAAAm+C,KAAAz4D,QAAAy4D,QAAAx8D,KASA8xG,GAAAv1G,UAAA4nE,SAAA,WACA,OAAAl8D,KAAA8pG,QASAD,GAAAv1G,UAAA01G,SAAA,SAAAz1C,GACAv0D,KAAA8pG,OAAAv1C,EACAv0D,KAAA+pG,eAAAhyG,GAMA8xG,GAAAv1G,UAAA+0G,YAAA,WACA,QAAAtxG,IAAAiI,KAAA+pG,UAAA,CACA,IAAAx1C,EAAAv0D,KAAA8pG,OACAv1C,EACAp+C,MAAAC,QAAAm+C,IAAA,iBAAAA,EACAv0D,KAAA+pG,UAAA,IAA+Bz1C,GAAuD,GAEtFt0D,KAAA+pG,UAAyBv6F,EAAMxP,KAAA8pG,QAG/B9pG,KAAA+pG,UAAA,KAIA,OAAA/pG,KAAA+pG,WAGe,IAAAE,GAAA,GC3DfC,GAAA,SAAAryF,GAEA,IAAAvc,EAAAuc,GAAA,GAMA7X,KAAA8pG,YAAA/xG,IAAAuD,EAAAi5D,MAAAj5D,EAAAi5D,MAAA,KAMAv0D,KAAAmqG,SAAA7uG,EAAAigE,QAMAv7D,KAAAoqG,eAAAryG,IAAAuD,EAAAkgE,SAAAlgE,EAAAkgE,SAAA,KAMAx7D,KAAAqqG,gBAAA/uG,EAAAmgE,eAMAz7D,KAAAsqG,UAAAhvG,EAAAogE,SAMA17D,KAAAuqG,YAAAjvG,EAAAsgE,WAMA57D,KAAAw1E,OAAAl6E,EAAA6mB,MAMAniB,KAAA+pG,eAAAhyG,GAQAmyG,GAAA51G,UAAAysC,MAAA,WACA,IAAAwzB,EAAAv0D,KAAAk8D,WACA,WAAAguC,GAAA,CACA31C,MAAAp+C,MAAAC,QAAAm+C,KAAAz4D,QAAAy4D,QAAAx8D,EACAwjE,QAAAv7D,KAAAq8D,aACAb,SAAAx7D,KAAAu8D,cAAAv8D,KAAAu8D,cAAAzgE,aAAA/D,EACA0jE,eAAAz7D,KAAAy8D,oBACAf,SAAA17D,KAAA28D,cACAf,WAAA57D,KAAA88D,gBACA36C,MAAAniB,KAAAkzB,cASAg3E,GAAA51G,UAAA4nE,SAAA,WACA,OAAAl8D,KAAA8pG,QAQAI,GAAA51G,UAAA+nE,WAAA,WACA,OAAAr8D,KAAAmqG,UAQAD,GAAA51G,UAAAioE,YAAA,WACA,OAAAv8D,KAAAoqG,WAQAF,GAAA51G,UAAAmoE,kBAAA,WACA,OAAAz8D,KAAAqqG,iBAQAH,GAAA51G,UAAAqoE,YAAA,WACA,OAAA38D,KAAAsqG,WAQAJ,GAAA51G,UAAAwoE,cAAA,WACA,OAAA98D,KAAAuqG,aAQAL,GAAA51G,UAAA4+B,SAAA,WACA,OAAAlzB,KAAAw1E,QASA00B,GAAA51G,UAAA01G,SAAA,SAAAz1C,GACAv0D,KAAA8pG,OAAAv1C,EACAv0D,KAAA+pG,eAAAhyG,GASAmyG,GAAA51G,UAAAk2G,WAAA,SAAAjvC,GACAv7D,KAAAmqG,SAAA5uC,EACAv7D,KAAA+pG,eAAAhyG,GAeAmyG,GAAA51G,UAAAimB,YAAA,SAAAihD,GACAx7D,KAAAoqG,UAAA5uC,EACAx7D,KAAA+pG,eAAAhyG,GASAmyG,GAAA51G,UAAAm2G,kBAAA,SAAAhvC,GACAz7D,KAAAqqG,gBAAA5uC,EACAz7D,KAAA+pG,eAAAhyG,GASAmyG,GAAA51G,UAAAo2G,YAAA,SAAAhvC,GACA17D,KAAAsqG,UAAA5uC,EACA17D,KAAA+pG,eAAAhyG,GASAmyG,GAAA51G,UAAAq2G,cAAA,SAAA/uC,GACA57D,KAAAuqG,YAAA3uC,EACA57D,KAAA+pG,eAAAhyG,GASAmyG,GAAA51G,UAAAs2G,SAAA,SAAAzoF,GACAniB,KAAAw1E,OAAArzD,EACAniB,KAAA+pG,eAAAhyG,GAMAmyG,GAAA51G,UAAA+0G,YAAA,WA2BA,YA1BAtxG,IAAAiI,KAAA+pG,YACA/pG,KAAA+pG,UAAA,IACA/pG,KAAA8pG,OACA,iBAAA9pG,KAAA8pG,OACA9pG,KAAA+pG,WAAA/pG,KAAA8pG,OAEA9pG,KAAA+pG,WAA0Bv6F,EAAMxP,KAAA8pG,QAGhC9pG,KAAA+pG,WAAA,IAEA/pG,KAAA+pG,WAAA,UACAhyG,IAAAiI,KAAAmqG,SACAnqG,KAAAmqG,SAAA7jG,WAAA,UACAtG,KAAAoqG,UACApqG,KAAAoqG,UAAA9jG,WAAA,eACAvO,IAAAiI,KAAAqqG,gBACArqG,KAAAqqG,gBAAA,eACAtyG,IAAAiI,KAAAsqG,UACAtqG,KAAAsqG,UAAA,eACAvyG,IAAAiI,KAAAuqG,YACAvqG,KAAAuqG,YAAAjkG,WAAA,eACAvO,IAAAiI,KAAAw1E,OACAx1E,KAAAw1E,OAAAlvE,WAAA,MAGAtG,KAAA+pG,WAGe,IAAAc,GAAA,GCnIfC,GAAA,SAAAjzF,GAEA,IAAAvc,EAAAuc,GAAA,GAMA7X,KAAAupD,UAAA,KAMAvpD,KAAA+qG,kBAAAC,QAEAjzG,IAAAuD,EAAA01C,UACAhxC,KAAA2iG,YAAArnG,EAAA01C,UAOAhxC,KAAAovE,WAAAr3E,IAAAuD,EAAA4+D,KAAA5+D,EAAA4+D,KAAA,KAMAl6D,KAAAy3D,YAAA1/D,IAAAuD,EAAAu4D,MAAAv4D,EAAAu4D,MAAA,KAMA7zD,KAAAo5C,eAAArhD,IAAAuD,EAAAy5D,SAAAz5D,EAAAy5D,SAAA,KAMA/0D,KAAA0oG,aAAA3wG,IAAAuD,EAAA6+D,OAAA7+D,EAAA6+D,OAAA,KAMAn6D,KAAAo4D,WAAArgE,IAAAuD,EAAAg3D,KAAAh3D,EAAAg3D,KAAA,KAMAtyD,KAAAirG,QAAA3vG,EAAAy4C,QASA+2D,GAAAx2G,UAAAysC,MAAA,WACA,IAAAiQ,EAAAhxC,KAAA+pD,cAIA,OAHA/Y,GAAA,iBAAAA,IACAA,EAAgE,EAAAjQ,SAEhE,IAAA+pE,GAAA,CACA95D,WACAkpB,KAAAl6D,KAAAo6D,UAAAp6D,KAAAo6D,UAAAr5B,aAAAhpC,EACA87D,MAAA7zD,KAAAqvD,WAAArvD,KAAAqvD,WAAAtuB,aAAAhpC,EACAoiE,OAAAn6D,KAAAq6D,YAAAr6D,KAAAq6D,YAAAt5B,aAAAhpC,EACAu6D,KAAAtyD,KAAAs6D,UAAAt6D,KAAAs6D,UAAAv5B,aAAAhpC,EACAg8C,OAAA/zC,KAAAw0C,eAUAs2D,GAAAx2G,UAAA+nD,YAAA,WACA,OAAAr8C,KAAAo5C,WASA0xD,GAAAx2G,UAAA42G,YAAA,SAAAn2C,GACA/0D,KAAAo5C,UAAA2b,GAUA+1C,GAAAx2G,UAAAy1D,YAAA,WACA,OAAA/pD,KAAAupD,WASAuhD,GAAAx2G,UAAAimE,oBAAA,WACA,OAAAv6D,KAAA+qG,mBAQAD,GAAAx2G,UAAA8lE,QAAA,WACA,OAAAp6D,KAAAovE,OAQA07B,GAAAx2G,UAAA62G,QAAA,SAAAjxC,GACAl6D,KAAAovE,MAAAlV,GAQA4wC,GAAAx2G,UAAA+6D,SAAA,WACA,OAAArvD,KAAAy3D,QAQAqzC,GAAAx2G,UAAA82G,SAAA,SAAAv3C,GACA7zD,KAAAy3D,OAAA5D,GAQAi3C,GAAAx2G,UAAA+lE,UAAA,WACA,OAAAr6D,KAAA0oG,SAQAoC,GAAAx2G,UAAA+2G,UAAA,SAAAlxC,GACAn6D,KAAA0oG,QAAAvuC,GAQA2wC,GAAAx2G,UAAAgmE,QAAA,WACA,OAAAt6D,KAAAo4D,OAQA0yC,GAAAx2G,UAAAg3G,QAAA,SAAAh5C,GACAtyD,KAAAo4D,MAAA9F,GAQAw4C,GAAAx2G,UAAAkgD,UAAA,WACA,OAAAx0C,KAAAirG,SAWAH,GAAAx2G,UAAAquG,YAAA,SAAA3xD,GACA,mBAAAA,EACAhxC,KAAA+qG,kBAAA/5D,EACG,iBAAAA,EACHhxC,KAAA+qG,kBAAA,SAAAzvD,GACA,OACyDA,EAAA/kD,IAAAy6C,IAGtDA,OAEAj5C,IAAAi5C,IACHhxC,KAAA+qG,kBAAA,WACA,WAHA/qG,KAAA+qG,kBAAAC,GAQAhrG,KAAAupD,UAAAvY,GASA85D,GAAAx2G,UAAA0gD,UAAA,SAAAjB,GACA/zC,KAAAirG,QAAAl3D,GAyCA,IAAAw3D,GAAA,KAQO,SAAAC,GAAAlwD,EAAA9nB,GAMP,IAAA+3E,GAAA,CACA,IAAArxC,EAAA,IAAmB+vC,GAAI,CACvB11C,MAAA,0BAEA4F,EAAA,IAAqB0wC,GAAM,CAC3Bt2C,MAAA,UACApyC,MAAA,OAEAopF,GAAA,CACA,IAAAT,GAAA,CACAj3C,MAAA,IAAmBi0C,GAAW,CAC9B5tC,OACAC,SACAlkC,OAAA,IAEAikC,OACAC,YAIA,OAAAoxC,GAQO,SAAAE,KAEP,IAAAnjG,EAAA,GACAojG,EAAA,gBACAC,EAAA,cA2DA,OAzDArjG,EAASosB,GAAYI,SAAA,CACrB,IAAAg2E,GAAA,CACA5wC,KAAA,IAAgB+vC,GAAI,CACpB11C,MAAA,sBAIAjsD,EAASosB,GAAYO,eACrB3sB,EAAaosB,GAAYI,SAEzBxsB,EAASosB,GAAYE,aAAA,CACrB,IAAAk2E,GAAA,CACA3wC,OAAA,IAAkB0wC,GAAM,CACxBt2C,MAAAm3C,EACAvpF,YAGA,IAAA2oF,GAAA,CACA3wC,OAAA,IAAkB0wC,GAAM,CACxBt2C,MAAAo3C,EACAxpF,MArBA,OAyBA7Z,EAASosB,GAAYM,mBACrB1sB,EAAaosB,GAAYE,aAEzBtsB,EAASosB,GAAYS,QACrB7sB,EAAaosB,GAAYI,SAAAx4B,OACzBgM,EAAeosB,GAAYE,cAI3BtsB,EAASosB,GAAYC,OAAA,CACrB,IAAAm2E,GAAA,CACAj3C,MAAA,IAAiBi0C,GAAW,CAC5B7xE,OAAA9T,EACA+3C,KAAA,IAAkB+vC,GAAI,CACtB11C,MAAAo3C,IAEAxxC,OAAA,IAAoB0wC,GAAM,CAC1Bt2C,MAAAm3C,EACAvpF,cAGA4xB,OAAA5yC,OAGAmH,EAASosB,GAAYK,aACrBzsB,EAAaosB,GAAYC,OAEzBrsB,EAASosB,GAAYQ,qBACrB5sB,EAAaosB,GAAYI,SAAAx4B,OACzBgM,EAAeosB,GAAYE,aAC3BtsB,EAAeosB,GAAYC,QAG3BrsB,EASA,SAAA0iG,GAAA1vD,GACA,OAAAA,EAAAyO,cAGe,ICpeX6hD,GACJ,cAaIC,GAAW,SAAArrD,GACf,SAAAsrD,EAAAj0F,GACA,IAAAvc,EAAAuc,GACuC,GAEvC29B,EAAsBllC,EAAM,GAAGhV,UAE/Bk6C,EAAAtsC,aACAssC,EAAAu2D,oBACAv2D,EAAA0pC,4BACA1pC,EAAA4pC,uBACA5+B,EAAAhsD,KAAAwL,KAAAw1C,GAMAx1C,KAAAgsG,gBAAAj0G,IAAAuD,EAAAi/E,WAAAj/E,EAAAi/E,UAMAv6E,KAAAm6E,mBAAApiF,IAAAuD,EAAAywG,aACAzwG,EAAAywG,aAAA,IAOA/rG,KAAAuiG,OAAA,KAOAviG,KAAAwiG,oBAAAzqG,EAEAiI,KAAAi1D,SAAA35D,EAAA4N,OAMAlJ,KAAAisG,2BAAAl0G,IAAAuD,EAAA4jF,sBACA5jF,EAAA4jF,qBAMAl/E,KAAAksG,6BAAAn0G,IAAAuD,EAAA8jF,wBACA9jF,EAAA8jF,uBAMAp/E,KAAAmsG,YAAA7wG,EAAAulF,YAA6CjxB,GAAgBD,OAO7D3vD,KAAA7D,KAAgBozD,GAASI,OA2GzB,OAvGAnP,IAAAsrD,EAAA97F,UAAAwwC,GACAsrD,EAAAx3G,UAAAD,OAAA+K,OAAAohD,KAAAlsD,WACAw3G,EAAAx3G,UAAA2b,YAAA67F,EAKAA,EAAAx3G,UAAAqpF,aAAA,WACA,OAAA39E,KAAAgsG,YAMAF,EAAAx3G,UAAA83G,aAAA,SAAA7xB,GACAv6E,KAAAgsG,WAAAzxB,GAMAuxB,EAAAx3G,UAAAmrF,gBAAA,WACA,OAAAz/E,KAAAm6E,eAOA2xB,EAAAx3G,UAAAqrF,eAAA,WACA,OACmE3/E,KAAAzJ,IAAcq1G,KAWjFE,EAAAx3G,UAAAwuG,SAAA,WACA,OAAA9iG,KAAAuiG,QAQAuJ,EAAAx3G,UAAAyrF,iBAAA,WACA,OAAA//E,KAAAwiG,gBAOAsJ,EAAAx3G,UAAA6qF,wBAAA,WACA,OAAAn/E,KAAAisG,uBAOAH,EAAAx3G,UAAA+qF,0BAAA,WACA,OAAAr/E,KAAAksG,yBAOAJ,EAAAx3G,UAAA+3G,eAAA,SAAAlrB,GACAnhF,KAAAxJ,IAAao1G,GAAQzqB,IAarB2qB,EAAAx3G,UAAA2gE,SAAA,SAAA/rD,GACAlJ,KAAAuiG,YAAAxqG,IAAAmR,IAAgDsiG,GAChDxrG,KAAAwiG,eAAA,OAAAt5F,OACAnR,EDgKO,SAAAsS,GACP,IAAAy1E,EAEA,sBAAAz1E,EACAy1E,EAAAz1E,MACG,CAIH,IAAA/B,EACA6N,MAAAC,QAAA/L,GACA/B,EAAA+B,GAEMkgB,GAA2B,qBAAAiqB,UACjC,IAEAlsC,EAAA,CADmC,IAGnCw3E,EAAA,WACA,OAAAx3E,GAGA,OAAAw3E,ECtLkBwsB,CAAetsG,KAAAuiG,QACjCviG,KAAAgW,WAMA81F,EAAAx3G,UAAAmyE,cAAA,WACA,OAAAzmE,KAAAmsG,aAGAL,EA9Ke,CA+KbvrD,IASFsrD,GAAWv3G,UAAAkpD,UAGI,IAAA+uD,GAAA,GC9PAC,GAAA,CACfC,aAAA,cACApyG,KAAA,OACA4wE,KAAA,OACAyhC,IAAA,OCyGO,SAASC,GAAG1+F,EAAAlO,GACnB,OArEO,SAAAkO,EAAAlO,EAAA6sG,EAAAC,GACP,gBAOA57E,EAAAuC,EAAAllB,GACA,IAAAw+F,EAAA,IAAAlzG,eACAkzG,EAAA/yG,KAAA,MACA,mBAAAkU,IAAAgjB,EAAAuC,EAAAllB,GAAAL,GACA,GACAlO,EAAA4hC,WAA8B6qE,GAAUC,eACxCK,EAAAC,aAAA,eAMAD,EAAAE,OAAA,SAAAl5F,GAEA,IAAAg5F,EAAAl0G,QAAAk0G,EAAAl0G,QAAA,KAAAk0G,EAAAl0G,OAAA,KACA,IAEAqO,EAFA9K,EAAA4D,EAAA4hC,UAGAxlC,GAAsBqwG,GAAUnyG,MAAA8B,GAAiBqwG,GAAUvhC,KAC3DhkE,EAAA6lG,EAAAvyG,aACW4B,GAAkBqwG,GAAUE,KACvCzlG,EAAA6lG,EAAAG,eAEAhmG,GAAA,IAAAimG,WAAAC,gBAAAL,EAAAvyG,aAAA,oBAEW4B,GAAkBqwG,GAAUC,eACvCxlG,EAA4C6lG,EAAA,UAE5C7lG,EACA2lG,EAAAp4G,KAAAwL,KAAAD,EAAAqtG,aAAAnmG,EACA,CAAeomG,kBAAA/+F,IACfvO,EAAAutG,eAAArmG,GAAAlH,EAAAwtG,iBAEAV,EAAAr4G,KAAAwL,WAGA6sG,EAAAr4G,KAAAwL,OAEOV,KAAAU,MAIP8sG,EAAAU,QAAA,WACAX,EAAAr4G,KAAAwL,OACOV,KAAAU,MACP8sG,EAAA7yG,QAgBAwzG,CAAAx/F,EAAAlO,EAOA,SAAAs7C,EAAAqyD,GAEA,mBADsC,KACtCC,aADsC,KAEeA,YAAAtyD,IAErBpoC,GCrHzB,SAAS26F,GAAG38E,EAAAuC,GACnB,SAAAryB,mBCNe,IAAA0sG,GAMf,aANeA,GAaf,gBAbeA,GAoBf,QApBeA,GA4Bf,gBCXIC,GAAK,SAAAC,GAKT/tG,KAAAguG,OAAgBpwB,KAAKmwB,OAAAh2G,GAQrBiI,KAAAiuG,OAAA,IASAH,GAAKx5G,UAAA2O,OAAA,SAAAguB,EAAAx6B,GAEL,IAAAiG,EAAA,CACAwE,KAAA+vB,EAAA,GACA7vB,KAAA6vB,EAAA,GACA5vB,KAAA4vB,EAAA,GACA3vB,KAAA2vB,EAAA,GACAx6B,SAGAuJ,KAAAguG,OAAA/qG,OAAAvG,GACAsD,KAAAiuG,OAAcz+F,EAAM/Y,IAAAiG,GASpBoxG,GAAKx5G,UAAA0O,KAAA,SAAAkrG,EAAAn9F,GAEL,IADA,IAAAtQ,EAAA,IAAA0V,MAAApF,EAAA9Y,QACAD,EAAA,EAAAa,EAAAkY,EAAA9Y,OAAoCD,EAAAa,EAAOb,IAAA,CAC3C,IAAAi5B,EAAAi9E,EAAAl2G,GACAvB,EAAAsa,EAAA/Y,GAGA0E,EAAA,CACAwE,KAAA+vB,EAAA,GACA7vB,KAAA6vB,EAAA,GACA5vB,KAAA4vB,EAAA,GACA3vB,KAAA2vB,EAAA,GACAx6B,SAEAgK,EAAAzI,GAAA0E,EACAsD,KAAAiuG,OAAgBz+F,EAAM/Y,IAAAiG,EAEtBsD,KAAAguG,OAAAhrG,KAAAvC,IASAqtG,GAAKx5G,UAAAgP,OAAA,SAAA7M,GACL,IAAAqyE,EAAYt5D,EAAM/Y,GAIlBiG,EAAAsD,KAAAiuG,OAAAnlC,GAEA,cADA9oE,KAAAiuG,OAAAnlC,GACA,OAAA9oE,KAAAguG,OAAA1qG,OAAA5G,IASAoxG,GAAKx5G,UAAA8F,OAAA,SAAA62B,EAAAx6B,GACL,IAAAiG,EAAAsD,KAAAiuG,OAAyBz+F,EAAM/Y,IAExB67B,GADP,CAAA51B,EAAAwE,KAAAxE,EAAA0E,KAAA1E,EAAA2E,KAAA3E,EAAA4E,MACa2vB,KACbjxB,KAAAsD,OAAA7M,GACAuJ,KAAAiD,OAAAguB,EAAAx6B,KASAq3G,GAAKx5G,UAAA65G,OAAA,WAEL,OADAnuG,KAAAguG,OAAAxrG,MACAzG,IAAA,SAAAW,GACA,OAAAA,EAAAjG,SAUAq3G,GAAKx5G,UAAA85G,YAAA,SAAAn9E,GAEL,IAAAtuB,EAAA,CACAzB,KAAA+vB,EAAA,GACA7vB,KAAA6vB,EAAA,GACA5vB,KAAA4vB,EAAA,GACA3vB,KAAA2vB,EAAA,IAGA,OADAjxB,KAAAguG,OAAAtrG,OAAAC,GACA5G,IAAA,SAAAW,GACA,OAAAA,EAAAjG,SAcAq3G,GAAKx5G,UAAAqJ,QAAA,SAAA7F,EAAAsZ,GACL,OAAApR,KAAAquG,SAAAruG,KAAAmuG,SAAAr2G,EAAAsZ,IAYA08F,GAAKx5G,UAAAg6G,gBAAA,SAAAr9E,EAAAn5B,EAAAsZ,GACL,OAAApR,KAAAquG,SAAAruG,KAAAouG,YAAAn9E,GAAAn5B,EAAAsZ,IAYA08F,GAAKx5G,UAAA+5G,SAAA,SAAAt9F,EAAAjZ,EAAAsZ,GAEL,IADA,IAAAhW,EACApD,EAAA,EAAAa,EAAAkY,EAAA9Y,OAAoCD,EAAAa,EAAOb,IAE3C,GADAoD,EAAAtD,EAAAtD,KAAA4c,EAAAL,EAAA/Y,IAEA,OAAAoD,EAGA,OAAAA,GAOA0yG,GAAKx5G,UAAAy3B,QAAA,WACL,OAAS/a,EAAOhR,KAAAiuG,SAOhBH,GAAKx5G,UAAAiM,MAAA,WACLP,KAAAguG,OAAAztG,QACAP,KAAAiuG,OAAA,IAQAH,GAAKx5G,UAAA4jC,UAAA,SAAA7G,GACL,IAAAp4B,EAAA+G,KAAAguG,OAAAlqG,SACA,OAASiuB,GAAc94B,EAAAiI,KAAAjI,EAAAmI,KAAAnI,EAAAoI,KAAApI,EAAAqI,KAAA+vB,IAOvBy8E,GAAKx5G,UAAAgI,OAAA,SAAAqD,GAEL,QAAA3H,KADAgI,KAAAguG,OAAAhrG,KAAArD,EAAAquG,OAAAxrG,OACA7C,EAAAsuG,OACAjuG,KAAAiuG,OAAAj2G,GAAA2H,EAAAsuG,OAAAj2G,IAKe,IAAAu2G,GAAA,GCrMRC,GAAA,SAAAt7F,GACP,SAAAs7F,EAAAryG,EAAAsyG,GAEAv7F,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAs7C,QAAAmzD,EAQA,OAJAv7F,IAAAs7F,EAAAx+F,UAAAkD,GACAs7F,EAAAl6G,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACAk6G,EAAAl6G,UAAA2b,YAAAu+F,EAEAA,EAlBO,CAmBLl7F,GA46Bao7F,GAt0BC,SAAA1f,GAChB,SAAA2f,EAAA92F,GAEA,IAAAvc,EAAAuc,GAAA,GAEAm3E,EAAAx6F,KAAAwL,KAAA,CACA4iD,aAAAtnD,EAAAsnD,aACAt0C,gBAAAvW,EACAs1B,MAAa6nB,GAAWE,MACxBi6C,WAAAt3F,IAAAuD,EAAA+zF,OAAA/zF,EAAA+zF,QAOArvF,KAAAgvD,QAAmB/7C,EAMnBjT,KAAA4uG,QAAAtzG,EAAAyE,OAMAC,KAAAi6E,UAAAliF,MAAAuD,EAAA4yE,UAAA5yE,EAAA4yE,SAMAluE,KAAA6uG,KAAAvzG,EAAA2S,SAEAlW,IAAAuD,EAAAwzG,OACA9uG,KAAAgvD,QAAA1zD,EAAAwzG,YACK/2G,IAAAiI,KAAA6uG,OACCtkF,GAAMvqB,KAAA4uG,QAAA,GAEZ5uG,KAAAgvD,QAAqB29C,GAAG3sG,KAAA6uG,KAA8D7uG,KAAA,UAOtFA,KAAA+uG,eAAAh3G,IAAAuD,EAAA0zG,SAAA1zG,EAAA0zG,SAAyEpB,GAEzE,IA+CAqB,EAAA5zD,EA/CA6zD,OACAn3G,IAAAuD,EAAA4zG,iBAAA5zG,EAAA4zG,gBAMAlvG,KAAAmvG,eAAAD,EAAA,IAAgDX,GAAK,KAMrDvuG,KAAAovG,oBAAA,IAAmCb,GAMnCvuG,KAAAqvG,sBAAA,GAOArvG,KAAAsvG,SAAA,GAOAtvG,KAAAuvG,cAAA,GAMAvvG,KAAAwvG,mBAAA,GAMAxvG,KAAAyvG,oBAAA,KAGAt5F,MAAAC,QAAA9a,EAAA+/C,UACAA,EAAA//C,EAAA+/C,SACK//C,EAAA+/C,WAELA,GADA4zD,EAAA3zG,EAAA+/C,UACA/iC,YAEA42F,QAAAn3G,IAAAk3G,IACAA,EAAA,IAAuBv3F,EAAU2jC,SAEjCtjD,IAAAsjD,GACAr7C,KAAA0vG,oBAAAr0D,QAEAtjD,IAAAk3G,GACAjvG,KAAA2vG,wBAAAV,GAmtBA,OA9sBAjgB,IAAA2f,EAAA3+F,UAAAg/E,GACA2f,EAAAr6G,UAAAD,OAAA+K,OAAA4vF,KAAA16F,WACAq6G,EAAAr6G,UAAA2b,YAAA0+F,EAWAA,EAAAr6G,UAAAs7G,WAAA,SAAAt0D,GACAt7C,KAAA6vG,mBAAAv0D,GACAt7C,KAAAgW,WASA24F,EAAAr6G,UAAAu7G,mBAAA,SAAAv0D,GACA,IAAAw0D,EAAqBtgG,EAAM8rC,GAE3B,GAAAt7C,KAAA+vG,YAAAD,EAAAx0D,GAAA,CAIAt7C,KAAAgwG,mBAAAF,EAAAx0D,GAEA,IAAAtK,EAAAsK,EAAAyO,cACA,GAAA/Y,EAAA,CACA,IAAA/f,EAAA+f,EAAA9Y,YACAl4B,KAAAmvG,gBACAnvG,KAAAmvG,eAAAlsG,OAAAguB,EAAAqqB,QAGAt7C,KAAAqvG,sBAAAS,GAAAx0D,EAGAt7C,KAAA6T,cACA,IAAA26F,GAA4BX,GAAevyD,MAS3CqzD,EAAAr6G,UAAA07G,mBAAA,SAAAF,EAAAx0D,GACAt7C,KAAAwvG,mBAAAM,GAAA,CACM59F,EAAMopC,EAAUlnC,EAASC,OAC/BrU,KAAAiwG,qBAAAjwG,MACMkS,EAAMopC,EAAUjrC,EACtBrQ,KAAAiwG,qBAAAjwG,QAYA2uG,EAAAr6G,UAAAy7G,YAAA,SAAAD,EAAAx0D,GACA,IAAA40D,GAAA,EACA52G,EAAAgiD,EAAAjB,QAYA,YAXAtiD,IAAAuB,EACAA,EAAAgN,aAAAtG,KAAAsvG,SAGAY,GAAA,EAFAlwG,KAAAsvG,SAAAh2G,EAAAgN,YAAAg1C,GAKM/wB,KAAMulF,KAAA9vG,KAAAuvG,eACZ,IACAvvG,KAAAuvG,cAAAO,GAAAx0D,GAEA40D,GASAvB,EAAAr6G,UAAAq5G,YAAA,SAAAtyD,GACAr7C,KAAA0vG,oBAAAr0D,GACAr7C,KAAAgW,WASA24F,EAAAr6G,UAAAo7G,oBAAA,SAAAr0D,GAKA,IAJA,IAAA6yD,EAAA,GACAiC,EAAA,GACAC,EAAA,GAEAp4G,EAAA,EAAAC,EAAAojD,EAAApjD,OAA6CD,EAAAC,EAAYD,IAAA,CACzD,IAAAsjD,EAAAD,EAAArjD,GACA83G,EAAuBtgG,EAAM8rC,GAC7Bt7C,KAAA+vG,YAAAD,EAAAx0D,IACA60D,EAAAp6G,KAAAulD,GAIA,QAAAt1B,EAAA,EAAAqqF,EAAAF,EAAAl4G,OAAoD+tB,EAAAqqF,EAAgBrqF,IAAA,CACpE,IAAAsqF,EAAAH,EAAAnqF,GACAuqF,EAAyB/gG,EAAM8gG,GAC/BtwG,KAAAgwG,mBAAAO,EAAAD,GAEA,IAAAt/D,EAAAs/D,EAAAvmD,cACA,GAAA/Y,EAAA,CACA,IAAA/f,EAAA+f,EAAA9Y,YACAg2E,EAAAn4G,KAAAk7B,GACAm/E,EAAAr6G,KAAAu6G,QAEAtwG,KAAAqvG,sBAAAkB,GAAAD,EAGAtwG,KAAAmvG,gBACAnvG,KAAAmvG,eAAAnsG,KAAAkrG,EAAAkC,GAGA,QAAAI,EAAA,EAAAC,EAAAN,EAAAl4G,OAAoDu4G,EAAAC,EAAgBD,IACpExwG,KAAA6T,cAAA,IAAA26F,GAA+CX,GAAesC,EAAAK,MAS9D7B,EAAAr6G,UAAAq7G,wBAAA,SAAAV,GACA,IAAAyB,GAAA,EACIx+F,EAAMlS,KAAO6tG,GAIjB,SAAAv7F,GACAo+F,IACAA,GAAA,EACAzB,EAAAl5G,KAAAuc,EAAAgpC,SACAo1D,GAAA,KAGIx+F,EAAMlS,KAAO6tG,GAIjB,SAAAv7F,GACAo+F,IACAA,GAAA,EACAzB,EAAA3rG,OAAAgP,EAAAgpC,SACAo1D,GAAA,KAGIx+F,EAAM+8F,EAAa/+F,EAAmBC,IAI1C,SAAAmC,GACAo+F,IACAA,GAAA,EACA1wG,KAAA4vG,WAAqEt9F,EAAA,SACrEo+F,GAAA,IAEO1wG,MACHkS,EAAM+8F,EAAa/+F,EAAmBE,OAI1C,SAAAkC,GACAo+F,IACAA,GAAA,EACA1wG,KAAA2wG,cAAwEr+F,EAAA,SACxEo+F,GAAA,IAEO1wG,MACPA,KAAAyvG,oBAAAR,GASAN,EAAAr6G,UAAAiM,MAAA,SAAAqwG,GACA,GAAAA,EAAA,CACA,QAAAC,KAAA7wG,KAAAwvG,mBAAA,CACAxvG,KAAAwvG,mBAAAqB,GACAlzG,QAAqB4U,GAErBvS,KAAAyvG,sBACAzvG,KAAAwvG,mBAAA,GACAxvG,KAAAsvG,SAAA,GACAtvG,KAAAuvG,cAAA,SAGA,GAAAvvG,KAAAmvG,eAEA,QAAA71G,KADA0G,KAAAmvG,eAAAxxG,QAAAqC,KAAA8wG,sBAAA9wG,MACAA,KAAAqvG,sBACArvG,KAAA8wG,sBAAA9wG,KAAAqvG,sBAAA/1G,IAIA0G,KAAAyvG,qBACAzvG,KAAAyvG,oBAAAlvG,QAGAP,KAAAmvG,gBACAnvG,KAAAmvG,eAAA5uG,QAEAP,KAAAovG,oBAAA7uG,QACAP,KAAAqvG,sBAAA,GAEA,IAAA0B,EAAA,IAAAvC,GAA2CX,IAC3C7tG,KAAA6T,cAAAk9F,GACA/wG,KAAAgW,WAgBA24F,EAAAr6G,UAAA08G,eAAA,SAAAl5G,GACA,GAAAkI,KAAAmvG,eACA,OAAAnvG,KAAAmvG,eAAAxxG,QAAA7F,GACKkI,KAAAyvG,qBACLzvG,KAAAyvG,oBAAA9xG,QAAA7F,IAiBA62G,EAAAr6G,UAAA28G,iCAAA,SAAA13F,EAAAzhB,GACA,IAAAm5B,EAAA,CAAA1X,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OAAAvZ,KAAAigF,uBAAAhvD,EAAA,SAAAqqB,GAEA,OADAA,EAAAyO,cACAxoB,qBAAAhoB,GACAzhB,EAAAwjD,QAEA,KAyBAqzD,EAAAr6G,UAAA2rF,uBAAA,SAAAhvD,EAAAn5B,GACA,GAAAkI,KAAAmvG,eACA,OAAAnvG,KAAAmvG,eAAAb,gBAAAr9E,EAAAn5B,GACKkI,KAAAyvG,qBACLzvG,KAAAyvG,oBAAA9xG,QAAA7F,IAoBA62G,EAAAr6G,UAAA48G,iCAAA,SAAAjgF,EAAAn5B,GACA,OAAAkI,KAAAigF,uBAAAhvD,EAKA,SAAAqqB,GAEA,GADAA,EAAAyO,cACAnoB,iBAAA3Q,GAAA,CACA,IAAA71B,EAAAtD,EAAAwjD,GACA,GAAAlgD,EACA,OAAAA,MAcAuzG,EAAAr6G,UAAA68G,sBAAA,WACA,OAAAnxG,KAAAyvG,qBASAd,EAAAr6G,UAAA8tF,YAAA,WACA,IAAA/mC,EASA,OARAr7C,KAAAyvG,oBACAp0D,EAAAr7C,KAAAyvG,oBAAAn3F,WACKtY,KAAAmvG,iBACL9zD,EAAAr7C,KAAAmvG,eAAAhB,SACWn9F,EAAOhR,KAAAqvG,wBACV9tG,GAAM85C,EAAWvqC,EAAS9Q,KAAAqvG,yBAGlC,GAYAV,EAAAr6G,UAAA88G,wBAAA,SAAA73F,GACA,IAAA8hC,EAAA,GAIA,OAHAr7C,KAAAixG,iCAAA13F,EAAA,SAAA+hC,GACAD,EAAAtlD,KAAAulD,KAEAD,GAeAszD,EAAAr6G,UAAA+8G,oBAAA,SAAApgF,GACA,OAAAjxB,KAAAmvG,eAAAf,YAAAn9E,IAgBA09E,EAAAr6G,UAAAg9G,8BAAA,SAAA/3F,EAAAg4F,GAQA,IAAAzzF,EAAAvE,EAAA,GACAyE,EAAAzE,EAAA,GACAi4F,EAAA,KACAvwE,EAAA,CAAAK,SACAJ,EAAA//B,IACA8vB,EAAA,EAAA9vB,kBACA4K,EAAAwlG,GAA2Cx+F,EAyB3C,OAxBA/S,KAAAmvG,eAAAb,gBAAAr9E,EAIA,SAAAqqB,GACA,GAAAvvC,EAAAuvC,GAAA,CACA,IAAAtK,EAAAsK,EAAAyO,cACA0nD,EAAAvwE,EAGA,IAFAA,EAAA8P,EAAAhQ,eACAljB,EAAAE,EAAAijB,EAAAC,IACAuwE,EAAA,CACAD,EAAAl2D,EAKA,IAAAo2D,EAAAxxG,KAAAsE,KAAA08B,GACAjQ,EAAA,GAAAnT,EAAA4zF,EACAzgF,EAAA,GAAAjT,EAAA0zF,EACAzgF,EAAA,GAAAnT,EAAA4zF,EACAzgF,EAAA,GAAAjT,EAAA0zF,MAIAF,GAcA7C,EAAAr6G,UAAA4jC,UAAA,SAAA7G,GACA,OAAArxB,KAAAmvG,eAAAj3E,UAAA7G,IAaAs9E,EAAAr6G,UAAAq9G,eAAA,SAAAr4G,GACA,IAAAgiD,EAAAt7C,KAAAsvG,SAAAh2G,EAAAgN,YACA,YAAAvO,IAAAujD,IAAA,MAUAqzD,EAAAr6G,UAAAs9G,UAAA,WACA,OAAA5xG,KAAA4uG,SAOAD,EAAAr6G,UAAAsrF,YAAA,WACA,OAAA5/E,KAAAi6E,WAUA00B,EAAAr6G,UAAAu9G,OAAA,WACA,OAAA7xG,KAAA6uG,MAQAF,EAAAr6G,UAAA27G,qBAAA,SAAAn8F,GACA,IAAAwnC,EAA6DxnC,EAAA,OAC7Dg8F,EAAqBtgG,EAAM8rC,GAC3BtK,EAAAsK,EAAAyO,cACA,GAAA/Y,EAOK,CACL,IAAA/f,EAAA+f,EAAA9Y,YACA43E,KAAA9vG,KAAAqvG,8BACArvG,KAAAqvG,sBAAAS,GACA9vG,KAAAmvG,gBACAnvG,KAAAmvG,eAAAlsG,OAAAguB,EAAAqqB,IAGAt7C,KAAAmvG,gBACAnvG,KAAAmvG,eAAA/0G,OAAA62B,EAAAqqB,QAfAw0D,KAAA9vG,KAAAqvG,wBACArvG,KAAAmvG,gBACAnvG,KAAAmvG,eAAA7rG,OAAAg4C,GAEAt7C,KAAAqvG,sBAAAS,GAAAx0D,GAeA,IAAAhiD,EAAAgiD,EAAAjB,QACA,QAAAtiD,IAAAuB,EAAA,CACA,IAAAw4G,EAAAx4G,EAAAgN,WACAwpG,KAAA9vG,KAAAuvG,sBACAvvG,KAAAuvG,cAAAO,GACA9vG,KAAAsvG,SAAAwC,GAAAx2D,GAEAt7C,KAAAsvG,SAAAwC,KAAAx2D,IACAt7C,KAAA+xG,mBAAAz2D,GACAt7C,KAAAsvG,SAAAwC,GAAAx2D,QAIAw0D,KAAA9vG,KAAAuvG,gBACAvvG,KAAA+xG,mBAAAz2D,GACAt7C,KAAAuvG,cAAAO,GAAAx0D,GAGAt7C,KAAAgW,UACAhW,KAAA6T,cAAA,IAAA26F,GACMX,GAAevyD,KASrBqzD,EAAAr6G,UAAA09G,WAAA,SAAA12D,GACA,IAAAhiD,EAAAgiD,EAAAjB,QACA,YAAAtiD,IAAAuB,EACAA,KAAA0G,KAAAsvG,SAEa9/F,EAAM8rC,KAAAt7C,KAAAuvG,eAOnBZ,EAAAr6G,UAAAy3B,QAAA,WACA,OAAA/rB,KAAAmvG,eAAApjF,WAA4C/a,EAAOhR,KAAAqvG,wBASnDV,EAAAr6G,UAAAurF,aAAA,SAAA5uD,EAAAuC,EAAAllB,GACA,IAAA2yE,EAAAjhF,KAEAiyG,EAAAjyG,KAAAovG,oBACA8C,EAAAlyG,KAAA+uG,UAAA99E,EAAAuC,GACAxzB,KAAAy9C,SAAA,EAkBA,IAjBA,IAAAgkC,EAAA,SAAAzpF,EAAA4Y,GACA,IAAAuhG,EAAAD,EAAAl6G,GACAi6G,EAAA3D,gBAAA6D,EAKA,SAAA3yG,GACA,OAAiBkyB,GAAclyB,EAAAyxB,OAAAkhF,OAG/BlxB,EAAAjyB,QAAAx6D,KAAAysF,EAAAkxB,EAAA3+E,EAAAllB,GACA2jG,EAAAhvG,OAAAkvG,EAAA,CAAiDlhF,OAAAkhF,EAAAr2G,UACjDmlF,EAAAxjC,QAAAwjC,EAAAjyB,UAA4C/7C,IAI5Cjb,EAAA,EAAA4Y,EAAAshG,EAAAj6G,OAA8CD,EAAA4Y,IAAQ5Y,EAAAypF,EAAAzpF,IAStD22G,EAAAr6G,UAAA89G,mBAAA,SAAAnhF,GACA,IACA5mB,EADA4nG,EAAAjyG,KAAAovG,oBAEA6C,EAAA3D,gBAAAr9E,EAAA,SAAAzxB,GACA,GAAU8yB,GAAM9yB,EAAAyxB,UAEhB,OADA5mB,EAAA7K,GACA,IAGA6K,GACA4nG,EAAA3uG,OAAA+G,IAYAskG,EAAAr6G,UAAAq8G,cAAA,SAAAr1D,GACA,IAAAw0D,EAAqBtgG,EAAM8rC,GAC3Bw0D,KAAA9vG,KAAAqvG,6BACArvG,KAAAqvG,sBAAAS,GAEA9vG,KAAAmvG,gBACAnvG,KAAAmvG,eAAA7rG,OAAAg4C,GAGAt7C,KAAA8wG,sBAAAx1D,GACAt7C,KAAAgW,WASA24F,EAAAr6G,UAAAw8G,sBAAA,SAAAx1D,GACA,IAAAw0D,EAAqBtgG,EAAM8rC,GAC3Bt7C,KAAAwvG,mBAAAM,GAAAnyG,QAAgD4U,UAChDvS,KAAAwvG,mBAAAM,GACA,IAAAx2G,EAAAgiD,EAAAjB,aACAtiD,IAAAuB,SACA0G,KAAAsvG,SAAAh2G,EAAAgN,mBAEAtG,KAAAuvG,cAAAO,GAEA9vG,KAAA6T,cAAA,IAAA26F,GACMX,GAAevyD,KAWrBqzD,EAAAr6G,UAAAy9G,mBAAA,SAAAz2D,GACA,IAAA+2D,GAAA,EACA,QAAA/4G,KAAA0G,KAAAsvG,SACA,GAAAtvG,KAAAsvG,SAAAh2G,KAAAgiD,EAAA,QACAt7C,KAAAsvG,SAAAh2G,GACA+4G,GAAA,EACA,MAGA,OAAAA,GAUA1D,EAAAr6G,UAAAg+G,UAAA,SAAAxD,GACA9uG,KAAAgvD,QAAA8/C,GAGAH,EAl0BgB,CAm0Bd5f,ICx2BEwjB,GAAI,CACR59E,MAAA,QACAC,YAAA,aACAE,QAAA,UACAK,OAAA,UAOAq9E,GAMA,YANAA,GAYA,UASAC,GAAA,SAAAv/F,GACA,SAAAu/F,EAAAt2G,EAAAm/C,GAEApoC,EAAA1e,KAAAwL,KAAA7D,GAOA6D,KAAAs7C,UAQA,OAJApoC,IAAAu/F,EAAAziG,UAAAkD,GACAu/F,EAAAn+G,UAAAD,OAAA+K,OAAA8T,KAAA5e,WACAm+G,EAAAn+G,UAAA2b,YAAAwiG,EAEAA,EAlBA,CAmBEn/F,GAqyBK,SAAAo/F,GAAAC,EAAA3pE,GACP,gBAAAhY,EAAA4hF,GACA,IAAAvkG,EAA0C,KAC1C0U,EAAuC,KACvCkT,EAAA/1B,KAAAsE,KACMorB,GAAyBvhB,EAAA0U,IAC/BiuB,EAAA4hE,GzH7lBO,SAAAC,EAAAF,EAAA3pE,GAOP,IANA,IAAAC,EAAA0pE,GAAA,GACAvgF,EAAAygF,EAAAjzE,YACAjB,EAAAk0E,EAAAzzE,YACA/wB,EAAAwkG,EAAA7lE,YACA8lE,EAAA1gF,GAAA6W,EAAA,GACA/W,EAAA,IAAA/b,MAAA28F,GACA96G,EAAA,EAAiBA,EAAA86G,EAAiB96G,GAAAo6B,EAAA,CAClCF,EAAAl6B,GAAA,EACAk6B,EAAAl6B,EAAA,KACA,QAAAwD,EAAA,EAAmBA,EAAA42B,EAAY52B,IAC/B02B,EAAAl6B,EAAAwD,GAAA6S,EAAA7S,GAGA,IAAA6mC,EAAA,CAAAnQ,EAAAj6B,QACA8wC,EAAA,IAAoBrB,GAAOxV,EAAAyM,EAAA0D,GAE3B,OADAyG,GAAAC,EAAA16B,EAAAwkG,EAAAzP,YAAAp6D,GACAD,EyH6kBMgqE,CAAU,IAAKxP,GAAMl1F,GAAAskG,GAC3BtjF,EAAA2Z,EACA,IAAAA,EAAA,CACA,IAAAlrB,EAAAiF,EAAA,GAAA1U,EAAA,GACA2P,EAAA+E,EAAA,GAAA1U,EAAA,GACAghB,EAAAnvB,KAAAk6B,KAAApc,EAAAF,MAAA,EAAA5d,KAAAuuB,GAAA,GAGA,OADIqa,GAAWkI,EAAA3iC,EAAA4nB,EAAA5G,GACf2hB,GA6De,IAAAgiE,GAv2BP,SAAAxrD,GACR,SAAAyrD,EAAA33G,GAEA,IAAAsyD,EAAmE,EACnEA,EAAA/F,WACA+F,EAAA/F,SAAgC70C,GAGhCw0C,EAAAhzD,KAAAwL,KAAA4tD,GAMA5tD,KAAAkzG,eAAA,EAMAlzG,KAAAmzG,QAAA,KAMAnzG,KAAAozG,aAMApzG,KAAAqzG,cAMArzG,KAAAszG,WAAA,EAOAtzG,KAAAuzG,QAAAj4G,EAAA2L,OAAA3L,EAAA2L,OAAA,KAOAjH,KAAAwzG,UAAAl4G,EAAA+/C,SAAA//C,EAAA+/C,SAAA,KAOAr7C,KAAAyzG,eAAAn4G,EAAAo4G,cAAAp4G,EAAAo4G,cAAA,GAOA1zG,KAAA2zG,MAAyCr4G,EAAA,KAOzC0E,KAAA0sD,MA0wBA,SAAAvwD,GACA,IAAA/E,EACA+E,IAAeu4B,GAAYC,OAC3Bx4B,IAAeu4B,GAAYK,YAC3B39B,EAAWm7G,GAAI59E,MACZx4B,IAAmBu4B,GAAYE,aAClCz4B,IAAeu4B,GAAYM,kBAC3B59B,EAAWm7G,GAAI39E,YACZz4B,IAAmBu4B,GAAYI,SAClC34B,IAAeu4B,GAAYO,cAC3B79B,EAAWm7G,GAAIz9E,QACZ34B,IAAmBu4B,GAAYS,SAClC/9B,EAAWm7G,GAAIp9E,QAEf,SAxxBAy+E,CAAA5zG,KAAA2zG,OAQA3zG,KAAA6zG,aAAAv4G,EAAAw4G,UASA9zG,KAAA+zG,WAAAz4G,EAAA04G,UACA14G,EAAA04G,UACAh0G,KAAA0sD,QAAsB6lD,GAAIz9E,QAAA,IAQ1B90B,KAAAi0G,WAAA34G,EAAA44G,UAAA54G,EAAA44G,UAAA/yG,IAOAnB,KAAAm0G,iBAAA74G,EAAA84G,gBAAA94G,EAAA84G,gBAAgFrhG,EAEhF,IA0pBAzK,EA1pBA+rG,EAAA/4G,EAAA+4G,iBACA,IAAAA,EACA,GAAAr0G,KAAA2zG,QAAyBj/E,GAAYS,OAMrCk/E,EAAA,SAAArjF,EAAA4hF,GACA,IAAAC,EAAAD,GACA,IAAgBrP,GAAM,CAAAjiE,UACtBgzE,EAA8B1kF,GAC9BoB,EAAA,GAAAA,EAAA,IAEA,OADA6hF,EAAA1P,mBAAAnyE,EAAA,GAAA9wB,KAAAsE,KAAA8vG,IACAzB,OAEO,CACP,IAAAr3B,EACApkF,EAAA4I,KAAA0sD,MACAt1D,IAAqBm7G,GAAI59E,MACzB6mD,EAAwBr2C,GACf/tC,IAAmBm7G,GAAI39E,YAChC4mD,EAAwBgpB,GACfptG,IAAmBm7G,GAAIz9E,UAChC0mD,EAAwB5yC,IAOxByrE,EAAA,SAAArjF,EAAA4hF,GACA,IAAA5hE,EAAA4hE,EAeA,OAdA5hE,EACA55C,IAAyBm7G,GAAIz9E,QAC7B9D,EAAA,GAAA/4B,OAEA+4C,EAAAlR,eAAA,CAAA9O,EAAA,GAAA10B,OAAA,CAAA00B,EAAA,UAEAggB,EAAAlR,eAAA,IAGAkR,EAAAlR,eAAA9O,GAGAggB,EAAA,IAAAwqC,EAAAxqD,GAEAggB,GASAhxC,KAAA+qG,kBAAAsJ,EAMAr0G,KAAAu0G,sBAAAx8G,IAAAuD,EAAAk5G,gBAAAl5G,EAAAk5G,gBAAA,IAQAx0G,KAAAy0G,kBAAA,KAOAz0G,KAAA00G,eAAA,KAOA10G,KAAA20G,aAAA,KAOA30G,KAAA40G,cAAA,KAOA50G,KAAA60G,YAAA,KAOA70G,KAAA80G,kBAAA,KASA90G,KAAA+0G,uBAAAz5G,EAAA05G,eACA15G,EAAA05G,eAAA15G,EAAA05G,eAAA,GAOAh1G,KAAAi1G,SAAA,IAAwB1I,GAAW,CACnCtlG,OAAA,IAAkBynG,GAAY,CAC9BQ,iBAAA,EACA7f,QAAA/zF,EAAA+zF,OAAA/zF,EAAA+zF,QAEAnmF,MAAA5N,EAAA4N,MAAA5N,EAAA4N,OA2hBAZ,EAAemjG,KACf,SAAAnwD,EAAA9nB,GACA,OAAAlrB,EAAAgzC,EAAAyO,cAAApoB,aA3hBAy9C,wBAAA,IAQAp/E,KAAAsiG,cAAAhnG,EAAA45G,aAMAl1G,KAAA4oD,WAAAttD,EAAAutD,UAAAvtD,EAAAutD,UAA8D7B,GAM9DhnD,KAAAm1G,mBACA75G,EAAA85G,SACAp1G,KAAAm1G,mBAAgCruD,GAEhC9mD,KAAAm1G,mBAAA75G,EAAA+5G,kBACA/5G,EAAA+5G,kBAAoCpuD,GAGhC/0C,EAAMlS,KACJ0W,EAAmBivC,GAAmBC,QAC5C5lD,KAAAs1G,aAAAt1G,MAmfA,OA/eAwnD,IAAAyrD,EAAAjjG,UAAAw3C,GACAyrD,EAAA3+G,UAAAD,OAAA+K,OAAAooD,KAAAlzD,WACA2+G,EAAA3+G,UAAA2b,YAAAgjG,EAKAA,EAAA3+G,UAAA4lD,OAAA,SAAAn+C,GACAyrD,EAAAlzD,UAAA4lD,OAAA1lD,KAAAwL,KAAAjE,GACAiE,KAAAs1G,gBAQArC,EAAA3+G,UAAAihH,WAAA,WACA,OAAAv1G,KAAAi1G,UAQAhC,EAAA3+G,UAAA4oD,YAAA,SAAAppC,GACAA,EAAAsF,cAAAjd,OAAqCiY,EAASG,aAE9CT,EAAAT,iBAEArT,KAAAszG,UAAAtzG,KAAA0sD,QAAoC6lD,GAAI59E,OAAA30B,KAAAm1G,mBAAArhG,GACxC,IAAA6I,EAAA7I,EAAA3X,OAA8Bwe,EAAmBG,YACjD06F,GAAA,GACAx1G,KAAAszG,WAAAtzG,KAAAqzG,eAAAv/F,EAAA3X,OAAgEwe,EAAmBE,cACnF4yB,KAAAC,MACA1tC,KAAAqzG,eAAArzG,KAAAu0G,kBACAv0G,KAAAmzG,QAAAr/F,EAAAuF,MACArZ,KAAAkzG,eAAAlzG,KAAAszG,UACA32F,GAAA,GAEA3c,KAAAqzG,mBAAAt7G,EAEAiI,KAAAkzG,oBAAAn7G,IAAAiI,KAAAozG,eACAjuF,aAAAnlB,KAAAozG,cACApzG,KAAAozG,kBAAAr7G,IAuBA,OApBAiI,KAAAszG,WACAx/F,EAAA3X,OAAuBwe,EAAmBE,aAC1C,OAAA7a,KAAA00G,gBACA10G,KAAAy1G,cAAA3hG,GACA0hG,GAAA,GACKx1G,KAAAszG,WACLx/F,EAAA3X,OAAuBwe,EAAmBI,YAC1Cy6F,GAAA,EACK74F,GACL64F,EAAA1hG,EAAA3X,OAA4Bwe,EAAmBG,cAC/C9a,KAAAszG,UACAkC,EAAAx1G,KAAAwpB,mBAAA1V,IACmD,EAAA0H,aAAAgC,aAAwCtB,IAC3FpI,EAAA3X,OAA0Bwe,EAAmBE,kBAAA9iB,IAAAiI,KAAAozG,eAC7CpzG,KAAAwpB,mBAAA1V,GAEKA,EAAA3X,OAAyBwe,EAAmBlG,WACjD+gG,GAAA,GAGAhuD,EAAAlzD,UAAA4oD,YAAA1oD,KAAAwL,KAAA8T,IAAA0hG,GAMAvC,EAAA3+G,UAAAmzD,gBAAA,SAAA3zC,GAGA,OAFA9T,KAAAkzG,eAAAlzG,KAAAszG,UAEAtzG,KAAAszG,WACAtzG,KAAAmzG,QAAAr/F,EAAAuF,MACArZ,KAAAy0G,mBACAz0G,KAAA01G,cAAA5hG,IAEA,KACK9T,KAAA4oD,WAAA90C,KACL9T,KAAAqzG,cAAA5lE,KAAAC,MACA1tC,KAAAozG,aAAAnuF,WAAA,WACAjlB,KAAAwpB,mBAAA,IAAoClO,GAC1BX,EAAmBG,YAAAhH,EAAA/X,IAAA+X,EAAA0H,cAAA,EAAA1H,EAAAiF,cACtBzZ,KAAAU,WAAAu0G,kBACPv0G,KAAAmzG,QAAAr/F,EAAAuF,OACA,IAUA45F,EAAA3+G,UAAAszD,cAAA,SAAA9zC,GACA,IAAA0hG,GAAA,EAEAx1G,KAAAozG,eACAjuF,aAAAnlB,KAAAozG,cACApzG,KAAAozG,kBAAAr7G,GAGAiI,KAAAwpB,mBAAA1V,GAEA,IAAA6hG,EAAA31G,KAAA0sD,QAAoC6lD,GAAIp9E,OAyBxC,OAvBAn1B,KAAAkzG,eACAlzG,KAAAy0G,kBAKOz0G,KAAAszG,WAAAqC,EACP31G,KAAA41G,gBACO51G,KAAA61G,UAAA/hG,GACP9T,KAAAm0G,iBAAArgG,IACA9T,KAAA41G,gBAGA51G,KAAAy1G,cAAA3hG,IAXA9T,KAAA01G,cAAA5hG,GACA9T,KAAA0sD,QAA2B6lD,GAAI59E,OAC/B30B,KAAA41G,iBAWAJ,GAAA,GACKx1G,KAAAszG,YACLtzG,KAAAy0G,kBAAA,KACAz0G,KAAA81G,kBAEAN,GAAAx1G,KAAA6zG,YACA//F,EAAAV,kBAEAoiG,GASAvC,EAAA3+G,UAAAk1B,mBAAA,SAAA1V,GACA,GAAA9T,KAAAmzG,WACAnzG,KAAAszG,WAAAtzG,KAAAkzG,eACAlzG,KAAAszG,YAAAtzG,KAAAkzG,eAAA,CACA,IAAA6C,EAAA/1G,KAAAmzG,QACA6C,EAAAliG,EAAAuF,MACA6E,EAAA63F,EAAA,GAAAC,EAAA,GACA53F,EAAA23F,EAAA,GAAAC,EAAA,GACAhzE,EAAA9kB,IAAAE,IAIA,GAHApe,KAAAkzG,cAAAlzG,KAAAszG,UACAtwE,EAAAhjC,KAAA+0G,uBACA/xE,GAAAhjC,KAAA+0G,wBACA/0G,KAAAkzG,cACA,SASA,OALAlzG,KAAAy0G,kBACAz0G,KAAAi2G,eAAAniG,GAEA9T,KAAAk2G,2BAAApiG,IAEA,GASAm/F,EAAA3+G,UAAAuhH,UAAA,SAAA/hG,GACA,IAAAqiG,GAAA,EACA,GAAAn2G,KAAA00G,eAAA,CACA,IAAA0B,GAAA,EACAC,EAAA,CAAAr2G,KAAAy0G,mBACA,GAAAz0G,KAAA0sD,QAAyB6lD,GAAI39E,YAC7BwhF,EAAAp2G,KAAA40G,cAAA38G,OAAA+H,KAAA+zG,gBACO,GAAA/zG,KAAA0sD,QAAyB6lD,GAAIz9E,QAAA,CACpC,IAAAwhF,EAAoDt2G,KAAA,cACpDo2G,EAAAE,EAAA,GAAAr+G,OAAA+H,KAAA+zG,WACAsC,EAAA,CAAAC,EAAA,MAAAA,EAAA,GAAAA,EAAA,GAAAr+G,OAAA,IAEA,GAAAm+G,EAEA,IADA,IAAAr6G,EAAA+X,EAAA/X,IACA/D,EAAA,EAAA4Y,EAAAylG,EAAAp+G,OAAiED,EAAA4Y,EAAQ5Y,IAAA,CACzE,IAAAu+G,EAAAF,EAAAr+G,GACAw+G,EAAAz6G,EAAAogD,uBAAAo6D,GACAl9F,EAAAvF,EAAAuF,MACA6E,EAAA7E,EAAA,GAAAm9F,EAAA,GACAp4F,EAAA/E,EAAA,GAAAm9F,EAAA,GACA9C,EAAA1zG,KAAAszG,UAAA,EAAAtzG,KAAAyzG,eAEA,GADA0C,EAAAj2G,KAAAsE,KAAA0Z,IAAAE,MAAAs1F,EACA,CACA1zG,KAAAy0G,kBAAA8B,EACA,QAKA,OAAAJ,GAOAlD,EAAA3+G,UAAA4hH,2BAAA,SAAApiG,GACA,IAAAkd,EAAAld,EAAAyF,WAAAzd,QACAkE,KAAA20G,aAI6C30G,KAAA20G,aAAA5qD,cAC7CjqB,eAAA9O,IAJAhxB,KAAA20G,aAAA,IAA8BzS,GAAO,IAAK/8D,GAAKnU,IAC/ChxB,KAAAy2G,0BAYAxD,EAAA3+G,UAAAohH,cAAA,SAAA5hG,GACA,IAAAyyB,EAAAzyB,EAAAyF,WACAvZ,KAAAy0G,kBAAAluE,EACAvmC,KAAA0sD,QAAuB6lD,GAAI59E,MAC3B30B,KAAA40G,cAAAruE,EAAAzqC,QACKkE,KAAA0sD,QAAyB6lD,GAAIz9E,SAClC90B,KAAA40G,cAAA,EAAAruE,EAAAzqC,QAAAyqC,EAAAzqC,UACAkE,KAAA80G,kBAAA90G,KAAA40G,cAAA,IAEA50G,KAAA40G,cAAA,CAAAruE,EAAAzqC,QAAAyqC,EAAAzqC,SAEAkE,KAAA80G,oBACA90G,KAAA60G,YAAA,IAA6B3S,GAC7B,IAAYsC,GAAUxkG,KAAA80G,qBAEtB,IAAA9jE,EAAAhxC,KAAA+qG,kBAAA/qG,KAAA40G,eACA50G,KAAA00G,eAAA,IAA8BxS,GAC9BliG,KAAAsiG,eACAtiG,KAAA00G,eAAA9R,gBAAA5iG,KAAAsiG,eAEAtiG,KAAA00G,eAAA/R,YAAA3xD,GACAhxC,KAAAy2G,wBACAz2G,KAAA6T,cAAA,IAAA4+F,GAAAD,GAAAxyG,KAAA00G,kBAQAzB,EAAA3+G,UAAA2hH,eAAA,SAAAniG,GACA,IAEAkd,EAAAqT,EAsBAqyE,EAxBAn9F,EAAAzF,EAAAyF,WACAy3B,EAA0EhxC,KAAA00G,eAAA3qD,eAE1E/pD,KAAA0sD,QAAuB6lD,GAAI59E,MAC3B0P,EAAArkC,KAAA40G,cACK50G,KAAA0sD,QAAyB6lD,GAAIz9E,SAElCuP,GADArT,EAA6ChxB,KAAA,kBAC7CgxB,EAAA/4B,OAAA,GACA+H,KAAA61G,UAAA/hG,KAEAyF,EAAAvZ,KAAAy0G,kBAAA34G,UAIAuoC,GADArT,EAAAhxB,KAAA40G,eACA5jF,EAAA/4B,OAAA,GAEAosC,EAAA,GAAA9qB,EAAA,GACA8qB,EAAA,GAAA9qB,EAAA,GACAvZ,KAAA+qG,kBAAqD/qG,KAAA,cAAAgxC,GACrDhxC,KAAA20G,eAC6C30G,KAAA20G,aAAA5qD,cAC7CjqB,eAAAvmB,GAIA,GAAAy3B,EAAArP,WAA8BjN,GAAYI,SAC1C90B,KAAA0sD,QAAuB6lD,GAAIz9E,QAAA,CAC3B90B,KAAA60G,cACA70G,KAAA60G,YAAA,IAA+B3S,IAE/B,IAAAyU,EAAoC,EAAAluE,cAAA,IACpCiuE,EAA6C12G,KAAA60G,YAAA9qD,gBAK7C2sD,EAAA72E,mBACA82E,EAAAv3E,YAAAu3E,EAAAz3E,sBACAw3E,EAAA1gG,YALA0gG,EAAA,IAA6BlS,GAAUmS,EAAAz3E,qBAAAy3E,EAAAv3E,aACvCp/B,KAAA60G,YAAAlS,YAAA+T,SAMK12G,KAAA80G,oBACL4B,EAA6C12G,KAAA60G,YAAA9qD,eAC7CjqB,eAAA9/B,KAAA80G,mBAEA90G,KAAAy2G,yBAQAxD,EAAA3+G,UAAAmhH,cAAA,SAAA3hG,GACA,IAEAg/C,EACA9hC,EAHAzX,EAAAzF,EAAAyF,WACAy3B,EAA0EhxC,KAAA00G,eAAA3qD,cAG1E/pD,KAAA0sD,QAAuB6lD,GAAI39E,aAC3B50B,KAAAy0G,kBAAAl7F,EAAAzd,SACAk1B,EAA6ChxB,KAAA,eAC7C/H,QAAA+H,KAAAi0G,aACAj0G,KAAAszG,UACAtiF,EAAA90B,MAEA42D,GAAA,GAGA9hC,EAAAj7B,KAAAwjB,EAAAzd,SACAkE,KAAA+qG,kBAAA/5E,EAAAggB,IACKhxC,KAAA0sD,QAAyB6lD,GAAIz9E,WAClC9D,EAA6ChxB,KAAA,kBAC7C/H,QAAA+H,KAAAi0G,aACAj0G,KAAAszG,UACAtiF,EAAA90B,MAEA42D,GAAA,GAGA9hC,EAAAj7B,KAAAwjB,EAAAzd,SACAg3D,IACA9yD,KAAAy0G,kBAAAzjF,EAAA,IAEAhxB,KAAA+qG,kBAAA/qG,KAAA40G,cAAA5jE,IAEAhxC,KAAAy2G,wBACA3jD,GACA9yD,KAAA41G,iBAQA3C,EAAA3+G,UAAAsiH,gBAAA,WACA,GAAA52G,KAAA00G,eAAA,CAGA,IACA1jF,EADAggB,EAA0EhxC,KAAA00G,eAAA3qD,cAI1E/pD,KAAA0sD,QAAuB6lD,GAAI39E,cAC3B5D,EAA6ChxB,KAAA,eAC7CzH,QAAA,KACAyH,KAAA+qG,kBAAA/5E,EAAAggB,GACAhgB,EAAA/4B,QAAA,IACA+H,KAAAy0G,kBAAAzjF,IAAA/4B,OAAA,GAAA6D,UAEKkE,KAAA0sD,QAAyB6lD,GAAIz9E,WAClC9D,EAA6ChxB,KAAA,kBAC7CzH,QAAA,KAC6CyH,KAAA60G,YAAA9qD,cAC7CjqB,eAAA9O,GACAhxB,KAAA+qG,kBAAA/qG,KAAA40G,cAAA5jE,IAGA,IAAAhgB,EAAA/4B,SACA+H,KAAAy0G,kBAAA,MAGAz0G,KAAAy2G,0BASAxD,EAAA3+G,UAAAshH,cAAA,WACA,IAAAiB,EAAA72G,KAAA81G,gBACA,GAAAe,EAAA,CAGA,IAAA7lF,EAAAhxB,KAAA40G,cACA5jE,EAA0E6lE,EAAA9sD,cAC1E/pD,KAAA0sD,QAAuB6lD,GAAI39E,aAE3B5D,EAAA90B,MACA8D,KAAA+qG,kBAAA/5E,EAAAggB,IACKhxC,KAAA0sD,QAAyB6lD,GAAIz9E,UAEH,KAAA54B,MAC/B8D,KAAA+qG,kBAAA/5E,EAAAggB,GACAhgB,EAAAggB,EAAAhS,kBAIAh/B,KAAA2zG,QAAuBj/E,GAAYK,YACnC8hF,EAAAlU,YAAA,IAAoC+C,GAAU,CAA4B,KACrE1lG,KAAA2zG,QAAyBj/E,GAAYM,kBAC1C6hF,EAAAlU,YAAA,IAAoCqC,GAAe,CAA2B,KACzEhlG,KAAA2zG,QAAyBj/E,GAAYO,eAC1C4hF,EAAAlU,YAAA,IAAoCoD,GAAY,CAA2B,KAI3E/lG,KAAA6T,cAAA,IAAA4+F,GAAAD,GAAAqE,IAGA72G,KAAAwzG,WACAxzG,KAAAwzG,UAAAz9G,KAAA8gH,GAEA72G,KAAAuzG,SACAvzG,KAAAuzG,QAAA3D,WAAAiH,KASA5D,EAAA3+G,UAAAwhH,cAAA,WACA91G,KAAAy0G,kBAAA,KACA,IAAAoC,EAAA72G,KAAA00G,eAOA,OANAmC,IACA72G,KAAA00G,eAAA,KACA10G,KAAA20G,aAAA,KACA30G,KAAA60G,YAAA,KAC8B70G,KAAAi1G,SAAAz3D,YAAAj9C,OAAA,IAE9Bs2G,GAUA5D,EAAA3+G,UAAAiN,OAAA,SAAA+5C,GACA,IACA4pD,EADA5pD,EAAAyO,cAEA/pD,KAAA00G,eAAAp5D,EACAt7C,KAAA40G,cAAA1P,EAAAlmE,iBACA,IAAAqF,EAAArkC,KAAA40G,cAAA50G,KAAA40G,cAAA38G,OAAA,GACA+H,KAAAy0G,kBAAApwE,EAAAvoC,QACAkE,KAAA40G,cAAA7+G,KAAAsuC,EAAAvoC,SACAkE,KAAAy2G,wBACAz2G,KAAA6T,cAAA,IAAA4+F,GAAAD,GAAAxyG,KAAA00G,kBAOAzB,EAAA3+G,UAAAmiH,sBAAA,WACA,IAAAK,EAAA,GACA92G,KAAA00G,gBACAoC,EAAA/gH,KAAAiK,KAAA00G,gBAEA10G,KAAA60G,aACAiC,EAAA/gH,KAAAiK,KAAA60G,aAEA70G,KAAA20G,cACAmC,EAAA/gH,KAAAiK,KAAA20G,cAEA,IAAAoC,EAAgD/2G,KAAAi1G,SAAAz3D,YAChDu5D,EAAAx2G,OAAA,GACAw2G,EAAApJ,YAAAmJ,IAMA7D,EAAA3+G,UAAAghH,aAAA,WACA,IAAAv5G,EAAAiE,KAAA4/C,SACAhqD,EAAAoK,KAAAi9C,YACAlhD,GAAAnG,GACAoK,KAAA81G,gBAEA91G,KAAAi1G,SAAA/6D,OAAAtkD,EAAAmG,EAAA,OAGAk3G,EA/vBQ,CAgwBN1rD,IC56Ba,MAAMyvD,GACrBrZ,YAAAsZ,GACAj3G,KAAA7D,KAAA86G,EAAA96G,KAWAwhG,eAAAxhG,GACA,IAAA1F,EACA49G,EACA6C,EACA,OAAA/6G,GACA,aACA1F,EAAwBi+B,GAAYS,OACpCk/E,EAAmC3B,GAAoB,GACvD,MAEA,UACAj8G,EAAwBi+B,GAAYS,OACpCk/E,ED08BA,SACArjF,EAAA4hF,GACA,IAAA3hF,EAAmBF,GAAwC,GAC3DomF,EAAA,EACQvkF,GAAa3B,GACb4B,GAAc5B,GACd6B,GAAW7B,GACX8B,GAAU9B,GACV2B,GAAa3B,KAErB+f,EAAA4hE,EAMA,OALA5hE,EACAA,EAAAlR,eAAAq3E,GAEAnmE,EAAA,IAAuBpI,GAAOuuE,GAE9BnmE,GCz9BA,MAEA,WACAv6C,EAAwBi+B,GAAYS,OACpCk/E,EAAA,SAAArjF,EAAAggB,GASA,IARA,IAAA3iC,EAAA2iB,EAAA,GACAqT,EAAArT,EAAA,GACA9S,EAAA7P,EAAA,GAAAg2B,EAAA,GACAjmB,EAAA/P,EAAA,GAAAg2B,EAAA,GACApO,EAAA/1B,KAAAsE,KAAA0Z,IAAAE,KACA0Q,EAAA5uB,KAAAo2B,MAAAlY,EAAAF,GACAk5F,EAAA,GAEAp/G,EAAA,EAAmCA,EADnC,KACkDA,EAAA,CAClD,IAAAq3B,EAAAP,EAAA,EAAA92B,EAAAkI,KAAAuuB,GAFA,GAGA8f,EAAAv2C,EAAA,UACAy7D,EAAAx9B,EAAAsY,EAAAruC,KAAAqvB,IAAAF,GACAqkC,EAAAz9B,EAAAsY,EAAAruC,KAAAuvB,IAAAJ,GACA+nF,EAAArhH,KAAA,CAAAsY,EAAA,GAAAolD,EAAAplD,EAAA,GAAAqlD,IAQA,OANA0jD,EAAArhH,KAAAqhH,EAAA,GAAAt7G,SACAk1C,EAGAA,EAAAlR,eAAA,CAAAs3E,IAFApmE,EAAA,IAAuCpI,GAAO,CAAAwuE,IAI9CpmE,GAqBA,OAbAv6C,IACAygH,EAAA,IAA8BlE,GAAI,CAClC/rG,OAAA,IAA4BslG,GAAW,CACvCtlG,OAAA,IAAgCynG,GAAY,CAAErf,OAAA,MAE9ClzF,KAAA1F,EACAi9G,cAAA,GACAW,sBAMA6C,GCxEA,MAAAG,GAAA,ICFe,MACf1Z,cACA39F,KAAAs3G,iBAAA,CACA,IAAgBzyB,GAAS,CACzB59E,OAAA,IAA4BusF,GAAG,CAC/BvlF,IAAyBE,EAAMK,UAAAC,4BAG/B,IAAgBo2E,GAAS,CACzB59E,OAAA,IAA4BusF,GAAG,CAC/BvlF,IAAyBE,EAAMK,UAAAE,oBAO/BivF,gBACA,OAAA39F,KAAAs3G,iBAIA3Z,gBACA,WAAmBroD,GAAU,CAC7BG,OAAAz1C,KAAAs3G,sBDrBAC,mBAAOA,GAAAC,mBAAAC,qBAAAC,gBAAsE,CAC7EH,mBAAA,IEJe,MACf5Z,YAAAriG,GACA0E,KAAAy1C,OAAAn6C,EAAAm6C,OACAz1C,KAAAuhD,UAAAjmD,EAAAimD,YAAA,EAGAo8C,aACA,WAAmBjE,GAAW,CAE9BphD,UAAA,uCACA7C,OAAAz1C,KAAAy1C,OACAmM,cAAA,IACAG,MAAA,IACAR,UAAAvhD,KAAAuhD,UACA7/B,KAAA,IAAsBuoB,GAAI,CAC1B37B,WAA4BH,EAAMC,UAAAE,iBFXY,CAC9CmnC,OAAA4hE,GAAAM,gBACAp2D,WAAA,IAEAi2D,gBAAA,IGXe,MACf7Z,YAAAriG,GACA0E,KAAA48F,SAAAthG,EAAAshG,SACA58F,KAAAy5B,MAAA,SAAAn+B,EAAAm+B,MAGAkkE,aACA,WAAmBnB,GAAS,CAC5BlkD,UAAA,gBACAskD,SAAA58F,KAAA48F,SACAnjE,MAAAz5B,KAAAy5B,UHCwC,CACxCmjE,SAAA,IACAnjE,MAAA,WAGAg+E,kBAAA,IIde,MACf9Z,YAAAriG,IAEAqiG,aACA,WAAaD,KJWbga,YAAA,IKjBe,cAAuBV,GACtCrZ,YAAAsZ,GACAW,MAAAX,GACAj3G,KAAA7D,KAAA86G,EAAA96G,KAGAwhG,iBACA,OAAA39F,KAAA63G,eAAA73G,KAAA7D,MAGAwhG,WAAA/1F,MLOgC,CAChCzL,KAAA,SAKAooF,GAAGvlC,cAAAq4D,GAAA18D,iBAEH4pC,GAAGjqC,WAAAi9D,GAAAO,cAEHvzB,GAAGjqC,WAAAk9D,GAAAM,cAEHvzB,GAAGjqC,WAAAm9D,GAAAK,cAGHvzB,GAAG/pC,eAAAk9D,GAAAK","file":"bundle.js","sourcesContent":[" \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"a7af106f475625f66000\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = 0;\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(24)(__webpack_require__.s = 24);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\r\\n    box-sizing: border-box;\\r\\n    border-radius: 2px;\\r\\n    border: 2px solid blue;\\r\\n}\\r\\n\\r\\n.ol-mouse-position {\\r\\n    top: 8px;\\r\\n    right: 8px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.ol-scale-line {\\r\\n    background: rgba(0, 60, 136, 0.3);\\r\\n    border-radius: 4px;\\r\\n    bottom: 8px;\\r\\n    left: 8px;\\r\\n    padding: 2px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.ol-scale-line-inner {\\r\\n    border: 1px solid #eee;\\r\\n    border-top: none;\\r\\n    color: #eee;\\r\\n    font-size: 10px;\\r\\n    text-align: center;\\r\\n    margin: 1px;\\r\\n    will-change: contents, width;\\r\\n    transition: all 0.25s;\\r\\n}\\r\\n\\r\\n.ol-scale-bar {\\r\\n    position: absolute;\\r\\n    bottom: 8px;\\r\\n    left: 8px;\\r\\n}\\r\\n\\r\\n.ol-scale-step-marker {\\r\\n    width: 1px;\\r\\n    height: 15px;\\r\\n    background-color: #000000;\\r\\n    float: right;\\r\\n    z-Index: 10;\\r\\n}\\r\\n\\r\\n.ol-scale-step-text {\\r\\n    position: absolute;\\r\\n    bottom: -5px;\\r\\n    font-size: 12px;\\r\\n    z-Index: 11;\\r\\n    color: #000000;\\r\\n    text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\r\\n}\\r\\n\\r\\n.ol-scale-text {\\r\\n    position: absolute;\\r\\n    font-size: 14px;\\r\\n    text-align: center;\\r\\n    bottom: 25px;\\r\\n    color: #000000;\\r\\n    text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\r\\n}\\r\\n\\r\\n.ol-scale-singlebar {\\r\\n    position: relative;\\r\\n    height: 10px;\\r\\n    z-Index: 9;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.ol-overlay-container {\\r\\n    will-change: left, right, top, bottom;\\r\\n}\\r\\n\\r\\n.ol-unsupported {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.ol-viewport,\\r\\n.ol-unselectable {\\r\\n    -webkit-touch-callout: none;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -ms-user-select: none;\\r\\n    user-select: none;\\r\\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\r\\n}\\r\\n\\r\\n.ol-selectable {\\r\\n    -webkit-touch-callout: default;\\r\\n    -webkit-user-select: text;\\r\\n    -moz-user-select: text;\\r\\n    -ms-user-select: text;\\r\\n    user-select: text;\\r\\n}\\r\\n\\r\\n.ol-grabbing {\\r\\n    cursor: -webkit-grabbing;\\r\\n    cursor: -moz-grabbing;\\r\\n    cursor: grabbing;\\r\\n}\\r\\n\\r\\n.ol-grab {\\r\\n    cursor: move;\\r\\n    cursor: -webkit-grab;\\r\\n    cursor: -moz-grab;\\r\\n    cursor: grab;\\r\\n}\\r\\n\\r\\n.ol-control {\\r\\n    position: absolute;\\r\\n    background-color: rgba(255, 255, 255, 0.4);\\r\\n    border-radius: 4px;\\r\\n    padding: 2px;\\r\\n}\\r\\n\\r\\n.ol-control:hover {\\r\\n    background-color: rgba(255, 255, 255, 0.6);\\r\\n}\\r\\n\\r\\n.ol-zoom {\\r\\n    top: .5em;\\r\\n    left: .5em;\\r\\n}\\r\\n\\r\\n.ol-rotate {\\r\\n    top: .5em;\\r\\n    right: .5em;\\r\\n    transition: opacity .25s linear, visibility 0s linear;\\r\\n}\\r\\n\\r\\n.ol-rotate.ol-hidden {\\r\\n    opacity: 0;\\r\\n    visibility: hidden;\\r\\n    transition: opacity .25s linear, visibility 0s linear .25s;\\r\\n}\\r\\n\\r\\n.ol-zoom-extent {\\r\\n    top: 4.643em;\\r\\n    left: .5em;\\r\\n}\\r\\n\\r\\n.ol-full-screen {\\r\\n    right: .5em;\\r\\n    top: .5em;\\r\\n}\\r\\n\\r\\n@media print {\\r\\n    .ol-control {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n.ol-control button {\\r\\n    display: block;\\r\\n    margin: 1px;\\r\\n    padding: 0;\\r\\n    color: white;\\r\\n    font-size: 1.14em;\\r\\n    font-weight: bold;\\r\\n    text-decoration: none;\\r\\n    text-align: center;\\r\\n    height: 1.375em;\\r\\n    width: 1.375em;\\r\\n    line-height: .4em;\\r\\n    background-color: rgba(0, 60, 136, 0.5);\\r\\n    border: none;\\r\\n    border-radius: 2px;\\r\\n}\\r\\n\\r\\n.ol-control button::-moz-focus-inner {\\r\\n    border: none;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.ol-zoom-extent button {\\r\\n    line-height: 1.4em;\\r\\n}\\r\\n\\r\\n.ol-compass {\\r\\n    display: block;\\r\\n    font-weight: normal;\\r\\n    font-size: 1.2em;\\r\\n    will-change: transform;\\r\\n}\\r\\n\\r\\n.ol-touch .ol-control button {\\r\\n    font-size: 1.5em;\\r\\n}\\r\\n\\r\\n.ol-touch .ol-zoom-extent {\\r\\n    top: 5.5em;\\r\\n}\\r\\n\\r\\n.ol-control button:hover,\\r\\n.ol-control button:focus {\\r\\n    text-decoration: none;\\r\\n    background-color: rgba(0, 60, 136, 0.7);\\r\\n}\\r\\n\\r\\n.ol-zoom .ol-zoom-in {\\r\\n    border-radius: 2px 2px 0 0;\\r\\n}\\r\\n\\r\\n.ol-zoom .ol-zoom-out {\\r\\n    border-radius: 0 0 2px 2px;\\r\\n}\\r\\n\\r\\n.ol-attribution {\\r\\n    text-align: right;\\r\\n    bottom: .5em;\\r\\n    right: .5em;\\r\\n    max-width: calc(100% - 1.3em);\\r\\n}\\r\\n\\r\\n.ol-attribution ul {\\r\\n    margin: 0;\\r\\n    padding: 0 .5em;\\r\\n    font-size: .7rem;\\r\\n    line-height: 1.375em;\\r\\n    color: #000;\\r\\n    text-shadow: 0 0 2px #fff;\\r\\n}\\r\\n\\r\\n.ol-attribution li {\\r\\n    display: inline;\\r\\n    list-style: none;\\r\\n    line-height: inherit;\\r\\n}\\r\\n\\r\\n.ol-attribution li:not(:last-child):after {\\r\\n    content: \\\" \\\";\\r\\n}\\r\\n\\r\\n.ol-attribution img {\\r\\n    max-height: 2em;\\r\\n    max-width: inherit;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.ol-attribution ul,\\r\\n.ol-attribution button {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.ol-attribution.ol-collapsed ul {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.ol-attribution:not(.ol-collapsed) {\\r\\n    background: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n.ol-attribution.ol-uncollapsible {\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    border-radius: 4px 0 0;\\r\\n    height: 1.1em;\\r\\n    line-height: 1em;\\r\\n}\\r\\n\\r\\n.ol-attribution.ol-uncollapsible img {\\r\\n    margin-top: -.2em;\\r\\n    max-height: 1.6em;\\r\\n}\\r\\n\\r\\n.ol-attribution.ol-uncollapsible button {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.ol-zoomslider {\\r\\n    top: 4.5em;\\r\\n    left: .5em;\\r\\n    height: 200px;\\r\\n}\\r\\n\\r\\n.ol-zoomslider button {\\r\\n    position: relative;\\r\\n    height: 10px;\\r\\n}\\r\\n\\r\\n.ol-touch .ol-zoomslider {\\r\\n    top: 5.5em;\\r\\n}\\r\\n\\r\\n.ol-overviewmap {\\r\\n    left: 0.5em;\\r\\n    bottom: 0.5em;\\r\\n}\\r\\n\\r\\n.ol-overviewmap.ol-uncollapsible {\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    border-radius: 0 4px 0 0;\\r\\n}\\r\\n\\r\\n.ol-overviewmap .ol-overviewmap-map,\\r\\n.ol-overviewmap button {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.ol-overviewmap .ol-overviewmap-map {\\r\\n    border: 1px solid #7b98bc;\\r\\n    height: 150px;\\r\\n    margin: 2px;\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n.ol-overviewmap:not(.ol-collapsed) button {\\r\\n    bottom: 1px;\\r\\n    left: 2px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\r\\n.ol-overviewmap.ol-uncollapsible button {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.ol-overviewmap:not(.ol-collapsed) {\\r\\n    background: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n.ol-overviewmap-box {\\r\\n    border: 2px dotted rgba(0, 60, 136, 0.7);\\r\\n}\\r\\n\\r\\n.ol-overviewmap .ol-overviewmap-box:hover {\\r\\n    cursor: move;\\r\\n}\", \"\"]);\n\n","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"html,\\r\\nbody {\\r\\n    margin: 0;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n/* toolbar样式 s */\\r\\n\\r\\n.navbar-offset {\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n\\r\\n/* toolbar样式 e */\\r\\n\\r\\n#map {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-custom-overviewmap,\\r\\n.ol-custom-overviewmap.ol-uncollapsible {\\r\\n    /* bottom: auto;\\r\\n    left: auto;\\r\\n    right: 0;\\r\\n    top: 0; */\\r\\n    left: auto;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.ol-custom-overviewmap:not(.ol-collapsed) {\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.ol-custom-overviewmap .ol-overviewmap-map {\\r\\n    border: none;\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.ol-custom-overviewmap .ol-overviewmap-box {\\r\\n    border: 2px solid red;\\r\\n}\\r\\n\\r\\n.ol-custom-overviewmap:not(.ol-collapsed) button {\\r\\n    bottom: auto;\\r\\n    left: auto;\\r\\n    right: 1px;\\r\\n    top: 1px;\\r\\n}\\r\\n\\r\\n.ol-rotate {\\r\\n    top: 170px;\\r\\n    right: 0;\\r\\n}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Imports\nvar urlEscape = require(\"../../../../node_modules/css-loader/dist/runtime/url-escape.js\");\nvar ___CSS_LOADER_URL___0___ = urlEscape(require(\"./images/slider.png\"));\n\n// Module\nexports.push([module.id, \".ol-overlaycontainer-stopevent .ol-attribution {\\r\\n    text-align: right;\\r\\n    bottom: .5em;\\r\\n    left: .5em;\\r\\n    max-width: calc(100% - 1.3em)\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution ul {\\r\\n    margin: 0;\\r\\n    padding: 0 .5em;\\r\\n    font-size: .7rem;\\r\\n    line-height: 1.375em;\\r\\n    color: #000;\\r\\n    text-shadow: 0 0 2px #fff\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution li {\\r\\n    display: inline;\\r\\n    list-style: none;\\r\\n    line-height: inherit\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution li:not(:last-child):after {\\r\\n    content: \\\" \\\"\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution img {\\r\\n    max-height: 2em;\\r\\n    max-width: inherit;\\r\\n    vertical-align: middle\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution button,\\r\\n.ol-overlaycontainer-stopevent .ol-attribution ul {\\r\\n    display: inline-block\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-collapsed ul {\\r\\n    display: none\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-logo-only ul {\\r\\n    display: block\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution:not(.ol-collapsed) {\\r\\n    background: hsla(0, 0%, 100%, .8)\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-uncollapsible {\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    border-radius: 4px 0 0;\\r\\n    height: 1.1em;\\r\\n    line-height: 1em\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-logo-only {\\r\\n    background: transparent;\\r\\n    bottom: .4em;\\r\\n    height: 1.1em;\\r\\n    line-height: 1em\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-uncollapsible img {\\r\\n    margin-top: -.2em;\\r\\n    max-height: 1.6em\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-logo-only button,\\r\\n.ol-overlaycontainer-stopevent .ol-attribution.ol-uncollapsible button {\\r\\n    display: none\\r\\n}\\r\\n\\r\\n.hmap-control-zoom {\\r\\n    position: absolute;\\r\\n    width: 28px;\\r\\n    height: 60px;\\r\\n    bottom: .5em;\\r\\n    right: .5em;\\r\\n    pointer-events: none\\r\\n}\\r\\n\\r\\n.hmap-control-zoom span {\\r\\n    padding: 2px;\\r\\n    display: inline-block;\\r\\n    font-size: 22px;\\r\\n    color: #7c8196;\\r\\n    width: 26px;\\r\\n    height: 26px;\\r\\n    text-align: center;\\r\\n    line-height: 26px;\\r\\n    background-color: #fff;\\r\\n    pointer-events: auto;\\r\\n    -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, .15);\\r\\n    box-shadow: 0 2px 2px rgba(0, 0, 0, .15)\\r\\n}\\r\\n\\r\\n.hmap-control-zoom span:hover {\\r\\n    cursor: pointer;\\r\\n    color: #2c9eff\\r\\n}\\r\\n\\r\\n.hmap-control-zoom .zoom-in {\\r\\n    border-radius: 2px 2px 0 0;\\r\\n    border-bottom: 1px solid #dbdee2\\r\\n}\\r\\n\\r\\n.hmap-control-zoom .zoom-out {\\r\\n    border-radius: 0 0 2px 2px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider {\\r\\n    position: absolute;\\r\\n    /* top: 20px;\\r\\n    left: 20px */\\r\\n    top: 10%;\\r\\n    left: 2%;\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content {\\r\\n    width: 44px;\\r\\n    height: 44px;\\r\\n    overflow: hidden;\\r\\n    background-position: 0 0;\\r\\n    background-repeat: no-repeat;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL___0___ + \")\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-button {\\r\\n    position: absolute;\\r\\n    height: 15px;\\r\\n    width: 15px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-n {\\r\\n    left: 14px;\\r\\n    top: 0\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-n:hover {\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-n:hover .hmap-zoom-slider-translate-content {\\r\\n    background-position: 0 -44px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-s {\\r\\n    left: 14px;\\r\\n    top: 25px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-s:hover {\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-s:hover .hmap-zoom-slider-translate-content {\\r\\n    background-position: 0 -132px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-w {\\r\\n    left: 1px;\\r\\n    top: 12px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-w:hover {\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-w:hover .hmap-zoom-slider-translate-content {\\r\\n    background-position: 0 -176px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-e {\\r\\n    left: 27px;\\r\\n    top: 12px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-e:hover {\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-translate-content .hmap-zoom-slider-translate-e:hover .hmap-zoom-slider-translate-content {\\r\\n    background-position: 0 -88px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content {\\r\\n    text-align: center;\\r\\n    height: 130px;\\r\\n    top: 25px;\\r\\n    position: relative\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-in {\\r\\n    position: absolute;\\r\\n    top: -19px;\\r\\n    width: 22px;\\r\\n    height: 21px;\\r\\n    left: 12px;\\r\\n    overflow: hidden;\\r\\n    background-position: 0 -221px;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL___0___ + \");\\r\\n    background-repeat: no-repeat\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-in:hover {\\r\\n    background-position: 0 -243px;\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-out {\\r\\n    position: absolute;\\r\\n    bottom: -20px;\\r\\n    width: 22px;\\r\\n    height: 21px;\\r\\n    left: 12px;\\r\\n    overflow: hidden;\\r\\n    background-position: 0 -265px;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL___0___ + \");\\r\\n    background-repeat: no-repeat\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-out:hover {\\r\\n    background-position: 0 -287px;\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-slider .slider-background-top {\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    left: 18px;\\r\\n    width: 10px;\\r\\n    overflow: hidden;\\r\\n    background: url(\" + ___CSS_LOADER_URL___0___ + \") no-repeat -23px -226px\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-slider .slider-background-bottom {\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    width: 10px;\\r\\n    left: 19px;\\r\\n    bottom: 0;\\r\\n    overflow: hidden;\\r\\n    background: url(\" + ___CSS_LOADER_URL___0___ + \") no-repeat -33px bottom\\r\\n}\\r\\n\\r\\n.hmap-zoom-slider .hmap-zoom-slider-content .hmap-zoom-slider-zoom-slider .slider-bar {\\r\\n    position: absolute;\\r\\n    left: 13px;\\r\\n    height: 11px;\\r\\n    width: 19px;\\r\\n    overflow: hidden;\\r\\n    background: url(\" + ___CSS_LOADER_URL___0___ + \") no-repeat 0 -309px\\r\\n}\\r\\n\\r\\n.ol-box {\\r\\n    -webkit-box-sizing: border-box;\\r\\n    box-sizing: border-box;\\r\\n    border-radius: 2px;\\r\\n    border: 2px solid blue\\r\\n}\\r\\n\\r\\n.ol-mouse-position {\\r\\n    top: 8px;\\r\\n    right: 8px;\\r\\n    position: absolute\\r\\n}\\r\\n\\r\\n.ol-overlay-container {\\r\\n    will-change: left, right, top, bottom\\r\\n}\\r\\n\\r\\n.ol-unsupported {\\r\\n    display: none\\r\\n}\\r\\n\\r\\n.ol-unselectable,\\r\\n.ol-viewport {\\r\\n    -webkit-touch-callout: none;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -ms-user-select: none;\\r\\n    user-select: none;\\r\\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0)\\r\\n}\\r\\n\\r\\n.ol-selectable {\\r\\n    -webkit-touch-callout: default;\\r\\n    -webkit-user-select: auto;\\r\\n    -moz-user-select: auto;\\r\\n    -ms-user-select: auto;\\r\\n    user-select: auto\\r\\n}\\r\\n\\r\\n.ol-grabbing {\\r\\n    cursor: -webkit-grabbing;\\r\\n    cursor: grabbing\\r\\n}\\r\\n\\r\\n.ol-grab {\\r\\n    cursor: move;\\r\\n    cursor: -webkit-grab;\\r\\n    cursor: grab\\r\\n}\\r\\n\\r\\n.ol-control {\\r\\n    position: absolute;\\r\\n    background-color: hsla(0, 0%, 100%, .8);\\r\\n    border-radius: 4px\\r\\n}\\r\\n\\r\\n.ol-control button {\\r\\n    display: block;\\r\\n    padding: 0;\\r\\n    color: #7c8196;\\r\\n    font-size: 1.14em;\\r\\n    font-weight: 700;\\r\\n    text-decoration: none;\\r\\n    text-align: center;\\r\\n    height: 1.375em;\\r\\n    width: 1.375em;\\r\\n    line-height: 1.375em;\\r\\n    background-color: #fff;\\r\\n    border: none;\\r\\n    border-radius: 2px\\r\\n}\\r\\n\\r\\n.ol-control button::-moz-focus-inner {\\r\\n    border: none;\\r\\n    padding: 0\\r\\n}\\r\\n\\r\\n.ol-control:hover {\\r\\n    background-color: hsla(0, 0%, 100%, .6)\\r\\n}\\r\\n\\r\\n.ol-rotate {\\r\\n    top: .5em;\\r\\n    right: .5em;\\r\\n    -webkit-transition: opacity .25s linear, visibility 0s linear;\\r\\n    transition: opacity .25s linear, visibility 0s linear\\r\\n}\\r\\n\\r\\n.ol-rotate.ol-hidden {\\r\\n    opacity: 0;\\r\\n    visibility: hidden;\\r\\n    -webkit-transition: opacity .25s linear, visibility 0s linear .25s;\\r\\n    transition: opacity .25s linear, visibility 0s linear .25s\\r\\n}\\r\\n\\r\\n.ol-zoom-extent {\\r\\n    top: 4.643em;\\r\\n    left: .5em\\r\\n}\\r\\n\\r\\n.ol-overlaycontainer-stopevent .hmap-control-zoom {\\r\\n    right: 1.85em\\r\\n}\\r\\n\\r\\n@media print {\\r\\n    .ol-control {\\r\\n        display: none\\r\\n    }\\r\\n}\", \"\"]);\n\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./common.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./common.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./common.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./OverviewMapControl.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./OverviewMapControl.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./OverviewMapControl.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./BZoomSlider.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!./BZoomSlider.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./BZoomSlider.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\"use strict\";\n\nmodule.exports = function escape(url, needQuotes) {\n  if (typeof url !== 'string') {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || needQuotes) {\n    return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"';\n  }\n\n  return url;\n};","module.exports = __webpack_public_path__ + \"images/slider.png\";","/**\r\n * 配置文件\r\n * @author ydx\r\n * @date 2019-03-22\r\n */\r\n\r\nconst Config = {\r\n    mapConfig: {\r\n        center: [116.404269, 39.913828],\r\n        // center: [12929479, 4843400],\r\n        projection: 'EPSG:4326',\r\n        // projection: 'EPSG:3857',\r\n        zoom: 12,\r\n    },\r\n    //esriTileLayer\r\n\r\n    //baseMap\r\n    LayersURL: {\r\n        TiledMapServiceLayerURL: 'http://a4.petrochina/A4Service/WMTS/TDTVEC/MapServer/tile/{z}/{y}/{x}',\r\n        TDTCVALayerURL: 'http://a4.petrochina/A4Service/WMTS/TDTCVA/MapServer/tile/{z}/{y}/{x}',\r\n    },\r\n    //imageWMS\r\n    ImageWMSSource: {\r\n        url: 'http://localhost:8081/geoserver/wms?service=WMS',\r\n        params: { LAYERS: 'localhost' },\r\n        serverType: 'geoserver',\r\n        crossOrigin: 'anonymous',\r\n    },\r\n    //wmtsLayer\r\n    WMTSSource: {\r\n        // url: 'http://localhost:8081/geoserver/gwc/service/wms?',\r\n        url: 'http://localhost:8083/geoserver2.15/gwc/service/wms?',\r\n        params: {\r\n            FORMAT: 'image/png',\r\n            VERSION: '1.1.0',\r\n            tiled: true,\r\n            STYLES: '',\r\n            LAYERS: 'localhost:global_polygon',\r\n            //tilesOrigin: -124.73142200000001 + \",\" + 24.955967\r\n        },\r\n    },\r\n    //fileStore or s3 blobStore\r\n    blobStoreLayerSource: {\r\n        projection: 'EPSG:3857',\r\n        // url: 'http://11.53.55.10/gis/tiles-cache-dev/LayerInfoImpl--3d41865b%3A169c2fa5945%3A-7ffc/EPSG%3A4326/png/default/{z}/{x}/{-y}.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=pcep%2F20190328%2F%2Fs3%2Faws4_request&X-Amz-Date=20190328T073716Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=c601d1c7eca5a2dcd9b1a23f5bf88037914a208c9c2ea906019cc8c4909d1e24'\r\n        url: 'http://localhost/localhost_global_polygon/{z}/{x}/{-y}.png',\r\n    },\r\n};\r\n\r\nexport default Config;","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\r\n * 地图加载\r\n * @author ydx\r\n * @date 2019-03-22\r\n */\r\nimport '../../../css/ol.css';\r\nimport '../../../css/common.css';\r\nimport Config from '../config/config';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\n\r\n/* import TileLayer from 'ol/layer/Tile.js';\r\nimport OSM from 'ol/source/OSM.js'; */\r\n\r\nconst map = new Map({\r\n    target: 'map',\r\n    controls: [\r\n\r\n    ],\r\n    layers: [\r\n        /* new TileLayer({\r\n        \tsource: new OSM(),\r\n        }), */\r\n    ],\r\n    view: new View({\r\n        center: Config.mapConfig.center,\r\n        zoom: Config.mapConfig.zoom,\r\n        projection: Config.mapConfig.projection\r\n    }),\r\n});\r\n\r\nexport default map;","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\r\n * zoomSlider插件\r\n * @autho ydx\r\n * @date 2019-04-02\r\n */\r\nimport Control from 'ol/control/Control';\r\nimport { linear as Linear, easeOut as EaseOut } from 'ol/easing';\r\nimport { rotate as Rotate } from 'ol/coordinate';\r\n\r\nconst BASE_CLASS_NAME = {\r\n    CLASS_HIDDEN: 'hmap-hidden',\r\n    CLASS_SELECTABLE: 'hmap-selectable',\r\n    CLASS_UNSELECTABLE: 'hmap-unselectable',\r\n    CLASS_CONTROL: 'hmap-control',\r\n};\r\n\r\nconst Direction_ = {\r\n    VERTICAL: 0,\r\n    HORIZONTAL: 1,\r\n};\r\n\r\n\r\nexport default class BZoomSlider {\r\n    constructor(params) {\r\n        this.options = params || {};\r\n\r\n        this.currentResolution_ = undefined;\r\n\r\n        this.direction_ = Direction_.VERTICAL;\r\n\r\n        this.dragging_ = false;\r\n\r\n        this.heightLimit_ = 0;\r\n\r\n        this.widthLimit_ = 0;\r\n\r\n        this.previousX_ = null;\r\n\r\n        this.previousY_ = null;\r\n\r\n        this.thumbSize_ = null;\r\n\r\n        this.sliderInitialized_ = false;\r\n\r\n        this.duration_ = this.options['duration'] !== undefined ? this.options['duration'] : 200;\r\n\r\n        this.viewHint = {\r\n            ANIMATING: 0,\r\n            INTERACTING: 1,\r\n        };\r\n\r\n        this.pixelDelta_ = this.options['pixelDelta'] !== undefined ? this.options['pixelDelta'] : 128;\r\n\r\n        var className = this.options.className !== undefined ? this.options.className : 'hmap-zoom-slider';\r\n\r\n        this.element = this.createElement('div', className + ' ' + BASE_CLASS_NAME.CLASS_UNSELECTABLE);\r\n\r\n        var translateContent = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-translate-content' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            this.element\r\n        );\r\n\r\n        var silderContent = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-content' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            this.element\r\n        );\r\n\r\n        var translateN = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-button hmap-zoom-slider-translate-n' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            translateContent\r\n        );\r\n        translateN.setAttribute('title', '向上平移');\r\n        this.listen(translateN, 'click', this.handletranslateClick_.bind(this, 'translateN'));\r\n        var translateS = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-button hmap-zoom-slider-translate-s' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            translateContent\r\n        );\r\n        translateS.setAttribute('title', '向下平移');\r\n        this.listen(translateS, 'click', this.handletranslateClick_.bind(this, 'translateS'));\r\n        var translateW = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-button hmap-zoom-slider-translate-w' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            translateContent\r\n        );\r\n        translateW.setAttribute('title', '向左平移');\r\n        this.listen(translateW, 'click', this.handletranslateClick_.bind(this, 'translateW'));\r\n        var translateE = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-button hmap-zoom-slider-translate-e' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            translateContent\r\n        );\r\n        translateE.setAttribute('title', '向右平移');\r\n        this.listen(translateE, 'click', this.handletranslateClick_.bind(this, 'translateE'));\r\n        var zoomIn = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-zoom-in' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            silderContent\r\n        );\r\n        zoomIn.setAttribute('title', '放大');\r\n        this.listen(zoomIn, 'click', this.handleZoomClick_.bind(this, 1));\r\n\r\n        var zoomOut = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-zoom-out' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            silderContent\r\n        );\r\n        zoomOut.setAttribute('title', '缩小');\r\n        this.listen(zoomOut, 'click', this.handleZoomClick_.bind(this, -1));\r\n\r\n        var slider = this.createElement(\r\n            'div',\r\n            'hmap-zoom-slider-zoom-slider' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            silderContent\r\n        );\r\n        this.sliderBackgroundTop = this.createElement(\r\n            'div',\r\n            'slider-background-top' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            slider\r\n        );\r\n        this.sliderBackgroundBottom = this.createElement(\r\n            'div',\r\n            'slider-background-bottom' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            slider\r\n        );\r\n        var sliderBackgroundMask = this.createElement(\r\n            'div',\r\n            'slider-background-mask' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE,\r\n            slider\r\n        );\r\n        sliderBackgroundMask.setAttribute('title', '缩放到此级别');\r\n        this.sliderBar = this.createElement('div', 'slider-bar' + ' ' + BASE_CLASS_NAME.CLASS_SELECTABLE, slider);\r\n        this.sliderBar.setAttribute('title', '滑动缩放地图');\r\n\r\n        this.silderContent = silderContent;\r\n\r\n        this.listen(this.silderContent, 'pointerdown', this.handleDraggerStart_, this);\r\n        this.listen(this.silderContent, 'pointermove', this.handleDraggerDrag_, this);\r\n        this.listen(this.silderContent, 'pointerup', this.handleDraggerEnd_, this);\r\n        this.listen(this.silderContent, 'click', this.handleContainerClick_, this);\r\n        this.listen(this.sliderBar, 'click', function(event) {\r\n            event.stopPropagation();\r\n        });\r\n        var render = this.options['render'] ? this.options['render'] : this.render;\r\n        Control.call(this, {\r\n            element: this.element,\r\n            render: render,\r\n            target: this.options['target'],\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleZoomClick_(delta, event) {\r\n        event.preventDefault();\r\n        this.zoomByDelta_(delta);\r\n    }\r\n\r\n    handletranslateClick_(type, event) {\r\n        event.preventDefault();\r\n        var view = this.getMap().getView();\r\n        var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n        var deltaX = 0,\r\n            deltaY = 0;\r\n\r\n        switch (type) {\r\n            case 'translateN':\r\n                deltaY = mapUnitsDelta;\r\n                break;\r\n            case 'translateS':\r\n                deltaY = -mapUnitsDelta;\r\n                break;\r\n            case 'translateW':\r\n                deltaX = -mapUnitsDelta;\r\n                break;\r\n            case 'translateE':\r\n                deltaX = mapUnitsDelta;\r\n                break;\r\n        }\r\n        var delta = [deltaX, deltaY];\r\n        Rotate(delta, view.getRotation());\r\n        this.pan(view, delta, this.duration_);\r\n    }\r\n    pan(view, delta, optDuration) {\r\n        var currentCenter = view.getCenter();\r\n        if (currentCenter) {\r\n            var center = view.constrainCenter([currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\r\n            if (optDuration) {\r\n                view.animate({\r\n                    duration: optDuration,\r\n                    easing: Linear,\r\n                    center: center,\r\n                });\r\n            } else {\r\n                view.setCenter(center);\r\n            }\r\n        }\r\n    }\r\n\r\n    zoomByDelta_(delta) {\r\n        var view = this.getMap().getView();\r\n        if (view) {\r\n            var currentResolution = view.getResolution();\r\n            if (currentResolution) {\r\n                var newResolution = view.constrainResolution(currentResolution, delta);\r\n                if (this.duration_ > 0) {\r\n                    if (view.getAnimating()) {\r\n                        view.cancelAnimations();\r\n                    }\r\n                    view.animate({\r\n                        resolution: newResolution,\r\n                        duration: this.duration_,\r\n                        easing: EaseOut,\r\n                    });\r\n                } else {\r\n                    view.setResolution(newResolution);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(mapEvent) {\r\n        if (!mapEvent.frameState) {\r\n            return;\r\n        }\r\n        if (!this.sliderInitialized_) {\r\n            this.initSlider_();\r\n        }\r\n        var res = mapEvent.frameState.viewState.resolution;\r\n        if (res !== this.currentResolution_) {\r\n            this.currentResolution_ = res;\r\n            this.setThumbPosition_(res);\r\n        }\r\n    }\r\n\r\n    setMap(map) {\r\n        if (map) {\r\n            Control.prototype.setMap.call(this, map);\r\n            if (map) {\r\n                map.render();\r\n            }\r\n        } else {\r\n            throw Error('传入的不是地图对象！');\r\n        }\r\n    }\r\n\r\n    getMap() {\r\n        return this.map_;\r\n    }\r\n\r\n    disposeInternal() {\r\n        listen(this.silderContent, 'pointercancel', function(event) {}, this);\r\n        Control.prototype.disposeInternal.call(this);\r\n    }\r\n\r\n    initSlider_() {\r\n        var container = this.silderContent;\r\n        var containerSize = {\r\n            width: container.offsetWidth,\r\n            height: container.offsetHeight,\r\n        };\r\n        var thumb = this.getElement('.slider-bar', container)[0];\r\n        var computedStyle = getComputedStyle(thumb);\r\n        var thumbWidth =\r\n            thumb.offsetWidth + parseFloat(computedStyle['marginRight']) + parseFloat(computedStyle['marginLeft']);\r\n        var thumbHeight =\r\n            thumb.offsetHeight + parseFloat(computedStyle['marginTop']) + parseFloat(computedStyle['marginBottom']);\r\n        this.thumbSize_ = [thumbWidth, thumbHeight];\r\n        if (containerSize.width > containerSize.height) {\r\n            this.direction_ = Direction_.HORIZONTAL;\r\n            this.widthLimit_ = containerSize.width - thumbWidth;\r\n        } else {\r\n            this.direction_ = Direction_.VERTICAL;\r\n            this.heightLimit_ = containerSize.height - thumbHeight;\r\n        }\r\n        this.sliderInitialized_ = true;\r\n    }\r\n\r\n    handleContainerClick_(event) {\r\n        var view = this.getMap().getView();\r\n        var relativePosition = this.getRelativePosition_(\r\n            event.offsetX - this.thumbSize_[0] / 2,\r\n            event.offsetY - this.thumbSize_[1] / 2\r\n        );\r\n        var resolution = this.getResolutionForPosition_(relativePosition);\r\n        view.animate({\r\n            resolution: view.constrainResolution(resolution),\r\n            duration: this.duration_,\r\n            easing: EaseOut,\r\n        });\r\n    }\r\n\r\n    handleDraggerStart_(event) {\r\n        if (!this.dragging_ && event.target === this.getElement('.slider-bar', this.silderContent)) {\r\n            this.previousX_ = event.clientX;\r\n            this.previousY_ = event.clientY;\r\n            this.dragging_ = true;\r\n        }\r\n    }\r\n\r\n    handleDraggerDrag_(event) {\r\n        if (this.dragging_) {\r\n            var element = this.getElement('.slider-bar', this.silderContent)[0];\r\n            var deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\r\n            var deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\r\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\r\n            this.getMap()\r\n                .getView()\r\n                .setResolution(this.currentResolution_);\r\n            this.setThumbPosition_(this.currentResolution_);\r\n            this.previousX_ = event.clientX;\r\n            this.previousY_ = event.clientY;\r\n        }\r\n    }\r\n\r\n    handleDraggerEnd_(event) {\r\n        if (this.dragging_) {\r\n            var view = this.getMap().getView();\r\n\r\n            view.animate({\r\n                resolution: view.constrainResolution(this.currentResolution_),\r\n                duration: this.duration_,\r\n                easing: EaseOut,\r\n            });\r\n            this.dragging_ = false;\r\n            this.previousX_ = undefined;\r\n            this.previousY_ = undefined;\r\n        }\r\n    }\r\n\r\n    setThumbPosition_(res) {\r\n        var position = this.getPositionForResolution_(res);\r\n        var thumb = this.getElement('.slider-bar', this.silderContent)[0];\r\n        if (this.direction_ === Direction_.HORIZONTAL) {\r\n            thumb.style.left = this.widthLimit_ * position + 'px';\r\n            this.sliderBackgroundBottom.style.width = this.widthLimit_ - (this.widthLimit_ * position - 5) + 'px';\r\n        } else {\r\n            thumb.style.top = this.heightLimit_ * position + 'px';\r\n            this.sliderBackgroundBottom.style.height = this.heightLimit_ - (this.heightLimit_ * position - 5) + 'px';\r\n        }\r\n    }\r\n\r\n    getRelativePosition_(x, y) {\r\n        var amount = void 0;\r\n        if (this.direction_ === Direction_.HORIZONTAL) {\r\n            amount = x / this.widthLimit_;\r\n        } else {\r\n            amount = y / this.heightLimit_;\r\n        }\r\n        return Math.min(Math.max(amount, 0), 1);\r\n    }\r\n\r\n    getResolutionForPosition_(position) {\r\n        var view = this.getMap().getView();\r\n        if (view) {\r\n            return this.getResolutionForValueFunction(1 - position);\r\n        }\r\n    }\r\n\r\n    getValueForResolutionFunction(resolution, optPower) {\r\n        var power = optPower || 2;\r\n        var view = this.getMap().getView();\r\n        var maxResolution = view.getMaxResolution();\r\n        var minResolution = view.getMinResolution();\r\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return Math.log(maxResolution / resolution) / Math.log(power) / max;\r\n    }\r\n\r\n    getResolutionForValueFunction(value, optPower) {\r\n        var power = optPower || 2;\r\n        var view = this.getMap().getView();\r\n        var maxResolution = view.getMaxResolution();\r\n        var minResolution = view.getMinResolution();\r\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return maxResolution / Math.pow(power, value * max);\r\n    }\r\n\r\n    getPositionForResolution_(res) {\r\n        var view = this.getMap().getView();\r\n        if (view) {\r\n            return 1 - this.getValueForResolutionFunction(res);\r\n        }\r\n    }\r\n\r\n    createElement(tagName, className, container, id) {\r\n        var el = document.createElement(tagName);\r\n        if (id) el.id = id;\r\n        if (className) this.addClass(el, className);\r\n        if (container) {\r\n            container.appendChild(el);\r\n        }\r\n        return el;\r\n    }\r\n\r\n    getElement(selector, root) {\r\n        var _root = root || window.document;\r\n        var dom = (function() {\r\n            var found = void 0;\r\n            return _root.document && /^#([\\w-]+)$/.test(selector) ?\r\n                (found = _root.getElementById(RegExp.$1)) ? [found] : [] :\r\n                Array.prototype.slice.call(\r\n                    /^\\.([\\w-]+)$/.test(selector) ?\r\n                    _root.getElementsByClassName(RegExp.$1) :\r\n                    /^[\\w-]+$/.test(selector) ?\r\n                    _root.getElementsByTagName(selector) :\r\n                    _root.querySelectorAll(selector)\r\n                );\r\n        })();\r\n        return dom;\r\n    }\r\n\r\n    getTarget(content) {\r\n        if (content instanceof Element) {\r\n            return content;\r\n        } else if (this.isString(content)) {\r\n            return document.getElementById(content);\r\n        } else {\r\n            throw new Error('Invalid map container!');\r\n        }\r\n    }\r\n\r\n    hasClass(el, cls) {\r\n        if (!el || !cls) return false;\r\n        if (cls.indexOf(' ') !== -1) {\r\n            throw new Error('className should not contain space.');\r\n        }\r\n        if (el.classList) {\r\n            return el.classList.contains(cls);\r\n        } else {\r\n            return (' ' + el.className + ' ').indexOf(' ' + cls + ' ') > -1;\r\n        }\r\n    }\r\n\r\n    addClass(el, cls) {\r\n        if (!el) return;\r\n        var curClass = el.className;\r\n        var classes = (cls || '').split(' ');\r\n        for (var i = 0, j = classes.length; i < j; i++) {\r\n            var clsName = classes[i];\r\n            if (!clsName) continue;\r\n            if (el.classList) {\r\n                el.classList.add(clsName);\r\n            } else if (!this.hasClass(el, clsName)) {\r\n                curClass += ' ' + clsName;\r\n            }\r\n        }\r\n        if (!el.classList) {\r\n            el.className = curClass;\r\n        }\r\n    }\r\n\r\n    removeClass(el, cls) {\r\n        if (!el || !cls) return;\r\n        var classes = cls.split(' ');\r\n        var curClass = ' ' + el.className + ' ';\r\n        for (var i = 0, j = classes.length; i < j; i++) {\r\n            var clsName = classes[i];\r\n            if (!clsName) continue;\r\n            if (el.classList) {\r\n                el.classList.remove(clsName);\r\n            } else if (this.hasClass(el, clsName)) {\r\n                curClass = curClass.replace(' ' + clsName + ' ', ' ');\r\n            }\r\n        }\r\n        if (!el.classList) {\r\n            el.className = this.trim(curClass);\r\n        }\r\n    }\r\n\r\n    stamp(obj) {\r\n        var key = '_event_id_';\r\n        obj[key] = obj[key] || this.getuuid();\r\n        return obj[key];\r\n    }\r\n\r\n    trim(str) {\r\n        return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\r\n    };\r\n\r\n    getuuid() {\r\n        var s = [],\r\n            hexDigits = '0123456789abcdef';\r\n\r\n        for (var i = 0; i < 36; i++) {\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        s[14] = '4';\r\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\r\n        s[8] = s[13] = s[18] = s[23] = '-';\r\n        return s.join('');\r\n    }\r\n\r\n    isString(value) {\r\n        if (value == null) {\r\n            return false;\r\n        }\r\n        return typeof value === 'string' || (value.constructor !== null && value.constructor === String);\r\n    }\r\n\r\n    bindListener(listenerObj) {\r\n        var boundListener = function boundListener(evt) {\r\n            var listener = listenerObj.listener;\r\n            var bindTo = listenerObj.bindTo || listenerObj.target;\r\n            if (listenerObj.callOnce) {\r\n                this.unListenByKey(listenerObj);\r\n            }\r\n            return listener.call(bindTo, evt);\r\n        };\r\n        listenerObj.boundListener = boundListener;\r\n        return boundListener;\r\n    };\r\n\r\n    findListener(listeners, listener, optThis, optSetDeleteIndex) {\r\n        var listenerObj = null;\r\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n            listenerObj = listeners[i];\r\n            if (listenerObj.listener === listener && listenerObj.bindTo === optThis) {\r\n                if (optSetDeleteIndex) {\r\n                    listenerObj.deleteIndex = i;\r\n                }\r\n                return listenerObj;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    getListeners(target, type) {\r\n        var listenerMap = target.vlm;\r\n        return listenerMap ? listenerMap[type] : undefined;\r\n    };\r\n\r\n    getListenerMap(target) {\r\n        var listenerMap = target.vlm;\r\n        if (!listenerMap) {\r\n            listenerMap = target.vlm = {};\r\n        }\r\n        return listenerMap;\r\n    };\r\n\r\n    removeListeners(target, type) {\r\n        var listeners = this.getListeners(target, type);\r\n        if (listeners) {\r\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n                target.removeEventListener(type, listeners[i].boundListener);\r\n                this.clear(listeners[i]);\r\n            }\r\n            listeners.length = 0;\r\n            var listenerMap = target.vlm;\r\n            if (listenerMap) {\r\n                delete listenerMap[type];\r\n                if (Object.keys(listenerMap).length === 0) {\r\n                    delete target.vlm;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    listen(target, type, listener, optThis, optOnce) {\r\n        var listenerMap = this.getListenerMap(target);\r\n        var listeners = listenerMap[type];\r\n        if (!listeners) {\r\n            listeners = listenerMap[type] = [];\r\n        }\r\n        var listenerObj = this.findListener(listeners, listener, optThis, false);\r\n        if (listenerObj) {\r\n            if (!optOnce) {\r\n                listenerObj.callOnce = false;\r\n            }\r\n        } else {\r\n            listenerObj = {\r\n                bindTo: optThis,\r\n                callOnce: !!optOnce,\r\n                listener: listener,\r\n                target: target,\r\n                type: type,\r\n            };\r\n            target.addEventListener(type, this.bindListener(listenerObj));\r\n            listeners.push(listenerObj);\r\n        }\r\n        return listenerObj;\r\n    };\r\n\r\n    listenOnce(target, type, listener, optThis) {\r\n        return this.listen(target, type, listener, optThis, true);\r\n    };\r\n\r\n    unListen(target, type, listener, optThis) {\r\n        var listeners = this.getListeners(target, type);\r\n        if (listeners) {\r\n            var listenerObj = this.findListener(listeners, listener, optThis, true);\r\n            if (listenerObj) {\r\n                this.unListenByKey(listenerObj);\r\n            }\r\n        }\r\n    };\r\n\r\n    unListenByKey(key) {\r\n        if (key && key.target) {\r\n            key.target.removeEventListener(key.type, key.boundListener);\r\n            var listeners = this.getListeners(key.target, key.type);\r\n            if (listeners) {\r\n                var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\r\n                if (i !== -1) {\r\n                    listeners.splice(i, 1);\r\n                }\r\n                if (listeners.length === 0) {\r\n                    this.removeListeners(key.target, key.type);\r\n                }\r\n            }\r\n            this.clear(key);\r\n        }\r\n    };\r\n\r\n    clear(object) {\r\n        for (var property in object) {\r\n            delete object[property];\r\n        }\r\n    };\r\n\r\n    getDomEventKey(type, fn, context) {\r\n        return '_dom_event_' + type + '_' + this.stamp(fn) + (context ? '_' + this.stamp(context) : '');\r\n    };\r\n\r\n    addListener(element, type, fn, context) {\r\n        var eventKey = this.getDomEventKey(type, fn, context);\r\n        var handler = element[eventKey];\r\n        if (handler) {\r\n            return this;\r\n        }\r\n        handler = function handler(e) {\r\n            return fn.call(context || element, e);\r\n        };\r\n        if ('addEventListener' in element) {\r\n            element.addEventListener(type, handler, false);\r\n        } else if ('attachEvent' in element) {\r\n            element.attachEvent('on' + type, handler);\r\n        }\r\n        element[eventKey] = handler;\r\n        return this;\r\n    };\r\n\r\n}","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\r\n * 绘制控件\r\n * @author ydx\r\n * @date 2019-04-03\r\n */\r\nimport Polygon from 'ol/geom/Polygon';\r\nimport Draw, { createRegularPolygon, createBox } from 'ol/interaction/Draw';\r\nimport GeometryType from 'ol/geom/GeometryType';\r\nimport { Vector as VectorLayer } from 'ol/layer';\r\nimport { Vector as VectorSource } from 'ol/source';\r\n\r\nexport default class DrawControl {\r\n    constructor(param) {\r\n        this.type = param.type;\r\n    }\r\n\r\n    /* deactivateControl() {\r\n        this.setActive(false);\r\n    }\r\n\r\n    activateControl(type) {\r\n        this.setActive(true);\r\n    } */\r\n\r\n    getInteraction(type) {\r\n        var value,\r\n            geometryFunction,\r\n            drawControl;\r\n        switch (type) {\r\n            case 'Square':\r\n                value = GeometryType.CIRCLE;\r\n                geometryFunction = createRegularPolygon(4);\r\n                break;\r\n\r\n            case 'Box':\r\n                value = GeometryType.CIRCLE;\r\n                geometryFunction = createBox();\r\n                break;\r\n\r\n            case 'Star':\r\n                value = GeometryType.CIRCLE;\r\n                geometryFunction = function(coordinates, geometry) {\r\n                    var center = coordinates[0];\r\n                    var last = coordinates[1];\r\n                    var dx = center[0] - last[0];\r\n                    var dy = center[1] - last[1];\r\n                    var radius = Math.sqrt(dx * dx + dy * dy);\r\n                    var rotation = Math.atan2(dy, dx);\r\n                    var newCoordinates = [];\r\n                    var numPoints = 12;\r\n                    for (var i = 0; i < numPoints; ++i) {\r\n                        var angle = rotation + i * 2 * Math.PI / numPoints;\r\n                        var fraction = i % 2 === 0 ? 1 : 0.5;\r\n                        var offsetX = radius * fraction * Math.cos(angle);\r\n                        var offsetY = radius * fraction * Math.sin(angle);\r\n                        newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);\r\n                    }\r\n                    newCoordinates.push(newCoordinates[0].slice());\r\n                    if (!geometry) {\r\n                        geometry = new Polygon([newCoordinates]);\r\n                    } else {\r\n                        geometry.setCoordinates([newCoordinates]);\r\n                    }\r\n                    return geometry;\r\n                };\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (value) {\r\n            drawControl = new Draw({\r\n                source: new VectorLayer({\r\n                    source: new VectorSource({ wrapX: false })\r\n                }),\r\n                type: value,\r\n                snapTolerance: 12, //默认吸附距离\r\n                geometryFunction: geometryFunction\r\n            });\r\n            //默认关闭\r\n            // drawControl.setActive(false);\r\n        }\r\n\r\n        return drawControl;\r\n    }\r\n}","import map from './src/ol/compenents/Map';\r\n\r\n//esri离线切片服务\r\nimport ArcGISTileLayers from './src/ol/compenents/Layers/ArcGISTileLayer';\r\n//鹰眼图\r\nimport OverviewMapControl from './src/ol/compenents/controls/overviewMap/OverviewMapControl';\r\n//比例尺\r\nimport ScaleBarControl from './src/ol/compenents/controls/scalebar/ScaleBar';\r\n//导航条\r\nimport ZoomSildweControl from './src/ol/compenents/controls/zoomSlider/ZoomSlider';\r\nimport DrawToolbar from './src/ol/compenents/task/DrawTask';\r\n\r\nconst arcGISTileLayers = new ArcGISTileLayers();\r\nconst { overviewMapControl, scaleBarControl, zoomSildweControl, drawToolbar } = {\r\n    overviewMapControl: new OverviewMapControl({\r\n        layers: arcGISTileLayers.getTileLayers(),\r\n        collapsed: true //初始是否关闭鹰眼\r\n    }),\r\n    scaleBarControl: new ScaleBarControl({\r\n        minWidth: 140,\r\n        units: \"metric\"\r\n    }),\r\n\r\n    zoomSildweControl: new ZoomSildweControl(),\r\n    drawToolbar: new DrawToolbar({\r\n        type: \"Box\" //Square、Box、Star\r\n    }),\r\n}\r\n\r\n//设置底图图层\r\nmap.setLayerGroup(arcGISTileLayers.getLayerGroup());\r\n//添加鹰眼\r\nmap.addControl(overviewMapControl.getControl());\r\n//添加比例尺\r\nmap.addControl(scaleBarControl.getControl());\r\n//添加导航条\r\nmap.addControl(zoomSildweControl.getControl());\r\n\r\n//添加绘制工具\r\nmap.addInteraction(drawToolbar.getDrawToolBar());","/**\r\n * 加载esri切片地图\r\n * @author ydx\r\n * @date 2019-04-01\r\n */\r\nimport Config from '../../config/config';\r\nimport { Group as LayerGroup, Tile as TileLayer } from 'ol/layer';\r\nimport XYZ from 'ol/source/XYZ';\r\n\r\n\r\nexport default class ArcGISTileLayers {\r\n    constructor() {\r\n        this.ArcGISTileLayers = [\r\n            new TileLayer({\r\n                source: new XYZ({\r\n                    url: Config.LayersURL.TiledMapServiceLayerURL\r\n                })\r\n            }),\r\n            new TileLayer({\r\n                source: new XYZ({\r\n                    url: Config.LayersURL.TDTCVALayerURL\r\n                })\r\n            }),\r\n\r\n        ];\r\n    }\r\n\r\n    getTileLayers() {\r\n        return this.ArcGISTileLayers;\r\n    }\r\n\r\n\r\n    getLayerGroup() {\r\n        return new LayerGroup({\r\n            layers: this.ArcGISTileLayers\r\n        });\r\n    }\r\n};","/**\r\n * 鹰眼图\r\n * @author ydx\r\n * @date 2019-04-01\r\n */\r\nimport './OverviewMapControl.css';\r\nimport Config from '../../../config/config';\r\nimport { OverviewMap } from 'ol/control';\r\nimport View from 'ol/View';\r\n\r\nexport default class OverviewMapControl {\r\n    constructor(options) {\r\n        this.layers = options.layers;\r\n        this.collapsed = options.collapsed || true;\r\n    }\r\n\r\n    getControl() {\r\n        return new OverviewMap({\r\n            // see in overviewmap-custom.html to see the custom CSS used\r\n            className: 'ol-overviewmap ol-custom-overviewmap',\r\n            layers: this.layers,\r\n            collapseLabel: '\\u00BB',\r\n            label: '\\u00AB',\r\n            collapsed: this.collapsed,\r\n            view: new View({\r\n                projection: Config.mapConfig.projection\r\n            })\r\n        });\r\n    }\r\n}","/**\r\n * 比例尺\r\n * @author ydx\r\n * @date 2019-04-01\r\n */\r\nimport ScaleLine from 'ol/control/ScaleLine';\r\n\r\nexport default class ScaleBarControl {\r\n    constructor(options) {\r\n        this.minWidth = options.minWidth;\r\n        this.units = options.units | \"metric\";\r\n    }\r\n\r\n    getControl() {\r\n        return new ScaleLine({\r\n            className: 'ol-scale-line',\r\n            minWidth: this.minWidth,\r\n            units: this.units,\r\n        })\r\n    }\r\n}","/**\r\n * 鱼骨导航盘\r\n * @author ydx\r\n * @date 2019-04-02\r\n */\r\n// import ZoomSlider from 'ol/control/ZoomSlider';\r\nimport '../../../plugins/zoomSlider/BZoomSlider.css';\r\nimport ZoomSlider from '../../../plugins/zoomSlider/BZoomSlider';\r\n\r\nexport default class ZoomSliderControl {\r\n\tconstructor(options) {}\r\n\r\n\tgetControl() {\r\n\t\treturn new ZoomSlider();\r\n\t}\r\n}\r\n","/**\r\n * 绘制工具\r\n * @author ydx\r\n * @date 2019-04-04\r\n */\r\nimport DrawControl from '../controls/Draw/DrawControl';\r\n\r\nexport default class DrawTask extends DrawControl {\r\n    constructor(param) {\r\n        super(param);\r\n        this.type = param.type;\r\n    }\r\n\r\n    getDrawToolBar() {\r\n        return this.getInteraction(this.type);\r\n    }\r\n\r\n    navigation(target) {\r\n        var type = target;\r\n\r\n        switch (type) {\r\n            case \"漫游\":\r\n\r\n                break;\r\n            case \"放大\":\r\n\r\n                break;\r\n            case \"缩小\":\r\n\r\n                break;\r\n            case \"全图\":\r\n\r\n                break;\r\n            case \"禁用\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}